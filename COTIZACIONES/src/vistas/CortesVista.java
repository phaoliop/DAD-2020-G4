/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controller.DetalleOrdenCorteController;
import entity.DetalleOrdenCorte;
import exportarexcel.clsExportarExcel;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ARCRODINPC-06
 */
public class CortesVista extends javax.swing.JInternalFrame {

    /**
     * Creates new form CortesVista
     */
    String filtro="concat(doc.diametroDet,' ',a.unidadMedidaDiam)";
    
    public CortesVista() {
        initComponents();
        listaProforma(filtro, txtLike.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        comboBoxLike = new javax.swing.JComboBox<>();
        txtLike = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        buttonExportExcel = new javax.swing.JButton();

        setClosable(true);
        setTitle("Lista de cortes de Barras Cromadas y Tubos Bruñidos");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idDetOrd", "Num.Ord.Cort.", "Cod.Prod.", "Cod.Ubicación", "Cant.", "Nombre", "Diametro", "Longitud", "Procedencia", "Fecha Ord.Corte", "Cliente", "Num.Ped.", "Num.Cot.", "Invent."
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(94);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(45);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(75);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(10).setPreferredWidth(190);
            jTable1.getColumnModel().getColumn(11).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(12).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(13).setPreferredWidth(60);
        }

        comboBoxLike.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "NUM. ORDEN DE CORTE", "COD. PRODUCTO", "COD. UBICACIÓN", "NOMBRE", "DIAMETRO", "LONGITUD", "PROCEDENCIA", "FECHA DE CORTE", "CLIENTE", "NUM. PEDIDO", "NUM. COTIZACIÓN", "INVENTARIO", "BARRAS", "TUBOS" }));
        comboBoxLike.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxLikeItemStateChanged(evt);
            }
        });

        txtLike.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLikeKeyReleased(evt);
            }
        });

        jButton1.setText("Cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonExportExcel.setText("ExportExcel");
        buttonExportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExportExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboBoxLike, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtLike, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 441, Short.MAX_VALUE)
                        .addComponent(buttonExportExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxLike, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLike, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonExportExcel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtLikeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLikeKeyReleased
        listaProforma(filtro, txtLike.getText());
    }//GEN-LAST:event_txtLikeKeyReleased

    private void comboBoxLikeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxLikeItemStateChanged
        if (comboBoxLike.getSelectedItem() == "NUM. ORDEN DE CORTE") {
            filtro = "oc.numOrdCort";
            listaProforma(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxLike.getSelectedItem() == "COD. PRODUCTO") {
            filtro = "a.codigoArticulo";
            listaProforma(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxLike.getSelectedItem() == "COD. UBICACIÓN") {
            filtro = "a.codigoUbicacion";
            listaProforma(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxLike.getSelectedItem() == "NOMBRE") {
            filtro = "a.nombre";
            listaProforma(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxLike.getSelectedItem() == "DIAMETRO") {
            filtro = "concat(doc.diametroDet,' ',a.unidadMedidaDiam)";
            listaProforma(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxLike.getSelectedItem() == "LONGITUD") {
            filtro = "doc.longitudOrden";
            listaProforma(filtro, txtLike.getText());
            System.out.println(filtro);
        }else if (comboBoxLike.getSelectedItem() == "PROCEDENCIA") {
            filtro = "a.procedencia";
            listaProforma(filtro, txtLike.getText());
            System.out.println(filtro);
        }else if (comboBoxLike.getSelectedItem() == "FECHA DE CORTE") {
            filtro = "oc.fecha";
            listaProforma(filtro, txtLike.getText());
            System.out.println(filtro);
        }else if (comboBoxLike.getSelectedItem() == "CLIENTE") {
            filtro = "c.razonSocial";
            listaProforma(filtro, txtLike.getText());
            System.out.println(filtro);
        }else if (comboBoxLike.getSelectedItem() == "NUM. PEDIDO") {
            filtro = "p.numPedido";
            listaProforma(filtro, txtLike.getText());
            System.out.println(filtro);
        }else if (comboBoxLike.getSelectedItem() == "NUM. COTIZACIÓN") {
            filtro = "prof.codProforma";
            listaProforma(filtro, txtLike.getText());
            System.out.println(filtro);
        }else if (comboBoxLike.getSelectedItem() == "INVENTARIO") {
            filtro = "i.idInventario";
            listaProforma(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxLike.getSelectedItem() == "BARRAS") {
            filtro = "a.nombre";
            listaProforma(filtro, "BARRA");
            System.out.println(filtro);
        } else if (comboBoxLike.getSelectedItem() == "TUBOS") {
            filtro = "a.nombre";
            listaProforma(filtro, "TUBO");
            System.out.println(filtro);
        } else if (comboBoxLike.getSelectedItem() == "SELECCIONAR") {
            filtro = "concat(doc.diametroDet,' ',a.unidadMedidaDiam)";
            listaProforma(filtro, txtLike.getText());
            System.out.println(filtro);
        }
    }//GEN-LAST:event_comboBoxLikeItemStateChanged

    private void buttonExportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExportExcelActionPerformed
        clsExportarExcel objeto = new clsExportarExcel();
        try {
            objeto.exportarExcel(jTable1);
        } catch (IOException ex) {
            Logger.getLogger(CajaChicaRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonExportExcelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonExportExcel;
    private javax.swing.JComboBox<String> comboBoxLike;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtLike;
    // End of variables declaration//GEN-END:variables

    DetalleOrdenCorteController detalleordencortecontroler = new DetalleOrdenCorteController();
    DetalleOrdenCorte detOrdCort;

    void listaProforma(String valorFiltro,String filtrolike) {
        List<DetalleOrdenCorte> lista;
        try {
            lista = detalleordencortecontroler.DetalleOrdenCorteFiltrar(valorFiltro, filtrolike);
            verProforma(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    void verProforma(List<DetalleOrdenCorte> lista) {
        String numPedido;
        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        tabla.setRowCount(0);
        for (DetalleOrdenCorte detOrdCort : lista) {
            numPedido=String.format("%06d",detOrdCort.getNumPedido());
            Object[] fila = {detOrdCort.getIdDetalleOrdenCorte(),detOrdCort.getNumOrdenCorte(),detOrdCort.getCodArt(),
            detOrdCort.getCodUbi(),detOrdCort.getCantidad(),detOrdCort.getNombre(), detOrdCort.getDiametro(),detOrdCort.getLongitud()
            , detOrdCort.getProcedencia(), detOrdCort.getFecha(), detOrdCort.getCliente(), numPedido, detOrdCort.getNumCot(),
            detOrdCort.getInventario()};
            tabla.addRow(fila);
        }
    }


}
