/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controller.DireccionAnexaProvController;
import controller.ProveedorController;
import entity.DireccionAnexaProv;
import entity.Proveedor;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ARCRODINPC-06
 */
public class DireccionAnexaProveedor extends javax.swing.JInternalFrame {

    /**
     * Creates new form DireccionAnexaProveedor
     */
    int idProv;
    int idDir;
    
    int ultimoId;
    String campo1="";
    
    int tabla;
    String dirAnexa;
    
    public DireccionAnexaProveedor() throws Exception {
        initComponents();
        consultarProveedor(Proveedores.y);
        idProv=Proveedores.y;
        listaDireccionAnexaProv(idProv);
        habilitarInicio();
        idDir=0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        labelIdDirAnexa = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtProveedor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDirecAnexa = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObs = new javax.swing.JTextArea();
        buttonNuevo = new javax.swing.JButton();
        buttonRegistrar = new javax.swing.JButton();
        buttonModificar = new javax.swing.JButton();
        buttonGuardar = new javax.swing.JButton();
        buttonEliminar = new javax.swing.JButton();
        buttonLimpiar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonCerrar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Direcciones Anexas del Proveedor");

        jLabel1.setText("N°:");

        labelIdDirAnexa.setText("000000");

        jLabel3.setText("Proveedor:");

        jLabel4.setText("Dirección Anexa:");

        jLabel5.setText("Observación:");

        txtObs.setColumns(20);
        txtObs.setRows(5);
        jScrollPane1.setViewportView(txtObs);

        buttonNuevo.setText("Nuevo");
        buttonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNuevoActionPerformed(evt);
            }
        });

        buttonRegistrar.setText("Registrar");
        buttonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegistrarActionPerformed(evt);
            }
        });

        buttonModificar.setText("Modificar");
        buttonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarActionPerformed(evt);
            }
        });

        buttonGuardar.setText("Guardar");
        buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGuardarActionPerformed(evt);
            }
        });

        buttonEliminar.setText("Eliminar");
        buttonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminarActionPerformed(evt);
            }
        });

        buttonLimpiar.setText("Limpiar");
        buttonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLimpiarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idDirAnex", "Dirección", "Observación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(25);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(360);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(200);
        }

        buttonCerrar.setText("Cerrar");
        buttonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonCerrar)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonNuevo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonRegistrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonModificar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonGuardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonEliminar)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(labelIdDirAnexa)
                                        .addGap(37, 37, 37)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 12, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel4))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtDirecAnexa)
                                            .addComponent(jScrollPane1))))
                                .addGap(18, 18, 18)
                                .addComponent(buttonLimpiar)))
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(labelIdDirAnexa)
                    .addComponent(jLabel3)
                    .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDirecAnexa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonLimpiar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonNuevo)
                    .addComponent(buttonRegistrar)
                    .addComponent(buttonModificar)
                    .addComponent(buttonGuardar)
                    .addComponent(buttonEliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonCerrar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_buttonCerrarActionPerformed

    private void buttonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegistrarActionPerformed

        if ("".equals(txtDirecAnexa.getText())) {
            JOptionPane.showMessageDialog(null, "Llenar la dirección");
        } else {
            procesar(1);
            try {
                consultarUltimoId(Proveedores.y);
            } catch (Exception ex) {
                Logger.getLogger(DireccionAnexaProveedor.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                consultar(idDir);
            } catch (Exception ex) {
                Logger.getLogger(DireccionAnexaProveedor.class.getName()).log(Level.SEVERE, null, ex);
            }
            listaDireccionAnexaProv(idProv);
            habilitarRegistrar();
        }
    }//GEN-LAST:event_buttonRegistrarActionPerformed

    private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGuardarActionPerformed
       procesar(2);
       listaDireccionAnexaProv(idProv);
       habilitarGuardar();
    }//GEN-LAST:event_buttonGuardarActionPerformed

    private void buttonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminarActionPerformed
       procesar(3);
       listaDireccionAnexaProv(idProv);
       habilitarEliminar();
       limpiar();
    }//GEN-LAST:event_buttonEliminarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        tabla = jTable1.getSelectedRow();
       dirAnexa= jTable1.getValueAt(tabla, 0).toString();
       idDir=Integer.parseInt(dirAnexa);
        try {
            consultar(idDir);
        } catch (Exception ex) {
            Logger.getLogger(DireccionAnexaProveedor.class.getName()).log(Level.SEVERE, null, ex);
        }
        habilitarBuscar();
       
    }//GEN-LAST:event_jTable1MouseClicked

    private void buttonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLimpiarActionPerformed
        limpiar();
        habilitarInicio();
    }//GEN-LAST:event_buttonLimpiarActionPerformed

    private void buttonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNuevoActionPerformed
        habilitarNuevo();
    }//GEN-LAST:event_buttonNuevoActionPerformed

    private void buttonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarActionPerformed
        habilitarModificar();
    }//GEN-LAST:event_buttonModificarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCerrar;
    private javax.swing.JButton buttonEliminar;
    private javax.swing.JButton buttonGuardar;
    private javax.swing.JButton buttonLimpiar;
    private javax.swing.JButton buttonModificar;
    private javax.swing.JButton buttonNuevo;
    private javax.swing.JButton buttonRegistrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelIdDirAnexa;
    private javax.swing.JTextField txtDirecAnexa;
    private javax.swing.JTextArea txtObs;
    private javax.swing.JTextField txtProveedor;
    // End of variables declaration//GEN-END:variables

    ProveedorController proveedorcontroler = new ProveedorController();
    Proveedor proveedor;
    
    DireccionAnexaProvController direccioncontroler= new DireccionAnexaProvController();
    DireccionAnexaProv direccion;


    //---------------------------- Procesar ----------------------------------------
    
    private void procesar(int op) {
        direccion = leerDatos();
        try {
            String msg = direccioncontroler.DireccionAnexaProvProcesar(direccion, op);
            JOptionPane.showMessageDialog(null, msg);
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("Error" + e.getMessage());
        }
    }

//----------------------- Leer Datos -------------------------------------------
    private DireccionAnexaProv leerDatos() {
        DireccionAnexaProv direc = new DireccionAnexaProv();

        direc.setIdDirAnexa(idDir);
        direc.setIdProv(idProv);
        direc.setDirec(txtDirecAnexa.getText());
        direc.setObs(txtObs.getText());
        direc.setCampo1(campo1);
      
        return direc;
    }
    
   
    
//---------------------------- Consultas ---------------------------------------
  
    private void consultarUltimoId(int idCli) throws Exception {
        direccion= direccioncontroler.DireccionAnexaProvBuscarUltimoId(idCli);
        if (direccion != null) {
            ultimoId = direccion.getIdDirAnexa();
            System.out.println("ultimoId : "+ultimoId);
            idDir=ultimoId;
        }else{
            
        }
  
    }
    
     void consultar(int idDi) throws Exception {
       direccion=direccioncontroler.DireccionAnexaProvBuscar(idDi);
        if (direccion!=null) {
            labelIdDirAnexa.setText(Integer.toString(direccion.getIdDirAnexa()));
            idDir=direccion.getIdDirAnexa();
            System.out.println("idireccion: "+idDir);
            Proveedores.y=direccion.getIdDirAnexa();
            idProv=direccion.getIdProv();
            System.out.println("idCliente: "+Proveedores.y);
            txtDirecAnexa.setText(direccion.getDirec());
            txtObs.setText(direccion.getObs());
          
                   
          }else{
          JOptionPane.showMessageDialog(null, "Articulo no registrado");
          //System.out.println("Error");
        }
    }
     
        private void consultarProveedor(int id) throws Exception {
       proveedor = proveedorcontroler.ProveedorBuscarId(id);
        if (proveedor!= null) {

           txtProveedor.setText(proveedor.getRazonSocial());
            
            
        } else {
            JOptionPane.showMessageDialog(null, "Proveedor no registrado");
            //System.out.println("Error");
        }
    }

  //----------------------------- Tabla ----------------------------------------
        
    private void listaDireccionAnexaProv(int id) {
        List<DireccionAnexaProv> lista;
        try {
            
            lista = direccioncontroler.DireccionAnexaProvListar(id); 
            verDireccionProv(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    private void verDireccionProv(List<DireccionAnexaProv> lista) {

        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        tabla.setRowCount(0);
        for (DireccionAnexaProv dir : lista) {
            Object[] fila = {dir.getIdDirAnexa(),dir.getDirec(),dir.getObs()};
            tabla.addRow(fila);
        }
    }
  
 //--------------------------- Habilitar ---------------------------
     void habilitarInicio(){
         
         buttonLimpiar.setEnabled(true);
         buttonNuevo.setEnabled(true);
         buttonRegistrar.setEnabled(false);
         buttonModificar.setEnabled(false);
         buttonGuardar.setEnabled(false);
         buttonEliminar.setEnabled(false);
         
                
         txtProveedor.setEnabled(false);
         txtDirecAnexa.setEnabled(false);
         txtObs.setEnabled(false);
         

     }
     
     void habilitarBuscar(){ 
         
         buttonLimpiar.setEnabled(true);
         buttonNuevo.setEnabled(false);
         buttonRegistrar.setEnabled(false);
         buttonModificar.setEnabled(true);
         buttonGuardar.setEnabled(false);
         buttonEliminar.setEnabled(true);
         
         txtProveedor.setEnabled(false);
         txtDirecAnexa.setEnabled(false);
         txtObs.setEnabled(false);
         
     }
     
     void habilitarNuevo(){
         
         buttonLimpiar.setEnabled(true);
         buttonNuevo.setEnabled(false);
         buttonRegistrar.setEnabled(true);
         buttonModificar.setEnabled(false);
         buttonGuardar.setEnabled(false);
         buttonEliminar.setEnabled(false);
         
         txtProveedor.setEnabled(true);
         txtDirecAnexa.setEnabled(true);
         txtObs.setEnabled(true);
     
     }
     
     void habilitarRegistrar(){
     
         buttonLimpiar.setEnabled(true);
         buttonNuevo.setEnabled(false);
         buttonRegistrar.setEnabled(false);
         buttonModificar.setEnabled(true);
         buttonGuardar.setEnabled(false);
         buttonEliminar.setEnabled(true);
         
         txtProveedor.setEnabled(false);
         txtDirecAnexa.setEnabled(false);
         txtObs.setEnabled(false);
     }
     
     void habilitarModificar(){
     
         buttonLimpiar.setEnabled(true);
         buttonNuevo.setEnabled(false);
         buttonRegistrar.setEnabled(false);
         buttonModificar.setEnabled(false);
         buttonGuardar.setEnabled(true);
         buttonEliminar.setEnabled(false);
         
         txtProveedor.setEnabled(true);
         txtDirecAnexa.setEnabled(true);
         txtObs.setEnabled(true);
     }
     void habilitarGuardar(){
     
          buttonLimpiar.setEnabled(true);
         buttonNuevo.setEnabled(false);
         buttonRegistrar.setEnabled(false);
         buttonModificar.setEnabled(true);
         buttonGuardar.setEnabled(false);
         buttonEliminar.setEnabled(true);
         
         txtProveedor.setEnabled(false);
         txtDirecAnexa.setEnabled(false);
         txtObs.setEnabled(false);
     }
     
     void habilitarEliminar(){
     
         buttonLimpiar.setEnabled(true);
         buttonNuevo.setEnabled(true);
         buttonRegistrar.setEnabled(false);
         buttonModificar.setEnabled(false);
         buttonGuardar.setEnabled(false);
         buttonEliminar.setEnabled(false);
         
         txtProveedor.setEnabled(false);
         txtDirecAnexa.setEnabled(false);
         txtObs.setEnabled(false);
     }

     
     void limpiar(){
     
         txtDirecAnexa.setText("");
         txtObs.setText("");
         idDir=0;
         labelIdDirAnexa.setText("0000");
     
     }
    
}
