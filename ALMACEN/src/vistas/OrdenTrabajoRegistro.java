/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controller.ClienteController;
import controller.DetalleOrdenTrabajoController;
import controller.OrdenTrabajoController;
import controller.PedidoController;
import controller.ProformaController;
import entity.Cliente;
import entity.DetalleOrdenTrabajo;
import entity.OrdenTrabajo;
import entity.Pedido;
import entity.Proforma;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import reportes.GenerarReporte;

/**
 *
 * @author ARCRODINPC-05
 */
public class OrdenTrabajoRegistro extends javax.swing.JInternalFrame {

    /**
     * Creates new form OrdenTrabajoRegistro
     */
    
    int dia1p, dia2p;
    String valorDia;
    
    int idOrdenTrabajo;
    int anioOT;
    int idPedido;
    int anioP;
    int numPedido;
    int idCotizacion;
    String numeroCotizacion;
    int idCliente;
    String numOrdenTrabajo;
    String servicio;
    String recepcion;
    String recepcionCombo;
    String destino;
    String destinoCombo;
    String fechaEmision;
    String fechaInicio;
    String fechaFinal;
    String fechaEntrega;
    String estado;
    String estadoCombo;
    String observacion;
    
    int tabla;
    int idDetalleOrdenTrabajo;
    
    //Para generar nuevo numero de orden
    String numo;
    int num;
    int ultimoIdOT;
 
    static int numDePedparaDetalle;
    static int anioPedidoEnDetalle;
    static String numOTParaDetalle;
    static int idOrdenTrabajoParaDetalle;
    
    boolean mensaje=false;

    public OrdenTrabajoRegistro() throws ParseException {
        initComponents();
        habilitarInicio();
        txtAnioPedido.setText(anioActual());
        txtAnioOrden.setText(anioActual());
        
        txtFechaEmision.setText(fechaActual());
        labelD1.setText(diaSemana(txtFechaEmision.getText()));
        System.out.println("el dia de la fecha de emision es :"+diaFecha(txtFechaEmision.getText()));
//        fechaInicio = sumarDias(txtFechaEmision.getText(), 1);
        txtFechaInicio.setText(fechaActual());
        labelD2.setText(diaSemana(txtFechaInicio.getText()));
        txtFechaFinal.setText("");
        labelD3.setText("---------");
        txtFechaEntrega.setText("");
        labelD4.setText("---------");
        
        comboBoxServicio.setSelectedIndex(0);
        comboBoxEstado.setSelectedIndex(1);
        comboBoxRecepcion.setSelectedIndex(2);
        comboBoxDestino.setSelectedIndex(1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPedido = new javax.swing.JButton();
        txtNumPedido = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        labelNumCotizacion = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNumOrdenTrabajo = new javax.swing.JTextField();
        buttonBuscarOT = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtAnioOrden = new javax.swing.JTextField();
        buttonLimpiar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtAnioPedido = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtFechaEmision = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtFechaInicio = new javax.swing.JTextField();
        buttonBuscarPedido = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtFechaFinal = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtRazSocial = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtRuc = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        comboBoxServicio = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        comboBoxRecepcion = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        comboBoxDestino = new javax.swing.JComboBox<>();
        buttonModificar = new javax.swing.JButton();
        buttonGuardar = new javax.swing.JButton();
        buttonEliminar = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        comboBoxEstado = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        txtObservacion = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        buttonNuevo = new javax.swing.JButton();
        labelD1 = new javax.swing.JLabel();
        labelD2 = new javax.swing.JLabel();
        labelD3 = new javax.swing.JLabel();
        labelD4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonAgregarDetalle = new javax.swing.JButton();
        buttonRegistrar = new javax.swing.JButton();
        txtDiasHabiles = new javax.swing.JTextField();
        buttonAnterior = new javax.swing.JButton();
        buttonSiguiente = new javax.swing.JButton();
        buttonPdf = new javax.swing.JButton();
        txtFechaEntrega = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        labelN1 = new javax.swing.JLabel();
        labelN2 = new javax.swing.JLabel();
        labelN3 = new javax.swing.JLabel();
        labelN4 = new javax.swing.JLabel();
        labelN5 = new javax.swing.JLabel();
        labelN6 = new javax.swing.JLabel();
        labelN7 = new javax.swing.JLabel();
        labelN8 = new javax.swing.JLabel();
        labelN9 = new javax.swing.JLabel();
        labelN10 = new javax.swing.JLabel();
        labelN11 = new javax.swing.JLabel();
        labelN12 = new javax.swing.JLabel();
        labelN13 = new javax.swing.JLabel();
        labelN14 = new javax.swing.JLabel();
        labelN15 = new javax.swing.JLabel();
        labelN16 = new javax.swing.JLabel();
        labelN17 = new javax.swing.JLabel();
        labelN18 = new javax.swing.JLabel();
        labelN19 = new javax.swing.JLabel();
        labelN20 = new javax.swing.JLabel();
        labelN21 = new javax.swing.JLabel();
        labelN22 = new javax.swing.JLabel();
        labelN23 = new javax.swing.JLabel();
        labelN24 = new javax.swing.JLabel();
        labelN25 = new javax.swing.JLabel();
        labelN26 = new javax.swing.JLabel();
        labelN27 = new javax.swing.JLabel();
        labelN28 = new javax.swing.JLabel();
        labelN29 = new javax.swing.JLabel();
        labelN30 = new javax.swing.JLabel();
        labelN31 = new javax.swing.JLabel();
        labelN32 = new javax.swing.JLabel();
        labelN33 = new javax.swing.JLabel();
        labelN34 = new javax.swing.JLabel();
        labelN35 = new javax.swing.JLabel();
        labelN36 = new javax.swing.JLabel();
        labelN37 = new javax.swing.JLabel();
        labelN38 = new javax.swing.JLabel();
        labelN39 = new javax.swing.JLabel();
        labelN40 = new javax.swing.JLabel();
        labelN41 = new javax.swing.JLabel();
        labelN42 = new javax.swing.JLabel();
        labelN43 = new javax.swing.JLabel();
        labelN44 = new javax.swing.JLabel();
        labelN45 = new javax.swing.JLabel();
        label1 = new javax.swing.JLabel();
        label2 = new javax.swing.JLabel();
        label3 = new javax.swing.JLabel();
        label4 = new javax.swing.JLabel();
        label5 = new javax.swing.JLabel();
        label6 = new javax.swing.JLabel();
        label7 = new javax.swing.JLabel();
        label8 = new javax.swing.JLabel();
        label9 = new javax.swing.JLabel();
        label10 = new javax.swing.JLabel();
        label11 = new javax.swing.JLabel();
        label12 = new javax.swing.JLabel();
        label13 = new javax.swing.JLabel();
        label14 = new javax.swing.JLabel();
        label15 = new javax.swing.JLabel();
        label16 = new javax.swing.JLabel();
        label17 = new javax.swing.JLabel();
        label18 = new javax.swing.JLabel();
        label19 = new javax.swing.JLabel();
        label20 = new javax.swing.JLabel();
        label21 = new javax.swing.JLabel();
        label22 = new javax.swing.JLabel();
        label23 = new javax.swing.JLabel();
        label24 = new javax.swing.JLabel();
        label25 = new javax.swing.JLabel();
        label26 = new javax.swing.JLabel();
        label27 = new javax.swing.JLabel();
        label28 = new javax.swing.JLabel();
        label29 = new javax.swing.JLabel();
        label30 = new javax.swing.JLabel();
        label31 = new javax.swing.JLabel();
        label32 = new javax.swing.JLabel();
        label33 = new javax.swing.JLabel();
        label34 = new javax.swing.JLabel();
        label35 = new javax.swing.JLabel();
        label36 = new javax.swing.JLabel();
        label37 = new javax.swing.JLabel();
        label38 = new javax.swing.JLabel();
        label39 = new javax.swing.JLabel();
        label40 = new javax.swing.JLabel();
        label41 = new javax.swing.JLabel();
        label42 = new javax.swing.JLabel();
        label43 = new javax.swing.JLabel();
        label44 = new javax.swing.JLabel();
        label45 = new javax.swing.JLabel();
        buttonImprimir = new javax.swing.JButton();
        jLabel62 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaMedidaIngreso = new javax.swing.JTextArea();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaMedidaFinaliza = new javax.swing.JTextArea();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Orden de Trabajo");

        buttonPedido.setText("N° Pedido:");
        buttonPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPedidoActionPerformed(evt);
            }
        });

        jLabel1.setText("Según Cotización N°: ");

        labelNumCotizacion.setText("000000");

        jLabel3.setText("Orden Trabajo N°:");

        buttonBuscarOT.setText("Buscar");
        buttonBuscarOT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarOTActionPerformed(evt);
            }
        });

        jLabel5.setText("Año:");

        buttonLimpiar.setText("Limpiar");
        buttonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLimpiarActionPerformed(evt);
            }
        });

        jLabel4.setText("Año:");

        jLabel9.setText("Fecha de Emisión:");

        jLabel10.setText("Fecha de Inicio:");

        txtFechaInicio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFechaInicioKeyPressed(evt);
            }
        });

        buttonBuscarPedido.setText("Buscar");
        buttonBuscarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarPedidoActionPerformed(evt);
            }
        });

        jLabel11.setText("Fecha Finalización:");

        txtFechaFinal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFechaFinalKeyPressed(evt);
            }
        });

        jLabel17.setText("Cliente:");

        jLabel18.setText("R.U.C.:");

        jLabel19.setText("Fecha Entrega:");

        jLabel12.setText("Tipo de Servicio:");

        comboBoxServicio.setEditable(true);
        comboBoxServicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ".", "CROMADO DURO INDUSTRIAL", "BRUÑIDO A CILINDRO", "REPARACIÓN DE CILINDRO HIDRAULICO", "MECANIZADO", "RECTIFICADO", "FABRICACION DE CILINDRO HIDRAULICO" }));
        comboBoxServicio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                comboBoxServicioKeyTyped(evt);
            }
        });

        jLabel13.setText("Recepción:");

        comboBoxRecepcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "OFICINA", "PLANTA" }));
        comboBoxRecepcion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxRecepcionItemStateChanged(evt);
            }
        });

        jLabel14.setText("Servicio para:");

        comboBoxDestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "LIMA", "PROVINCIA", "PLANTA" }));
        comboBoxDestino.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxDestinoItemStateChanged(evt);
            }
        });

        buttonModificar.setText("Modificar");
        buttonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarActionPerformed(evt);
            }
        });

        buttonGuardar.setText("Guardar");
        buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGuardarActionPerformed(evt);
            }
        });

        buttonEliminar.setText("Eliminar");
        buttonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminarActionPerformed(evt);
            }
        });

        jLabel15.setText("Estado:");

        comboBoxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "EN PROCESO", "FINALIZADO", "PENDIENTE" }));
        comboBoxEstado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxEstadoItemStateChanged(evt);
            }
        });

        jLabel16.setText("Observación:");

        jButton1.setText("Cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonNuevo.setText("Nuevo");
        buttonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNuevoActionPerformed(evt);
            }
        });

        labelD1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelD1.setText("jLabel2");

        labelD2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelD2.setText("jLabel20");

        labelD3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelD3.setText("jLabel21");

        labelD4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelD4.setText("jLabel22");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idDet", "Item", "Cant.", "Descripción general del trabajo en curso", "Tolerancia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(15);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(45);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(45);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(580);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(230);
        }

        buttonAgregarDetalle.setText("Agregar Detalle");
        buttonAgregarDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAgregarDetalleActionPerformed(evt);
            }
        });

        buttonRegistrar.setText("Registrar");
        buttonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegistrarActionPerformed(evt);
            }
        });

        buttonAnterior.setText("<<Anterior");
        buttonAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAnteriorActionPerformed(evt);
            }
        });

        buttonSiguiente.setText("Siguiente>>");
        buttonSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSiguienteActionPerformed(evt);
            }
        });

        buttonPdf.setText("Ver PDF");
        buttonPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPdfActionPerformed(evt);
            }
        });

        txtFechaEntrega.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFechaEntregaKeyPressed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("L");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("M");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("M");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("J");

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("V");

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("S");

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("D");

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("L");

        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("M");

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("M");

        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("J");

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("V");

        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("S");

        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("D");

        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("L");

        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("M");

        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("M");

        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("J");

        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("V");

        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setText("S");

        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("D");

        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("L");

        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel39.setText("M");

        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel40.setText("M");

        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("J");

        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("V");

        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel43.setText("S");

        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel44.setText("D");

        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel45.setText("L");

        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel46.setText("M");

        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel47.setText("M");

        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel48.setText("J");

        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setText("V");

        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel50.setText("S");

        jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel51.setText("D");

        jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel52.setText("L");

        jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel53.setText("M");

        jLabel54.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel54.setText("M");

        jLabel55.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel55.setText("J");

        jLabel56.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel56.setText("V");

        jLabel57.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel57.setText("S");

        jLabel58.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel58.setText("D");

        jLabel59.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel59.setText("L");

        jLabel60.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel60.setText("M");

        jLabel61.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel61.setText("M");

        labelN1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN1.setText("00");

        labelN2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN2.setText("00");

        labelN3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN3.setText("00");

        labelN4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN4.setText("00");

        labelN5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN5.setText("00");

        labelN6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN6.setText("00");

        labelN7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN7.setText("00");

        labelN8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN8.setText("00");

        labelN9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN9.setText("00");

        labelN10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN10.setText("00");

        labelN11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN11.setText("00");

        labelN12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN12.setText("00");

        labelN13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN13.setText("00");

        labelN14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN14.setText("00");

        labelN15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN15.setText("00");

        labelN16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN16.setText("00");

        labelN17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN17.setText("00");

        labelN18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN18.setText("00");

        labelN19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN19.setText("00");

        labelN20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN20.setText("00");

        labelN21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN21.setText("00");

        labelN22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN22.setText("00");

        labelN23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN23.setText("00");

        labelN24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN24.setText("00");

        labelN25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN25.setText("00");

        labelN26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN26.setText("00");

        labelN27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN27.setText("00");

        labelN28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN28.setText("00");

        labelN29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN29.setText("00");

        labelN30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN30.setText("00");

        labelN31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN31.setText("00");

        labelN32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN32.setText("00");

        labelN33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN33.setText("00");

        labelN34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN34.setText("00");

        labelN35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN35.setText("00");

        labelN36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN36.setText("00");

        labelN37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN37.setText("00");

        labelN38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN38.setText("00");

        labelN39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN39.setText("00");

        labelN40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN40.setText("00");

        labelN41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN41.setText("00");

        labelN42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN42.setText("00");

        labelN43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN43.setText("00");

        labelN44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN44.setText("00");

        labelN45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN45.setText("00");

        label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label1.setText("O");

        label2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label2.setText("O");

        label3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label3.setText("O");

        label4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label4.setText("O");

        label5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label5.setText("O");

        label6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label6.setText("O");

        label7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label7.setText("O");

        label8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label8.setText("O");

        label9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label9.setText("O");

        label10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label10.setText("O");

        label11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label11.setText("O");

        label12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label12.setText("O");

        label13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label13.setText("O");

        label14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label14.setText("O");

        label15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label15.setText("O");

        label16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label16.setText("O");

        label17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label17.setText("O");

        label18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label18.setText("O");

        label19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label19.setText("O");

        label20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label20.setText("O");

        label21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label21.setText("O");

        label22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label22.setText("O");

        label23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label23.setText("O");

        label24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label24.setText("O");

        label25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label25.setText("O");

        label26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label26.setText("O");

        label27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label27.setText("O");

        label28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label28.setText("O");

        label29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label29.setText("O");

        label30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label30.setText("O");

        label31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label31.setText("O");

        label32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label32.setText("O");

        label33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label33.setText("O");

        label34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label34.setText("O");

        label35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label35.setText("O");

        label36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label36.setText("O");

        label37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label37.setText("O");

        label38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label38.setText("O");

        label39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label39.setText("O");

        label40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label40.setText("O");

        label41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label41.setText("O");

        label42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label42.setText("O");

        label43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label43.setText("O");

        label44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label44.setText("O");

        label45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label45.setText("O");

        buttonImprimir.setText("Imprimir ");
        buttonImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonImprimirActionPerformed(evt);
            }
        });

        jLabel62.setText("Medidas al ingreso");

        txtAreaMedidaIngreso.setColumns(20);
        txtAreaMedidaIngreso.setRows(5);
        jScrollPane2.setViewportView(txtAreaMedidaIngreso);

        jLabel63.setText("del componente");

        jLabel64.setText(":");

        jLabel65.setText("Medidas al finalizar");

        jLabel66.setText("del componente");

        txtAreaMedidaFinaliza.setColumns(20);
        txtAreaMedidaFinaliza.setRows(5);
        jScrollPane3.setViewportView(txtAreaMedidaFinaliza);

        jLabel67.setText(":");

        jLabel68.setText("Días hábiles en planta de prod.: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label13, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label14, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label15, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label16, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label17, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label18, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label19, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label20, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label21, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label22, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label23, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label24, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label25, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label26, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label27, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label28, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label29, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label30, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label31, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label32, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label33, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label34, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label35, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label36, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label37, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label38, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label39, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label40, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label41, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label42, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label43, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label44, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label45, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buttonPdf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buttonImprimir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(215, 215, 215)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtAnioPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(buttonPedido))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labelNumCotizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtNumPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(buttonBuscarPedido)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtAnioOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtNumOrdenTrabajo, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(buttonBuscarOT)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(buttonLimpiar))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel17)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtRazSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel18)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtRuc, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                        .addComponent(jLabel12)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(comboBoxServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                        .addComponent(jLabel9)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(labelD1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtFechaEmision, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel10)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(labelD2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel13)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(comboBoxRecepcion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel11)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(labelD3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel15)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(comboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel16)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtObservacion, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel19)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(labelD4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtFechaEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(buttonAgregarDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel14)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(comboBoxDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(buttonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(buttonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(buttonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(buttonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buttonNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 912, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelN1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN9, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN10, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN12, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN13, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN14, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN15, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN16, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN17, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN18, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN19, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN20, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN21, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN22, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN23, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN24, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN25, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN26, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN27, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN28, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN29, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN30, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN31, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN32, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN33, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN34, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN35, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN36, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN37, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN38, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN39, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN40, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN41, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN42, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN43, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN44, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelN45, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel62)
                                    .addComponent(jLabel63))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel66)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel65)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel68)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDiasHabiles, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(565, 565, 565)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonPedido)
                    .addComponent(txtNumPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtNumOrdenTrabajo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBuscarOT)
                    .addComponent(jLabel5)
                    .addComponent(txtAnioOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonLimpiar)
                    .addComponent(jLabel4)
                    .addComponent(txtAnioPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBuscarPedido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(labelNumCotizacion)
                    .addComponent(jLabel17)
                    .addComponent(txtRazSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(txtRuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonNuevo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonRegistrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonEliminar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelD4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelD3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelD1)
                                .addComponent(labelD2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtFechaEmision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(txtFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(txtFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(txtFechaEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(comboBoxServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel13)
                                .addComponent(comboBoxRecepcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14)
                                .addComponent(comboBoxDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(txtObservacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(buttonAgregarDetalle))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32)
                    .addComponent(jLabel33)
                    .addComponent(jLabel34)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36)
                    .addComponent(jLabel37)
                    .addComponent(jLabel38)
                    .addComponent(jLabel39)
                    .addComponent(jLabel40)
                    .addComponent(jLabel41)
                    .addComponent(jLabel42)
                    .addComponent(jLabel43)
                    .addComponent(jLabel44)
                    .addComponent(jLabel45)
                    .addComponent(jLabel46)
                    .addComponent(jLabel47)
                    .addComponent(jLabel48)
                    .addComponent(jLabel49)
                    .addComponent(jLabel50)
                    .addComponent(jLabel51)
                    .addComponent(jLabel52)
                    .addComponent(jLabel53)
                    .addComponent(jLabel54)
                    .addComponent(jLabel55)
                    .addComponent(jLabel56)
                    .addComponent(jLabel57)
                    .addComponent(jLabel58)
                    .addComponent(jLabel59)
                    .addComponent(jLabel60)
                    .addComponent(jLabel61))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelN1)
                    .addComponent(labelN2)
                    .addComponent(labelN3)
                    .addComponent(labelN4)
                    .addComponent(labelN5)
                    .addComponent(labelN6)
                    .addComponent(labelN7)
                    .addComponent(labelN8)
                    .addComponent(labelN9)
                    .addComponent(labelN10)
                    .addComponent(labelN11)
                    .addComponent(labelN12)
                    .addComponent(labelN13)
                    .addComponent(labelN14)
                    .addComponent(labelN15)
                    .addComponent(labelN16)
                    .addComponent(labelN17)
                    .addComponent(labelN18)
                    .addComponent(labelN19)
                    .addComponent(labelN20)
                    .addComponent(labelN21)
                    .addComponent(labelN22)
                    .addComponent(labelN23)
                    .addComponent(labelN24)
                    .addComponent(labelN25)
                    .addComponent(labelN26)
                    .addComponent(labelN27)
                    .addComponent(labelN28)
                    .addComponent(labelN29)
                    .addComponent(labelN30)
                    .addComponent(labelN31)
                    .addComponent(labelN32)
                    .addComponent(labelN33)
                    .addComponent(labelN34)
                    .addComponent(labelN35)
                    .addComponent(labelN36)
                    .addComponent(labelN37)
                    .addComponent(labelN38)
                    .addComponent(labelN39)
                    .addComponent(labelN40)
                    .addComponent(labelN41)
                    .addComponent(labelN42)
                    .addComponent(labelN43)
                    .addComponent(labelN44)
                    .addComponent(labelN45))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label1)
                    .addComponent(label2)
                    .addComponent(label3)
                    .addComponent(label4)
                    .addComponent(label5)
                    .addComponent(label6)
                    .addComponent(label7)
                    .addComponent(label8)
                    .addComponent(label9)
                    .addComponent(label10)
                    .addComponent(label11)
                    .addComponent(label12)
                    .addComponent(label13)
                    .addComponent(label14)
                    .addComponent(label15)
                    .addComponent(label16)
                    .addComponent(label17)
                    .addComponent(label18)
                    .addComponent(label19)
                    .addComponent(label20)
                    .addComponent(label21)
                    .addComponent(label22)
                    .addComponent(label23)
                    .addComponent(label24)
                    .addComponent(label25)
                    .addComponent(label26)
                    .addComponent(label27)
                    .addComponent(label28)
                    .addComponent(label29)
                    .addComponent(label30)
                    .addComponent(label31)
                    .addComponent(label32)
                    .addComponent(label33)
                    .addComponent(label34)
                    .addComponent(label35)
                    .addComponent(label36)
                    .addComponent(label37)
                    .addComponent(label38)
                    .addComponent(label39)
                    .addComponent(label40)
                    .addComponent(label41)
                    .addComponent(label42)
                    .addComponent(label43)
                    .addComponent(label44)
                    .addComponent(label45))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDiasHabiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel68))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonPdf)
                            .addComponent(jLabel65)
                            .addComponent(jLabel67))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonImprimir)
                            .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel62)
                            .addComponent(jLabel64))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel63))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAnterior)
                    .addComponent(buttonSiguiente)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBuscarOTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarOTActionPerformed
        int numeroDeOT = (Integer.parseInt(txtNumOrdenTrabajo.getText()));
        String numeroOT = String.format("%06d", numeroDeOT);
        anioPedidoEnDetalle = Integer.parseInt(txtAnioOrden.getText());
        try {
            consultarOrdenTrabajo(numeroOT, Integer.parseInt(txtAnioOrden.getText()));
        } catch (Exception ex) {
            Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
        listaDetalleOrdenTrabajo(idOrdenTrabajo);
        System.out.println("id Orden de Trabajo "+ idOrdenTrabajo);
        habilitarBuscarOT();
    }//GEN-LAST:event_buttonBuscarOTActionPerformed

    private void buttonPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPedidoActionPerformed
        PedidosOrdenTrabajo ped = new PedidosOrdenTrabajo();
        Principal.jDesktopPane1.add(ped);
        ped.toFront();
        ped.setVisible(true);
    }//GEN-LAST:event_buttonPedidoActionPerformed

    private void buttonBuscarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarPedidoActionPerformed
        anioP = Integer.parseInt(txtAnioPedido.getText());
        numPedido = Integer.parseInt(txtNumPedido.getText());
        try {
            consultarPedido(numPedido, anioP);
        } catch (Exception ex) {
            Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }

       
    }//GEN-LAST:event_buttonBuscarPedidoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtFechaInicioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaInicioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                labelD2.setText(diaSemana(txtFechaInicio.getText()));
            } catch (ParseException ex) {
                Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                fechaFinal = sumarDias(txtFechaInicio.getText(), (dia1p - 1));
            } catch (ParseException ex) {
                Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
            txtFechaFinal.setText(fechaFinal);
            try {
                labelD3.setText(diaSemana(fechaFinal));
            } catch (ParseException ex) {
                Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                fechaEntrega = sumarDias(txtFechaInicio.getText(), (dia2p - 1));
            } catch (ParseException ex) {
                Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
            txtFechaEntrega.setText(fechaEntrega);
            try {
                labelD4.setText(diaSemana(fechaEntrega));
            } catch (ParseException ex) {
                Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
            fechaInicio = txtFechaInicio.getText();
            try {
                agregarDias(identificarfechaLunes(txtFechaInicio.getText()));
            } catch (ParseException ex) {
                Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtFechaInicioKeyPressed

    private void txtFechaFinalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaFinalKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            fechaFinal=txtFechaFinal.getText();
            fechaEntrega=txtFechaEntrega.getText();
            try {
                labelD3.setText(diaSemana(fechaFinal));
            } catch (ParseException ex) {
                Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            try {
                agregarDias(identificarfechaLunes(txtFechaInicio.getText()));
            } catch (ParseException ex) {
                Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
              
        }
    }//GEN-LAST:event_txtFechaFinalKeyPressed

    private void comboBoxEstadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxEstadoItemStateChanged
        if (comboBoxEstado.getSelectedIndex() != 0) {
            estadoCombo = comboBoxEstado.getSelectedItem().toString();
        } else {
            estadoCombo = "";
        }
    }//GEN-LAST:event_comboBoxEstadoItemStateChanged

    private void comboBoxDestinoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxDestinoItemStateChanged
        if (comboBoxDestino.getSelectedIndex() != 0) {
            destinoCombo = comboBoxDestino.getSelectedItem().toString();
        } else {
            destinoCombo = "";
        }
    }//GEN-LAST:event_comboBoxDestinoItemStateChanged

    private void comboBoxRecepcionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxRecepcionItemStateChanged
        if (comboBoxRecepcion.getSelectedIndex() != 0) {
            recepcionCombo = comboBoxRecepcion.getSelectedItem().toString();
        } else {
            recepcionCombo = "";
        }
    }//GEN-LAST:event_comboBoxRecepcionItemStateChanged

    private void buttonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegistrarActionPerformed

        if (comboBoxServicio.getEditor().getItem().toString().equals(".") || comboBoxServicio.getEditor().getItem().toString().equals("")) {
            JOptionPane.showMessageDialog(null, "El tipo de servicio debe ser ingresado");
        } else {

            try {
                GenerarCodigo();
            } catch (Exception ex) {
                Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
            procesar(1);

            int numeroDeOT = (Integer.parseInt(txtNumOrdenTrabajo.getText()));
            String numeroOT = String.format("%06d", numeroDeOT);
            anioPedidoEnDetalle = Integer.parseInt(txtAnioOrden.getText());
            try {
                consultarOrdenTrabajo(numeroOT, Integer.parseInt(txtAnioOrden.getText()));
            } catch (Exception ex) {
                Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
            habilitarBuscarOT();
        }
    }//GEN-LAST:event_buttonRegistrarActionPerformed

    private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGuardarActionPerformed
        procesar(2);
        int numeroDeOT = (Integer.parseInt(txtNumOrdenTrabajo.getText()));
        String numeroOT = String.format("%06d", numeroDeOT);
        anioPedidoEnDetalle = Integer.parseInt(txtAnioOrden.getText());
        try {
            consultarOrdenTrabajo(numeroOT, Integer.parseInt(txtAnioOrden.getText()));
        } catch (Exception ex) {
            Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
        listaDetalleOrdenTrabajo(idOrdenTrabajo);
        habilitarGuardar();
    }//GEN-LAST:event_buttonGuardarActionPerformed

    private void buttonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminarActionPerformed
        procesar(3);
        try {
            limpiar();
        } catch (ParseException ex) {
            Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
        habilitarEliminar();
    }//GEN-LAST:event_buttonEliminarActionPerformed

    private void buttonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNuevoActionPerformed
        habilitarNuevo();
    }//GEN-LAST:event_buttonNuevoActionPerformed

    private void buttonAgregarDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAgregarDetalleActionPerformed
        DetalleDeOrdenTrabajo DetOT = null;
        try {
            DetOT = new DetalleDeOrdenTrabajo();
        } catch (Exception ex) {
            Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
        Principal.jDesktopPane1.add(DetOT);
        DetOT.toFront();
        DetOT.setVisible(true);
    }//GEN-LAST:event_buttonAgregarDetalleActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        tabla = jTable1.getSelectedRow();
        idDetalleOrdenTrabajo = Integer.parseInt(jTable1.getValueAt(tabla, 0).toString());
        
        DetalleDeOrdenTrabajo detOT = null;
        try {
            detOT = new DetalleDeOrdenTrabajo();
        } catch (Exception ex) {
            Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
        Principal.jDesktopPane1.add(detOT);
        detOT.toFront();
        detOT.setVisible(true);
        
        try {
            DetalleDeOrdenTrabajo.consultarDetalleOrdenTrabajo(idDetalleOrdenTrabajo);
        } catch (Exception ex) {
            Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
        listaDetalleOrdenTrabajo(idOrdenTrabajo);
        DetalleDeOrdenTrabajo.habilitarTabla();
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void buttonAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAnteriorActionPerformed
        numOrdenTrabajo = String.format("%06d", (Integer.parseInt(txtNumOrdenTrabajo.getText()) - 1));
        System.out.println(numOrdenTrabajo);
        int aio = Integer.parseInt(txtAnioOrden.getText());
        
        try {
            consultarOrdenTrabajo(numOrdenTrabajo, aio);
        } catch (Exception ex) {
            Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
        listaDetalleOrdenTrabajo(idOrdenTrabajo);
        habilitarBuscarOT();
        if (mensaje == true) {
            numOrdenTrabajo = String.format("%06d", (Integer.parseInt(numOrdenTrabajo) + 1));
            try {
                consultarOrdenTrabajo(numOrdenTrabajo, aio);
            } catch (Exception ex) {
                Logger.getLogger(GuiaRemision.class.getName()).log(Level.SEVERE, null, ex);
            }
            listaDetalleOrdenTrabajo(idOrdenTrabajo);
            habilitarBuscarOT();
        }
        mensaje = false;
    }//GEN-LAST:event_buttonAnteriorActionPerformed

    private void buttonSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSiguienteActionPerformed
        numOrdenTrabajo = String.format("%06d", (Integer.parseInt(txtNumOrdenTrabajo.getText()) + 1));
        System.out.println(numOrdenTrabajo);
        int aio = Integer.parseInt(txtAnioOrden.getText());
        
        try {
            consultarOrdenTrabajo(numOrdenTrabajo, aio);
        } catch (Exception ex) {
            Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
        listaDetalleOrdenTrabajo(idOrdenTrabajo);
        habilitarBuscarOT();
        if (mensaje == true) {
            numOrdenTrabajo = String.format("%06d", (Integer.parseInt(numOrdenTrabajo) - 1));
            try {
                consultarOrdenTrabajo(numOrdenTrabajo, aio);
            } catch (Exception ex) {
                Logger.getLogger(GuiaRemision.class.getName()).log(Level.SEVERE, null, ex);
            }
            listaDetalleOrdenTrabajo(idOrdenTrabajo);
            habilitarBuscarOT();
        }
        mensaje = false;
    }//GEN-LAST:event_buttonSiguienteActionPerformed

    private void buttonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLimpiarActionPerformed
        try {
            limpiar();
        } catch (ParseException ex) {
            Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
        habilitarInicio();
    }//GEN-LAST:event_buttonLimpiarActionPerformed

    private void buttonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarActionPerformed
       habilitarModificar();
    }//GEN-LAST:event_buttonModificarActionPerformed

    private void comboBoxServicioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboBoxServicioKeyTyped
         String Caracteres = comboBoxServicio.getEditor().getItem().toString();
        if(Caracteres.length()>=40){ 
            JOptionPane.showMessageDialog(null, "Ya no puede ingresar más letras.");
            evt.consume(); 
        }
    }//GEN-LAST:event_comboBoxServicioKeyTyped

    private void buttonPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPdfActionPerformed
        GenerarReporte ordT = new GenerarReporte();
        try {
            ordT.ReporteOrdenTrabajoGuardar(idOrdenTrabajo,numOrdenTrabajo, txtAnioOrden.getText(), numeroCotizacion, txtRazSocial.getText() );

        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(Rotulaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonPdfActionPerformed

    private void txtFechaEntregaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaEntregaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                labelD4.setText(diaSemana(txtFechaEntrega.getText()));
            } catch (ParseException ex) {
                Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
            fechaFinal = txtFechaFinal.getText();
            fechaEntrega = txtFechaEntrega.getText();
            try {
                agregarDias(identificarfechaLunes(txtFechaInicio.getText()));
            } catch (ParseException ex) {
                Logger.getLogger(OrdenTrabajoRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtFechaEntregaKeyPressed

    private void buttonImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonImprimirActionPerformed
        GenerarReporte ordT = new GenerarReporte();
        try {
            ordT.ImprimirOrdenTrabajo(idOrdenTrabajo);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(Rotulaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonImprimirActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAgregarDetalle;
    private javax.swing.JButton buttonAnterior;
    private javax.swing.JButton buttonBuscarOT;
    private javax.swing.JButton buttonBuscarPedido;
    private javax.swing.JButton buttonEliminar;
    private javax.swing.JButton buttonGuardar;
    private javax.swing.JButton buttonImprimir;
    private javax.swing.JButton buttonLimpiar;
    private javax.swing.JButton buttonModificar;
    private javax.swing.JButton buttonNuevo;
    private javax.swing.JButton buttonPdf;
    private javax.swing.JButton buttonPedido;
    private javax.swing.JButton buttonRegistrar;
    private javax.swing.JButton buttonSiguiente;
    private javax.swing.JComboBox<String> comboBoxDestino;
    private javax.swing.JComboBox<String> comboBoxEstado;
    private javax.swing.JComboBox<String> comboBoxRecepcion;
    private javax.swing.JComboBox<String> comboBoxServicio;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private static javax.swing.JTable jTable1;
    private javax.swing.JLabel label1;
    private javax.swing.JLabel label10;
    private javax.swing.JLabel label11;
    private javax.swing.JLabel label12;
    private javax.swing.JLabel label13;
    private javax.swing.JLabel label14;
    private javax.swing.JLabel label15;
    private javax.swing.JLabel label16;
    private javax.swing.JLabel label17;
    private javax.swing.JLabel label18;
    private javax.swing.JLabel label19;
    private javax.swing.JLabel label2;
    private javax.swing.JLabel label20;
    private javax.swing.JLabel label21;
    private javax.swing.JLabel label22;
    private javax.swing.JLabel label23;
    private javax.swing.JLabel label24;
    private javax.swing.JLabel label25;
    private javax.swing.JLabel label26;
    private javax.swing.JLabel label27;
    private javax.swing.JLabel label28;
    private javax.swing.JLabel label29;
    private javax.swing.JLabel label3;
    private javax.swing.JLabel label30;
    private javax.swing.JLabel label31;
    private javax.swing.JLabel label32;
    private javax.swing.JLabel label33;
    private javax.swing.JLabel label34;
    private javax.swing.JLabel label35;
    private javax.swing.JLabel label36;
    private javax.swing.JLabel label37;
    private javax.swing.JLabel label38;
    private javax.swing.JLabel label39;
    private javax.swing.JLabel label4;
    private javax.swing.JLabel label40;
    private javax.swing.JLabel label41;
    private javax.swing.JLabel label42;
    private javax.swing.JLabel label43;
    private javax.swing.JLabel label44;
    private javax.swing.JLabel label45;
    private javax.swing.JLabel label5;
    private javax.swing.JLabel label6;
    private javax.swing.JLabel label7;
    private javax.swing.JLabel label8;
    private javax.swing.JLabel label9;
    private javax.swing.JLabel labelD1;
    private javax.swing.JLabel labelD2;
    private javax.swing.JLabel labelD3;
    private javax.swing.JLabel labelD4;
    private javax.swing.JLabel labelN1;
    private javax.swing.JLabel labelN10;
    private javax.swing.JLabel labelN11;
    private javax.swing.JLabel labelN12;
    private javax.swing.JLabel labelN13;
    private javax.swing.JLabel labelN14;
    private javax.swing.JLabel labelN15;
    private javax.swing.JLabel labelN16;
    private javax.swing.JLabel labelN17;
    private javax.swing.JLabel labelN18;
    private javax.swing.JLabel labelN19;
    private javax.swing.JLabel labelN2;
    private javax.swing.JLabel labelN20;
    private javax.swing.JLabel labelN21;
    private javax.swing.JLabel labelN22;
    private javax.swing.JLabel labelN23;
    private javax.swing.JLabel labelN24;
    private javax.swing.JLabel labelN25;
    private javax.swing.JLabel labelN26;
    private javax.swing.JLabel labelN27;
    private javax.swing.JLabel labelN28;
    private javax.swing.JLabel labelN29;
    private javax.swing.JLabel labelN3;
    private javax.swing.JLabel labelN30;
    private javax.swing.JLabel labelN31;
    private javax.swing.JLabel labelN32;
    private javax.swing.JLabel labelN33;
    private javax.swing.JLabel labelN34;
    private javax.swing.JLabel labelN35;
    private javax.swing.JLabel labelN36;
    private javax.swing.JLabel labelN37;
    private javax.swing.JLabel labelN38;
    private javax.swing.JLabel labelN39;
    private javax.swing.JLabel labelN4;
    private javax.swing.JLabel labelN40;
    private javax.swing.JLabel labelN41;
    private javax.swing.JLabel labelN42;
    private javax.swing.JLabel labelN43;
    private javax.swing.JLabel labelN44;
    private javax.swing.JLabel labelN45;
    private javax.swing.JLabel labelN5;
    private javax.swing.JLabel labelN6;
    private javax.swing.JLabel labelN7;
    private javax.swing.JLabel labelN8;
    private javax.swing.JLabel labelN9;
    private javax.swing.JLabel labelNumCotizacion;
    public static javax.swing.JTextField txtAnioOrden;
    private javax.swing.JTextField txtAnioPedido;
    private javax.swing.JTextArea txtAreaMedidaFinaliza;
    private javax.swing.JTextArea txtAreaMedidaIngreso;
    private javax.swing.JTextField txtDiasHabiles;
    private javax.swing.JTextField txtFechaEmision;
    private javax.swing.JTextField txtFechaEntrega;
    private javax.swing.JTextField txtFechaFinal;
    private javax.swing.JTextField txtFechaInicio;
    public static javax.swing.JTextField txtNumOrdenTrabajo;
    public static javax.swing.JTextField txtNumPedido;
    private javax.swing.JTextField txtObservacion;
    private javax.swing.JTextField txtRazSocial;
    private javax.swing.JTextField txtRuc;
    // End of variables declaration//GEN-END:variables

ClienteController clientecontroler=new ClienteController();
Cliente cliente;

PedidoController pedidocontroler=new PedidoController();
Pedido pedido;

OrdenTrabajoController ordentrabajocontroler=new OrdenTrabajoController();
OrdenTrabajo ordentrabajo;

static DetalleOrdenTrabajoController detalleordentrabajocontroler= new DetalleOrdenTrabajoController();
static DetalleOrdenTrabajo detalleordentrabajo;

ProformaController proformacontroler=new ProformaController();
Proforma proforma;

//-------------------------------- Procesar ---------------------------------------------------------
    private void procesar(int op) {
        ordentrabajo = leerDatos();
        try {
            System.out.println("11111111111");
            String msg = ordentrabajocontroler.OrdenTrabajoProcesar(ordentrabajo, op);
            JOptionPane.showMessageDialog(null, msg);
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("Error" + e.getMessage());
        }
    }

    private OrdenTrabajo leerDatos() {
        OrdenTrabajo ordenTrab = new OrdenTrabajo();

        ordenTrab.setIdOrdenTrabajo(idOrdenTrabajo);
        ordenTrab.setIdPedido(idPedido);
        ordenTrab.setIdProforma(idCotizacion);
        numOrdenTrabajo = txtNumOrdenTrabajo.getText();
        ordenTrab.setNumOrdenTrabajo(numOrdenTrabajo);
        servicio = comboBoxServicio.getEditor().getItem().toString();
        ordenTrab.setTipoServicio(servicio);
        ordenTrab.setRecepcion(recepcionCombo);
        ordenTrab.setDestino(destinoCombo);
        fechaEmision = txtFechaEmision.getText();
        ordenTrab.setFechaEmision(fechaEmision);
        fechaInicio = txtFechaInicio.getText();
        ordenTrab.setFechaInicio(fechaInicio);
        fechaFinal = txtFechaFinal.getText();
        ordenTrab.setFechaFin(fechaFinal);
        fechaEntrega = txtFechaEntrega.getText();
        ordenTrab.setFechaEntrega(fechaEntrega);
        ordenTrab.setEstado(estadoCombo);
        observacion = txtObservacion.getText();
        ordenTrab.setObservacion(observacion);
        ordenTrab.setMedidaIngreso(txtAreaMedidaIngreso.getText());
        ordenTrab.setMedidaFinaliza(txtAreaMedidaFinaliza.getText());

        return ordenTrab;
    }
 //------------- Consultas para generar codigo -------------------    
    private void consultarNumeroOrden(int id) throws Exception {

        ordentrabajo = ordentrabajocontroler.OrdenTrabajoBuscar(id);
        if (ordentrabajo != null) {

            numo = ordentrabajo.getNumOrdenTrabajo();
            num = Integer.parseInt(numo);
            System.out.println("generar numero de guia : " + numo);
        } else {
            numo = "";
            num = 0;
            System.out.println("generar numero de guia : " + num);
            //JOptionPane.showMessageDialog(null, "Contacto no registrado");
            //System.out.println("Error");
        }
    }

    private void consultarUltimoId() throws Exception {
        ordentrabajo = ordentrabajocontroler.OrdenTrabajoBuscarUltimoId();
        if (ordentrabajo != null) {
            ultimoIdOT = ordentrabajo.getIdOrdenTrabajo();
            System.out.println("ultimoId : " + ultimoIdOT);
        } else {
            numo = "";
            num = 0;
            System.out.println("ultimoId : " + ultimoIdOT);
        }
    }

    private void GenerarCodigo() throws Exception {
        consultarUltimoId();
        System.out.println("ultimo Id 2:" + ultimoIdOT);
        consultarNumeroOrden(ultimoIdOT);
        System.out.println("generar Id 2:" + num);
        num = num + 1;
        txtNumOrdenTrabajo.setText(String.format("%06d", num));
    }
   
//-------------------------------- Consultar Orden Trabajo ---------------------------------------------
   
    private void consultarPedidoOrdenT(int ip) throws Exception {
        pedido = pedidocontroler.PedidoBuscar(ip);
        if (pedido != null) {

            idPedido = pedido.getIdPedido();
            numPedido=pedido.getNumPedido();
            txtNumPedido.setText(String.format("%06d", pedido.getNumPedido()));
            numDePedparaDetalle=pedido.getNumPedido();
            idCotizacion=pedido.getIdProforma();
            consultarCodigoProforma(idCotizacion);
            idCliente = pedido.getIdCliente();
            consultarCliente(idCliente);
            dia1p=pedido.getDia1();
            dia2p=pedido.getDia2();
            
            txtDiasHabiles.setText("DE "+dia1p+" A "+dia2p+" DIAS HÁBILES");
            
            
        } else {
            JOptionPane.showMessageDialog(null, "Pedido no registrado");
            //System.out.println("Error");
        }
    }

    
    private void consultarOrdenTrabajo(String numor, int anio) throws Exception {
        ordentrabajo = ordentrabajocontroler.OrdenTrabajoBuscar(numor, anio);
        
        if (ordentrabajo != null) {

            idOrdenTrabajo=ordentrabajo.getIdOrdenTrabajo();
            idOrdenTrabajoParaDetalle=ordentrabajo.getIdOrdenTrabajo();
            idPedido=ordentrabajo.getIdPedido();
            consultarPedidoOrdenT(idPedido);
            idCotizacion=ordentrabajo.getIdProforma();
            numOrdenTrabajo=ordentrabajo.getNumOrdenTrabajo();
            numOTParaDetalle=ordentrabajo.getNumOrdenTrabajo();
            txtNumOrdenTrabajo.setText(ordentrabajo.getNumOrdenTrabajo());
            servicio=ordentrabajo.getTipoServicio();
            comboBoxServicio.setSelectedItem(ordentrabajo.getTipoServicio());
            
            recepcion = ordentrabajo.getRecepcion();
            String testValue = recepcion;
            for (int i = 0; i < comboBoxRecepcion.getModel().getSize(); i++) {
                if (comboBoxRecepcion.getItemAt(i).equals(testValue)) {
                    System.out.println(i);
                    comboBoxRecepcion.setSelectedIndex(i);
                    break;
                }
            }
            
            destino=ordentrabajo.getDestino();
            String testValue1 = destino;
            for (int i = 0; i < comboBoxDestino.getModel().getSize(); i++) {
                if (comboBoxDestino.getItemAt(i).equals(testValue1)) {
                    System.out.println(i);
                    comboBoxDestino.setSelectedIndex(i);
                    break;
                }
            }
            
            fechaEmision=ordentrabajo.getFechaEmision();
            txtFechaEmision.setText(ordentrabajo.getFechaEmision());
            fechaInicio=ordentrabajo.getFechaInicio();
            txtFechaInicio.setText(ordentrabajo.getFechaInicio());
            fechaFinal=ordentrabajo.getFechaFin();
            txtFechaFinal.setText(ordentrabajo.getFechaFin());
            fechaEntrega=ordentrabajo.getFechaEntrega();
            txtFechaEntrega.setText(ordentrabajo.getFechaEntrega());
            labelD1.setText(diaSemana(fechaEmision));
            labelD2.setText(diaSemana(fechaInicio));
            labelD3.setText(diaSemana(fechaFinal));
            labelD4.setText(diaSemana(fechaEntrega));
            agregarDias(identificarfechaLunes(txtFechaInicio.getText()));
            estado=ordentrabajo.getEstado();
            String testValue2 = estado;
            for (int j = 0; j < comboBoxEstado.getModel().getSize(); j++) {
                if (comboBoxEstado.getItemAt(j).equals(testValue2)) {
                    System.out.println(j);
                    comboBoxEstado.setSelectedIndex(j);
                    break;
                }
            }
            observacion=ordentrabajo.getObservacion();
            txtObservacion.setText(ordentrabajo.getObservacion());
            
            txtAreaMedidaIngreso.setText(ordentrabajo.getMedidaIngreso());
            txtAreaMedidaFinaliza.setText(ordentrabajo.getMedidaFinaliza());
            

        } else {
            JOptionPane.showMessageDialog(null, "Pedido no registrado");
            //System.out.println("Error");
            mensaje=true;
        }
    }

//-------------------------------- Consultar Pedido-----------------------------------------------------   

    private void consultarPedido(int numPed, int anio) throws Exception {
        pedido = pedidocontroler.PedidoBuscar(numPed, anio);
        if (pedido != null) {

            idPedido = pedido.getIdPedido();
            numPedido = pedido.getNumPedido();
            txtNumPedido.setText(String.format("%06d", pedido.getNumPedido()));
            idCotizacion = pedido.getIdProforma();
            consultarCodigoProforma(idCotizacion);
            idCliente = pedido.getIdCliente();
            consultarCliente(idCliente);
            dia1p = pedido.getDia1();
            dia2p = pedido.getDia2();
            System.out.println("este es el dia 1 :" + dia1p + ", este es el dia 2: " + dia2p);
            txtDiasHabiles.setText("DE "+dia1p+" A "+dia2p+" DIAS HÁBILES");
            fechaFinal=sumarDias(txtFechaInicio.getText(), (dia1p - 1));
            txtFechaFinal.setText(fechaFinal);
            labelD3.setText(diaSemana(fechaFinal));
            fechaEntrega=sumarDias(txtFechaInicio.getText(), (dia2p - 1));
            txtFechaEntrega.setText(fechaEntrega);
            labelD4.setText(diaSemana(fechaEntrega));
            fechaInicio=txtFechaInicio.getText();
            agregarDias(identificarfechaLunes(txtFechaInicio.getText()));

        } else {
            JOptionPane.showMessageDialog(null, "Pedido no registrado");
            //System.out.println("Error");
        }
    }

    private void consultarCodigoProforma(int idP) throws Exception {

        proforma = proformacontroler.ProformaBuscar1(idP);
        if (proforma != null) {

            numeroCotizacion = proforma.getCodProforma();
            labelNumCotizacion.setText(proforma.getCodProforma());

        } else {
//            JOptionPane.showMessageDialog(null, "Proforma no registrado");
//            System.out.println("Error");
        }
    }

    private void consultarCliente(int idCli) throws Exception {
        cliente = clientecontroler.ClienteBuscar1(idCli);
        if (cliente != null) {

            idCliente = cliente.getIdCliente();
            txtRazSocial.setText(cliente.getRazonSocial());
            txtRuc.setText(cliente.getRuc());

        } else {
            JOptionPane.showMessageDialog(null, "Cliente no registrado");
            //System.out.println("Error");
        }
    }

//------------------------- Listar detalle orden trabajo -----------------------------------------
   static  void listaDetalleOrdenTrabajo(int id) {
        List<DetalleOrdenTrabajo> lista;
        try {
            lista = detalleordentrabajocontroler.DetalleOrdenTrabajoFiltrar(id);
            verDetalleOrdenTrabajo(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    static void verDetalleOrdenTrabajo(List<DetalleOrdenTrabajo> lista) {
        
        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        tabla.setRowCount(0);
        for (DetalleOrdenTrabajo detOrdT : lista) {
            
            Object[] fila = {detOrdT.getIdDetalleOrdenTrabajo(), detOrdT.getItem(), detOrdT.getCant(), 
                             detOrdT.getDescripcion(), detOrdT.getTolerancia()};
            tabla.addRow(fila);
        }
    }    
//------------------------ metodo para jalar numero de pedido desde Pedidos OrdenTrabajo ------------------------------
    static void numPedidoOrdenTrabajo() {
        PedidosOrdenTrabajo.numeroPedido = Integer.parseInt(PedidosOrdenTrabajo.txtNumPedido.getText());
        txtNumPedido.setText(String.format("%06d", PedidosOrdenTrabajo.numeroPedido));
    }
    
//------------------------------------ Limpiar ------------------------------------------------
    void limpiar() throws ParseException {
        idOrdenTrabajo = 0;
        idPedido = 0;
        numPedido = 0;
        idCotizacion = 0;
        numeroCotizacion = "";
        idCliente = 0;
        numOrdenTrabajo = "";
        servicio = "";
        recepcion = "";
        destino = "";
        fechaFinal = "";
        fechaEntrega = "";
        estado = "";
        observacion = "";
        txtAreaMedidaIngreso.setText("");
        txtAreaMedidaFinaliza.setText("");
        idDetalleOrdenTrabajo = 0;
        numDePedparaDetalle = 0;
        numOTParaDetalle = "";
        idOrdenTrabajoParaDetalle = 0;
        txtFechaEmision.setText(fechaActual());
        fechaEmision = txtFechaEmision.getText();
        labelD1.setText(diaSemana(txtFechaEmision.getText()));
//        fechaInicio = sumarDias(txtFechaEmision.getText(), 1);
        txtFechaInicio.setText(fechaActual());
        labelD2.setText(diaSemana(txtFechaInicio.getText()));
        txtFechaFinal.setText("");
        labelD3.setText("---------");
        txtFechaEntrega.setText("");
        labelD4.setText("---------");
        txtNumPedido.setText("");
        txtNumOrdenTrabajo.setText(""); 
        labelNumCotizacion.setText("");
        txtRazSocial.setText(""); 
        txtRuc.setText("");
        comboBoxServicio.setSelectedIndex(0);
        comboBoxRecepcion.setSelectedIndex(2);
        comboBoxDestino.setSelectedIndex(1);
        comboBoxEstado.setSelectedIndex(1);
        txtObservacion.setText("");
        txtDiasHabiles.setText("");
        
        listaDetalleOrdenTrabajo(0);   
    }
//------------------------------------- Habilitar ----------------------------------------------
    void habilitarInicio() {

        buttonPedido.setEnabled(false);
        buttonBuscarPedido.setEnabled(false);
        buttonBuscarOT.setEnabled(true);
        buttonNuevo.setEnabled(true);
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(false);
        buttonAnterior.setEnabled(false);
        buttonSiguiente.setEnabled(false);
        buttonAgregarDetalle.setEnabled(false);
        buttonPdf.setEnabled(false);
        buttonImprimir.setEnabled(false);

        txtAnioPedido.setEnabled(false);
        txtNumPedido.setEnabled(false);
        txtAnioOrden.setEnabled(true);
        txtNumOrdenTrabajo.setEnabled(true);
        txtRazSocial.setEnabled(false);
        txtRuc.setEnabled(false);
        txtFechaEmision.setEnabled(false);
        txtFechaInicio.setEnabled(false);
        txtFechaFinal.setEnabled(false);
        txtFechaEntrega.setEnabled(false);
        comboBoxServicio.setEnabled(false);
        comboBoxRecepcion.setEnabled(false);
        comboBoxDestino.setEnabled(false);
        comboBoxEstado.setEnabled(false);
        txtObservacion.setEnabled(false);
        txtDiasHabiles.setEnabled(false);
        txtAreaMedidaFinaliza.setEnabled(false);
        txtAreaMedidaIngreso.setEnabled(false);
    }
    
    void habilitarBuscarOT() {

        buttonPedido.setEnabled(false);
        buttonBuscarPedido.setEnabled(false);
        buttonBuscarOT.setEnabled(true);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(true);
        buttonAnterior.setEnabled(true);
        buttonSiguiente.setEnabled(true);
        buttonAgregarDetalle.setEnabled(true);
        buttonPdf.setEnabled(true);
        buttonImprimir.setEnabled(true);

        txtAnioPedido.setEnabled(false);
        txtNumPedido.setEnabled(false);
        txtAnioOrden.setEnabled(true);
        txtNumOrdenTrabajo.setEnabled(true);
        txtRazSocial.setEnabled(false);
        txtRuc.setEnabled(false);
        txtFechaEmision.setEnabled(false);
        txtFechaInicio.setEnabled(false);
        txtFechaFinal.setEnabled(false);
        txtFechaEntrega.setEnabled(false);
        comboBoxServicio.setEnabled(false);
        comboBoxRecepcion.setEnabled(false);
        comboBoxDestino.setEnabled(false);
        comboBoxEstado.setEnabled(false);
        txtObservacion.setEnabled(false);
        txtDiasHabiles.setEnabled(false);
        txtAreaMedidaFinaliza.setEnabled(false);
        txtAreaMedidaIngreso.setEnabled(false);
    }
    
    void habilitarModificar() {

        buttonPedido.setEnabled(false);
        buttonBuscarPedido.setEnabled(false);
        buttonBuscarOT.setEnabled(false);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(true);
        buttonEliminar.setEnabled(false);
        buttonAnterior.setEnabled(false);
        buttonSiguiente.setEnabled(false);
        buttonAgregarDetalle.setEnabled(false);
        buttonPdf.setEnabled(false);
        buttonImprimir.setEnabled(false);

        txtAnioPedido.setEnabled(false);
        txtNumPedido.setEnabled(false);
        txtAnioOrden.setEnabled(true);
        txtNumOrdenTrabajo.setEnabled(true);
        txtRazSocial.setEnabled(false);
        txtRuc.setEnabled(false);
        txtFechaEmision.setEnabled(true);
        txtFechaInicio.setEnabled(true);
        txtFechaFinal.setEnabled(true);
        txtFechaEntrega.setEnabled(true);
        comboBoxServicio.setEnabled(true);
        comboBoxRecepcion.setEnabled(true);
        comboBoxDestino.setEnabled(true);
        comboBoxEstado.setEnabled(true);
        txtObservacion.setEnabled(true);
        txtDiasHabiles.setEnabled(true);
        txtAreaMedidaFinaliza.setEnabled(true);
        txtAreaMedidaIngreso.setEnabled(true);
    }
    
    void habilitarGuardar() {
        
        buttonPedido.setEnabled(false);
        buttonBuscarPedido.setEnabled(false);
        buttonBuscarOT.setEnabled(false);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(true);
        buttonAnterior.setEnabled(true);
        buttonSiguiente.setEnabled(true);
        buttonAgregarDetalle.setEnabled(true);
        buttonPdf.setEnabled(true);
        buttonImprimir.setEnabled(true);

        txtAnioPedido.setEnabled(false);
        txtNumPedido.setEnabled(false);
        txtAnioOrden.setEnabled(true);
        txtNumOrdenTrabajo.setEnabled(true);
        txtRazSocial.setEnabled(false);
        txtRuc.setEnabled(false);
        txtFechaEmision.setEnabled(false);
        txtFechaInicio.setEnabled(false);
        txtFechaFinal.setEnabled(false);
        txtFechaEntrega.setEnabled(false);
        comboBoxServicio.setEnabled(false);
        comboBoxRecepcion.setEnabled(false);
        comboBoxDestino.setEnabled(false);
        comboBoxEstado.setEnabled(false);
        txtObservacion.setEnabled(false);
        txtDiasHabiles.setEnabled(false);
        txtAreaMedidaFinaliza.setEnabled(false);
        txtAreaMedidaIngreso.setEnabled(false);
    }
    
    void habilitarEliminar() {

        buttonPedido.setEnabled(false);
        buttonBuscarPedido.setEnabled(false);
        buttonBuscarOT.setEnabled(true);
        buttonNuevo.setEnabled(true);
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(false);
        buttonAnterior.setEnabled(false);
        buttonSiguiente.setEnabled(false);
        buttonAgregarDetalle.setEnabled(false);
        buttonPdf.setEnabled(true);
        buttonImprimir.setEnabled(true);

        txtAnioPedido.setEnabled(false);
        txtNumPedido.setEnabled(false);
        txtAnioOrden.setEnabled(true);
        txtNumOrdenTrabajo.setEnabled(true);
        txtRazSocial.setEnabled(false);
        txtRuc.setEnabled(false);
        txtFechaEmision.setEnabled(false);
        txtFechaInicio.setEnabled(false);
        txtFechaFinal.setEnabled(false);
        txtFechaEntrega.setEnabled(false);
        comboBoxServicio.setEnabled(false);
        comboBoxRecepcion.setEnabled(false);
        comboBoxDestino.setEnabled(false);
        comboBoxEstado.setEnabled(false);
        txtObservacion.setEnabled(false);
        txtDiasHabiles.setEnabled(false);
        txtAreaMedidaFinaliza.setEnabled(false);
        txtAreaMedidaIngreso.setEnabled(false);
    }
    
    void habilitarNuevo() {

        buttonPedido.setEnabled(true);
        buttonBuscarPedido.setEnabled(true);
        buttonBuscarOT.setEnabled(false);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(true);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(false);
        buttonAnterior.setEnabled(false);
        buttonSiguiente.setEnabled(false);
        buttonAgregarDetalle.setEnabled(false);
        buttonPdf.setEnabled(false);
        buttonImprimir.setEnabled(false);

        txtAnioPedido.setEnabled(true);
        txtNumPedido.setEnabled(true);
        txtAnioOrden.setEnabled(true);
        txtNumOrdenTrabajo.setEnabled(true);
        txtRazSocial.setEnabled(true);
        txtRuc.setEnabled(true);
        txtFechaEmision.setEnabled(true);
        txtFechaInicio.setEnabled(true);
        txtFechaFinal.setEnabled(true);
        txtFechaEntrega.setEnabled(true);
        comboBoxServicio.setEnabled(true);
        comboBoxRecepcion.setEnabled(true);
        comboBoxDestino.setEnabled(true);
        comboBoxEstado.setEnabled(true);
        txtObservacion.setEnabled(true);
        txtDiasHabiles.setEnabled(true);
        txtAreaMedidaFinaliza.setEnabled(true);
        txtAreaMedidaIngreso.setEnabled(true);
    }
    
    void habilitarRegistrar() {
        
        buttonPedido.setEnabled(false);
        buttonBuscarPedido.setEnabled(false);
        buttonBuscarOT.setEnabled(false);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(true);
        buttonAnterior.setEnabled(true);
        buttonSiguiente.setEnabled(true);
        buttonAgregarDetalle.setEnabled(true);
        buttonPdf.setEnabled(true);
        buttonImprimir.setEnabled(true);

        txtAnioPedido.setEnabled(false);
        txtNumPedido.setEnabled(false);
        txtAnioOrden.setEnabled(true);
        txtNumOrdenTrabajo.setEnabled(true);
        txtRazSocial.setEnabled(false);
        txtRuc.setEnabled(false);
        txtFechaEmision.setEnabled(false);
        txtFechaInicio.setEnabled(false);
        txtFechaFinal.setEnabled(false);
        txtFechaEntrega.setEnabled(false);
        comboBoxServicio.setEnabled(false);
        comboBoxRecepcion.setEnabled(false);
        comboBoxDestino.setEnabled(false);
        comboBoxEstado.setEnabled(false);
        txtObservacion.setEnabled(false);
        txtDiasHabiles.setEnabled(false);
        txtAreaMedidaFinaliza.setEnabled(false);
        txtAreaMedidaIngreso.setEnabled(false);
    }
//---------------------------------------- fecha -----------------------------------------------

   // ------------------------ Fecha --> Indica la fecha del dia --------------------
    public String fechaActual() {
        Date fecha = new Date();

        SimpleDateFormat formatofecha = new SimpleDateFormat("yyyy-MM-dd");
        return formatofecha.format(fecha);
    }
    
    public String anioActual() {
        Date fecha = new Date();

        SimpleDateFormat formatofecha = new SimpleDateFormat("yyyy");
        return formatofecha.format(fecha);
    }
    
     public String diaFecha(String f) throws ParseException {
        Calendar fecha = Calendar.getInstance();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        Date fechaDate = null;

        fechaDate = formato.parse(f);

        SimpleDateFormat formatofecha = new SimpleDateFormat("dd");
        return formatofecha.format(fechaDate);
    }
    
    String diaSemana(String ah) throws ParseException {
        Calendar fecha = Calendar.getInstance();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        Date fechaDate = null;

        fechaDate=formato.parse(ah);

        fecha.setTime(fechaDate);

        int diaSemana = fecha.get(Calendar.DAY_OF_WEEK);
        switch (diaSemana) {
            case 1:
                valorDia = "Domingo";
                break;
            case 2:
                valorDia = "Lunes";
                break;
            case 3:
                valorDia = "Martes";
                break;
            case 4:
                valorDia = "Miercoles";
                break;
            case 5:
                valorDia = "Jueves";
                break;
            case 6:
                valorDia = "Viernes";
                break;
            case 7:
                valorDia = "Sabado";
                break;
            default:
                break;
        }
        return valorDia;
    }
    
    String sumarRestarDiasFecha(String ah, int dias) throws ParseException {

        Calendar calendar = Calendar.getInstance();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        Date fechaDate = null;
        fechaDate = formato.parse(ah);
        calendar.setTime(fechaDate); // Configuramos la fecha que se recibe
        calendar.add(Calendar.DAY_OF_YEAR, dias);  // numero de días a añadir, o restar en caso de días<0

        return formato.format(calendar.getTime()); // Devuelve el objeto date String  con los nuevos días añadidos

    }
    
    String sumarDias(String fR, int v) throws ParseException {
        for (int i = 1; i <= v; i++) {

            fR = sumarRestarDiasFecha(fR, 1);
            System.out.println("dia " + fR);
            valorDia = diaSemana(fR);

            if (("Viernes".equals(valorDia) || "Sabado".equals(valorDia)) && i != v) {
                fR = sumarRestarDiasFecha(fR, 2);
            } else if ("Sabado".equals(valorDia) && i == v) {
                fR = sumarRestarDiasFecha(fR, 2);
            } else if ("Domingo".equals(valorDia) && (i == v || i != v)) {
                fR = sumarRestarDiasFecha(fR, 1);
            }

            valorDia = diaSemana(fR);
            System.out.println("Este es dentro del for: " + valorDia);
            System.out.println("iteracion: " + i);
        }

        valorDia = diaSemana(fR);
        System.out.println("Este es fuera del for: " + valorDia);

        return fR;
    }
    
     String identificarfechaLunes(String fl) throws ParseException {
       
            if ("Domingo".equals(diaSemana(fl))) {
                fl = sumarRestarDiasFecha(fl, -6);
            } else if ("Lunes".equals(diaSemana(fl))) {
                fl = fl;
            } else if ("Martes".equals(diaSemana(fl))) {
                fl = sumarRestarDiasFecha(fl, -1);
            } else if ("Miercoles".equals(diaSemana(fl))) {
                fl =sumarRestarDiasFecha(fl, -2);
            } else if ("Jueves".equals(diaSemana(fl))) {
                fl = sumarRestarDiasFecha(fl, -3);
            } else if ("Viernes".equals(diaSemana(fl))) {
                fl = sumarRestarDiasFecha(fl, -4);
            } else if ("Sabado".equals(diaSemana(fl))) {
                fl = sumarRestarDiasFecha(fl, -5);
            }
       return fl;
    }
     
    
    void agregarDias(String fh) throws ParseException {

        
        labelN1.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label1.setText("I");
                label1.setForeground(Color.decode("#009900"));
                label1.setFont(label1.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label1.setText("F");
                label1.setForeground(Color.RED);
                label1.setFont(label1.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label1.setText("E");
                label1.setForeground(Color.decode("#FE4B0C"));
                label1.setFont(label1.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label1.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN2.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label2.setText("I");
                label2.setForeground(Color.decode("#009900"));
                label2.setFont(label2.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label2.setText("F");
                label2.setForeground(Color.RED);
                label2.setFont(label2.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label2.setText("E");
                label2.setForeground(Color.decode("#FE4B0C"));
                label2.setFont(label2.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label2.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN3.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label3.setText("I");
                label3.setForeground(Color.decode("#009900"));
                label3.setFont(label3.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label3.setText("F");
                label3.setForeground(Color.RED);
                label3.setFont(label3.getFont().deriveFont(Font.BOLD));
            }
            if (fechaEntrega.equals(fh)) {
                label3.setText("E");
                label3.setForeground(Color.decode("#FE4B0C"));
                label3.setFont(label3.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label3.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN4.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label4.setText("I");
                label4.setForeground(Color.decode("#009900"));
                label4.setFont(label4.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label4.setText("F");
                label4.setForeground(Color.RED);
                label4.setFont(label4.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label4.setText("E");
                label4.setForeground(Color.decode("#FE4B0C"));
                label4.setFont(label4.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label4.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN5.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label5.setText("I");
                label5.setForeground(Color.decode("#009900"));
                label5.setFont(label5.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label5.setText("F");
                label5.setForeground(Color.RED);
                label5.setFont(label5.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label5.setText("E");
                label5.setForeground(Color.decode("#FE4B0C"));
                label5.setFont(label5.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label5.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN6.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label6.setText("I");
                label6.setForeground(Color.decode("#009900"));
                label6.setFont(label6.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label6.setText("F");
                label6.setForeground(Color.RED);
                label6.setFont(label6.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label6.setText("E");
                label6.setForeground(Color.decode("#FE4B0C"));
                label6.setFont(label6.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label6.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN7.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label7.setText("I");
                label7.setForeground(Color.decode("#009900"));
                label7.setFont(label7.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label7.setText("F");
                label7.setForeground(Color.RED);
                label7.setFont(label7.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label7.setText("E");
                label7.setForeground(Color.decode("#FE4B0C"));
                label7.setFont(label7.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label7.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN8.setText(String.format("%02d",Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label8.setText("I");
                label8.setForeground(Color.decode("#009900"));
                label8.setFont(label8.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label8.setText("F");
                label8.setForeground(Color.RED);
                label8.setFont(label8.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label8.setText("E");
                label8.setForeground(Color.decode("#FE4B0C"));
                label8.setFont(label8.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label8.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN9.setText(String.format("%02d",Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label9.setText("I");
                label9.setForeground(Color.decode("#009900"));
                label9.setFont(label9.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh) ) {
                label9.setText("F");
                label9.setForeground(Color.RED);
                label9.setFont(label9.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label9.setText("E");
                label9.setForeground(Color.decode("#FE4B0C"));
                label9.setFont(label9.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label9.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN10.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label10.setText("I");
                label10.setForeground(Color.decode("#009900 "));
                label10.setFont(label10.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label10.setText("F");
                label10.setForeground(Color.RED);
                label10.setFont(label10.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label10.setText("E");
                label10.setForeground(Color.decode("#FE4B0C"));
                label10.setFont(label10.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label10.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN11.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label11.setText("I");
                label11.setForeground(Color.decode("#009900"));
                label11.setFont(label11.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label11.setText("F");
                label11.setForeground(Color.RED);
                label11.setFont(label11.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label11.setText("E");
                label11.setForeground(Color.decode("#FE4B0C"));
                label11.setFont(label11.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label11.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN12.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label12.setText("I");
                label12.setForeground(Color.decode("#009900"));
                label12.setFont(label12.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label12.setText("F");
                label12.setForeground(Color.RED);
                label12.setFont(label12.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label12.setText("E");
                label12.setForeground(Color.decode("#FE4B0C"));
                label12.setFont(label12.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label12.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN13.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label13.setText("I");
                label13.setForeground(Color.decode("#009900"));
                label13.setFont(label13.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label13.setText("F");
                label13.setForeground(Color.RED);
                label13.setFont(label13.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label13.setText("E");
                label13.setForeground(Color.decode("#FE4B0C"));
                label13.setFont(label13.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label13.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN14.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) { //|| diaf1==dia || diaent1==dia ) {
                label14.setText("I");
                label14.setForeground(Color.decode("#009900"));
                label14.setFont(label14.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label14.setText("F");
                label14.setForeground(Color.RED);
                label14.setFont(label14.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label14.setText("E");
                label14.setForeground(Color.decode("#FE4B0C"));
                label14.setFont(label14.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label14.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN15.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) { //|| diaf1==dia || diaent1==dia ) {
                label15.setText("I");
                label15.setForeground(Color.decode("#009900"));
                label15.setFont(label15.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label15.setText("F");
                label15.setForeground(Color.RED);
                label15.setFont(label15.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label15.setText("E");
                label15.setForeground(Color.decode("#FE4B0C"));
                label15.setFont(label15.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label15.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN16.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label16.setText("I");
                label16.setForeground(Color.decode("#009900"));
                label16.setFont(label16.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label16.setText("F");
                label16.setForeground(Color.RED);
                label16.setFont(label16.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label16.setText("E");
                label16.setForeground(Color.decode("#FE4B0C"));
                label16.setFont(label16.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label16.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN17.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label17.setText("I");
                label17.setForeground(Color.decode("#009900"));
                label17.setFont(label17.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label17.setText("F");
                label17.setForeground(Color.RED);
                label17.setFont(label17.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label17.setText("E");
                label17.setForeground(Color.decode("#FE4B0C"));
                label17.setFont(label17.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label17.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN18.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label18.setText("I");
                label18.setForeground(Color.decode("#009900"));
                label18.setFont(label18.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label18.setText("F");
                label18.setForeground(Color.RED);
                label18.setFont(label18.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label18.setText("E");
                label18.setForeground(Color.decode("#FE4B0C"));
                label18.setFont(label18.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label18.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN19.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label19.setText("I");
                label19.setForeground(Color.decode("#009900"));
                label19.setFont(label19.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label19.setText("F");
                label19.setForeground(Color.RED);
                label19.setFont(label19.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label19.setText("E");
                label19.setForeground(Color.decode("#FE4B0C"));
                label19.setFont(label19.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label19.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN20.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label20.setText("I");
                label20.setForeground(Color.decode("#009900"));
                label20.setFont(label20.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label20.setText("F");
                label20.setForeground(Color.RED);
                label20.setFont(label20.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label20.setText("E");
                label20.setForeground(Color.decode("#FE4B0C"));
                label20.setFont(label20.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label20.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN21.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label21.setText("I");
                label21.setForeground(Color.decode("#009900"));
                label21.setFont(label21.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label21.setText("F");
                label21.setForeground(Color.RED);
                label21.setFont(label21.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label21.setText("E");
                label21.setForeground(Color.decode("#FE4B0C"));
                label21.setFont(label21.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label21.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN22.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label22.setText("I");
                label22.setForeground(Color.decode("#009900"));
                label22.setFont(label22.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label22.setText("F");
                label22.setForeground(Color.RED);
                label22.setFont(label22.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label22.setText("E");
                label22.setForeground(Color.decode("#FE4B0C"));
                label22.setFont(label22.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label22.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN23.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label23.setText("I");
                label23.setForeground(Color.decode("#009900"));
                label23.setFont(label23.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label23.setText("F");
                label23.setForeground(Color.RED);
                label23.setFont(label23.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label23.setText("E");
                label23.setForeground(Color.decode("#FE4B0C"));
                label23.setFont(label23.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label23.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN24.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label24.setText("I");
                label24.setForeground(Color.decode("#009900"));
                label24.setFont(label24.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label24.setText("F");
                label24.setForeground(Color.RED);
                label24.setFont(label24.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label24.setText("E");
                label24.setForeground(Color.decode("#FE4B0C"));
                label24.setFont(label24.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label24.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN25.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label25.setText("I");
                label25.setForeground(Color.decode("#009900"));
                label25.setFont(label25.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label25.setText("F");
                label25.setForeground(Color.RED);
                label25.setFont(label25.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label25.setText("E");
                label25.setForeground(Color.decode("#FE4B0C"));
                label25.setFont(label25.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label25.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN26.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label26.setText("I");
                label26.setForeground(Color.decode("#009900"));
                label26.setFont(label26.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label26.setText("F");
                label26.setForeground(Color.RED);
                label26.setFont(label26.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label26.setText("E");
                label26.setForeground(Color.decode("#FE4B0C"));
                label26.setFont(label26.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label26.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN27.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label27.setText("I");
                label27.setForeground(Color.decode("#009900"));
                label27.setFont(label27.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label27.setText("F");
                label27.setForeground(Color.RED);
                label27.setFont(label27.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label27.setText("E");
                label27.setForeground(Color.decode("#FE4B0C"));
                label27.setFont(label27.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label27.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN28.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label28.setText("I");
                label28.setForeground(Color.decode("#009900"));
                label28.setFont(label28.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label28.setText("F");
                label28.setForeground(Color.RED);
                label28.setFont(label28.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label28.setText("E");
                label28.setForeground(Color.decode("#FE4B0C"));
                label28.setFont(label28.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label28.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN29.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label29.setText("I");
                label29.setForeground(Color.decode("#009900"));
                label29.setFont(label29.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label29.setText("F");
                label29.setForeground(Color.RED);
                label29.setFont(label29.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label29.setText("E");
                label29.setForeground(Color.decode("#FE4B0C"));
                label29.setFont(label29.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label29.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN30.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label30.setText("I");
                label30.setForeground(Color.decode("#009900"));
                label30.setFont(label30.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label30.setText("F");
                label30.setForeground(Color.RED);
                label30.setFont(label30.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label30.setText("E");
                label30.setForeground(Color.decode("#FE4B0C"));
                label30.setFont(label30.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label30.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN31.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label31.setText("I");
                label31.setForeground(Color.decode("#009900"));
                label31.setFont(label31.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label31.setText("F");
                label31.setForeground(Color.RED);
                label31.setFont(label31.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label31.setText("E");
                label31.setForeground(Color.decode("#FE4B0C"));
                label31.setFont(label31.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label31.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN32.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label32.setText("I");
                label32.setForeground(Color.decode("#009900"));
                label32.setFont(label32.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label32.setText("F");
                label32.setForeground(Color.RED);
                label32.setFont(label32.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label32.setText("E");
                label32.setForeground(Color.decode("#FE4B0C"));
                label32.setFont(label32.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label32.setText("");
        }
        
         fh = sumarRestarDiasFecha(fh, 1);
         labelN33.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
         if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
             if (fechaInicio.equals(fh)) {
                 label33.setText("I");
                 label33.setForeground(Color.decode("#009900"));
                 label33.setFont(label33.getFont().deriveFont(Font.BOLD));
             } else if (fechaFinal.equals(fh)) {
                 label33.setText("F");
                 label33.setForeground(Color.RED);
                 label33.setFont(label33.getFont().deriveFont(Font.BOLD));
             } else if (fechaEntrega.equals(fh)) {
                 label33.setText("E");
                 label33.setForeground(Color.decode("#FE4B0C"));
                 label33.setFont(label33.getFont().deriveFont(Font.BOLD));
             }
         } else {
             label33.setText("");
         }
         
         fh = sumarRestarDiasFecha(fh, 1);
         labelN34.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
         if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
             if (fechaInicio.equals(fh)) {
                 label34.setText("I");
                 label34.setForeground(Color.decode("#009900"));
                 label34.setFont(label34.getFont().deriveFont(Font.BOLD));
             } else if (fechaFinal.equals(fh)) {
                 label34.setText("F");
                 label34.setForeground(Color.RED);
                 label34.setFont(label34.getFont().deriveFont(Font.BOLD));
             } else if (fechaEntrega.equals(fh)) {
                 label34.setText("E");
                 label34.setForeground(Color.decode("#FE4B0C"));
                 label34.setFont(label34.getFont().deriveFont(Font.BOLD));
             }
         } else {
             label34.setText("");
         }
         
         fh = sumarRestarDiasFecha(fh, 1);
         labelN35.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
         if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
             if (fechaInicio.equals(fh)) {
                 label35.setText("I");
                 label35.setForeground(Color.decode("#009900"));
                 label35.setFont(label35.getFont().deriveFont(Font.BOLD));
             } else if (fechaFinal.equals(fh)) {
                 label35.setText("F");
                 label35.setForeground(Color.RED);
                 label35.setFont(label35.getFont().deriveFont(Font.BOLD));
             } else if (fechaEntrega.equals(fh)) {
                 label35.setText("E");
                 label35.setForeground(Color.decode("#FE4B0C"));
                 label35.setFont(label35.getFont().deriveFont(Font.BOLD));
             }
         } else {
             label35.setText("");
         }
         
        fh = sumarRestarDiasFecha(fh,1);
        labelN36.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label36.setText("I");
                label36.setForeground(Color.decode("#009900"));
                label36.setFont(label36.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label36.setText("F");
                label36.setForeground(Color.RED);
                label36.setFont(label36.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label36.setText("E");
                label36.setForeground(Color.decode("#FE4B0C"));
                label36.setFont(label36.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label36.setText("");
        }
        fh = sumarRestarDiasFecha(fh,1);
        labelN37.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label37.setText("I");
                label37.setForeground(Color.decode("#009900"));
                label37.setFont(label37.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label37.setText("F");
                label37.setForeground(Color.RED);
                label37.setFont(label37.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label37.setText("E");
                label37.setForeground(Color.decode("#FE4B0C"));
                label37.setFont(label37.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label37.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN38.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label38.setText("I");
                label38.setForeground(Color.decode("#009900"));
                label38.setFont(label38.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label38.setText("F");
                label38.setForeground(Color.RED);
                label38.setFont(label38.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label38.setText("E");
                label38.setForeground(Color.decode("#FE4B0C"));
                label38.setFont(label38.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label38.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN39.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label39.setText("I");
                label39.setForeground(Color.decode("#009900"));
                label39.setFont(label39.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label39.setText("F");
                label39.setForeground(Color.RED);
                label39.setFont(label39.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label39.setText("E");
                label39.setForeground(Color.decode("#FE4B0C"));
                label39.setFont(label39.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label39.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN40.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label40.setText("I");
                label40.setForeground(Color.decode("#009900"));
                label40.setFont(label40.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label40.setText("F");
                label40.setForeground(Color.RED);
                label40.setFont(label40.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label40.setText("E");
                label40.setForeground(Color.decode("#FE4B0C"));
                label40.setFont(label40.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label40.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN41.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label41.setText("I");
                label41.setForeground(Color.decode("#009900"));
                label41.setFont(label41.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label41.setText("F");
                label41.setForeground(Color.RED);
                label41.setFont(label41.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label41.setText("E");
                label41.setForeground(Color.decode("#FE4B0C"));
                label41.setFont(label41.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label41.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN42.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label42.setText("I");
                label42.setForeground(Color.decode("#009900"));
                label42.setFont(label42.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label42.setText("F");
                label42.setForeground(Color.RED);
                label42.setFont(label42.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label42.setText("E");
                label42.setForeground(Color.decode("#FE4B0C"));
                label42.setFont(label42.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label42.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN43.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label43.setText("I");
                label43.setForeground(Color.decode("#009900"));
                label43.setFont(label43.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label43.setText("F");
                label43.setForeground(Color.RED);
                label43.setFont(label43.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label43.setText("E");
                label43.setForeground(Color.decode("#FE4B0C"));
                label43.setFont(label43.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label43.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN44.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label44.setText("I");
                label44.setForeground(Color.decode("#009900"));
                label44.setFont(label44.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label44.setText("F");
                label44.setForeground(Color.RED);
                label44.setFont(label44.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label44.setText("E");
                label44.setForeground(Color.decode("#FE4B0C"));
                label44.setFont(label44.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label44.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN45.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label45.setText("I");
                label45.setForeground(Color.decode("#009900"));
                label45.setFont(label45.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label45.setText("F");
                label45.setForeground(Color.RED);
                label45.setFont(label45.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label45.setText("E");
                label45.setForeground(Color.decode("#FE4B0C"));
                label45.setFont(label45.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label45.setText("");
        }
   
    }
    
    
 //----------------- metodo que jala desde Orden de Trabajo Vista  -------------
    static void pasarOrdenDeTrabajo() {
        txtAnioOrden.setText(OrdenTrabajoVista.anio);
        txtNumOrdenTrabajo.setText(OrdenTrabajoVista.numOrdTrabParaModificar);
    }
//------------------------ metodo para jalar numero de pedido desde Pedidos Vista ------------------------------
     static void numDePedidoAOrdenTrabajo(){
         txtNumPedido.setText(PedidosVista.numero);           
     }
     
//------------------------ metodo para jalar numero de pedido desde Pedidos Vista ------------------------------
     static void numDePedidoRegistroAOrdenTrabajo(){
         txtNumPedido.setText(Integer.toString(Pedidos.numPedParaDetalle));           
     }
      
}
