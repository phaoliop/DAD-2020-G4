/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controller.ClienteController;
import controller.DetalleProformaController;
import controller.ProformaController;
import controller.UsuarioController;
import entity.Cliente;
import entity.DetalleProforma;
import entity.Proforma;
import entity.Usuario;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ARCRODINPC-06
 */
public class CotizacionesParaPedido extends javax.swing.JInternalFrame {

    /**
     * Creates new form CotizacionesParaPedido
     */
    
    static String codProf;
    String razonSocial;
    String contacto;
    String fecha;
    String filtro="razonSocial";
    int tabla;
    int idProf;
    
    String nombre;
    String apellido;
    String usuarioNombre;
    
    String comboEstado;
    String estado;
    
    int idCli;
    int idConCli;
    int idUs;
    String moneda;
    String validez;
    String formPag;
    String tipo;
    String tiemEnt;
    int dia1;
    int dia2;
    String obs;
    
    static String NumeroCotizacion;
    
    String anioCadena;
    int anio;
    
    boolean comprobar=false;
    int numPed;
    
    public CotizacionesParaPedido() {
        initComponents();
        listaProforma(filtro, txtLike.getText());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboBoxFiltro = new javax.swing.JComboBox<>();
        txtLike = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtNumCotiz = new javax.swing.JTextField();
        buttonAgregarPedido = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtRazSocial = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTipo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMoneda = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtFormPago = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTiempoEntrega = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        buttonCerrar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        labelSubtotal = new javax.swing.JLabel();
        labelIgv = new javax.swing.JLabel();
        labelTotal = new javax.swing.JLabel();
        txtDia1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtDia2 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("De Cotización para  Pedido");
        setToolTipText("");

        comboBoxFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "NUM. COTIZACIÓN", "RAZON SOCIAL", "CONTACTO", "ESTADO", "FECHA" }));
        comboBoxFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxFiltroItemStateChanged(evt);
            }
        });

        txtLike.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLikeKeyReleased(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num. Cotización", "Raz. Social", "Contacto", "Fecha", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTable1MouseEntered(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(88);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(305);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(110);
        }

        jLabel1.setText("Num. Cotización:");

        buttonAgregarPedido.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonAgregarPedido.setText("Agregar a Pedido");
        buttonAgregarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAgregarPedidoActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idDetCotiz", "Item", "Cant.", "Descripción", "Valor Unitario", "Precio Unitario", "Importe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(25);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(45);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(45);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(400);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTable2.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable2.getColumnModel().getColumn(6).setPreferredWidth(100);
        }

        jLabel2.setText("Cliente:");

        jLabel3.setText("Tipo:");

        jLabel4.setText("Moneda:");

        jLabel5.setText("Forma de Pago:");

        jLabel6.setText("Tiempo de Entrega:");

        jLabel7.setText("Estado:");

        jLabel8.setText("Elab. por:");

        buttonCerrar.setText("Cerrar");
        buttonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCerrarActionPerformed(evt);
            }
        });

        jLabel9.setText("Subtotal:");

        jLabel10.setText("I:G:V:(18%):");

        jLabel11.setText("Total:");

        labelSubtotal.setText("00000000.00");

        labelIgv.setText("00000000.00");

        labelTotal.setText("00000000.00");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("A");

        jLabel13.setText("DIAS HÁBILES");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonCerrar)
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtFormPago, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel6)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtDia1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtDia2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel13))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtTiempoEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNumCotiz, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(buttonAgregarPedido)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtRazSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(comboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLike, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 815, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelSubtotal)
                                    .addComponent(labelIgv)
                                    .addComponent(labelTotal)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 820, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLike, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNumCotiz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAgregarPedido)
                    .addComponent(jLabel2)
                    .addComponent(txtRazSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtFormPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtDia1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txtDia2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTiempoEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(labelSubtotal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(labelIgv))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(labelTotal))
                        .addGap(119, 119, 119))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(buttonCerrar)
                .addGap(4, 4, 4))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_buttonCerrarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        tabla = jTable1.getSelectedRow();
        codProf = jTable1.getValueAt(tabla, 0).toString();
        fecha = jTable1.getValueAt(tabla, 3).toString();
        try {
            consultarAnioProforma(fecha, codProf);
        } catch (Exception ex) {
            Logger.getLogger(CotizacionesParaPedido.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            consultarCodProforma(codProf);
            txtNumCotiz.setText(codProf);
            consultarProforma(codProf, anio);
        } catch (Exception ex) {
            Logger.getLogger(ProformasVista.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(idProf);
        listaDetalleProforma(idProf);
        try {
            consultarPago();
        } catch (Exception ex) {
            Logger.getLogger(ProformasVista.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void comboBoxFiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxFiltroItemStateChanged
        if (comboBoxFiltro.getSelectedItem() == "NUM. COTIZACIÓN") {
            filtro = "codProforma";
            listaProforma(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "RAZON SOCIAL") {
            filtro = "razonSocial";
            listaProforma(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "CONTACTO") {
            filtro = "concat(nombres,' ',apellidos)";
            listaProforma(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "ESTADO") {
            filtro = "estado";
            listaProforma(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "FECHA") {
            filtro = "fechaEmision";
            listaProforma(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "SELECCIONAR") {
            filtro = "razonSocial";
            listaProforma(filtro, txtLike.getText());
            System.out.println(filtro);
        }
    }//GEN-LAST:event_comboBoxFiltroItemStateChanged

    private void txtLikeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLikeKeyReleased
        listaProforma(filtro,txtLike.getText());
    }//GEN-LAST:event_txtLikeKeyReleased

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_UP)) {

            tabla = jTable1.getSelectedRow();
            codProf = jTable1.getValueAt(tabla, 0).toString();
            fecha = jTable1.getValueAt(tabla, 3).toString();
            try {
                consultarAnioProforma(fecha, codProf);
            } catch (Exception ex) {
                Logger.getLogger(CotizacionesParaPedido.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                consultarCodProforma(codProf);
                txtNumCotiz.setText(codProf);
                consultarProforma(codProf, anio);
            } catch (Exception ex) {
                Logger.getLogger(ProformasVista.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println(idProf);
            listaDetalleProforma(idProf);
            try {
                consultarPago();
            } catch (Exception ex) {
                Logger.getLogger(ProformasVista.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jTable1KeyReleased

    private void buttonAgregarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAgregarPedidoActionPerformed
        try {
            consultarCotizacionParaPedido(idProf);
        } catch (Exception ex) {
            Logger.getLogger(CotizacionesParaPedido.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (comprobar == false) {

            JOptionPane.showMessageDialog(null, "Cotización ya tiene pedido");

        } else if (comprobar == true) {

            Pedidos.NumCotParaPedido();
            dispose();
        }
    }//GEN-LAST:event_buttonAgregarPedidoActionPerformed

    private void jTable1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton buttonAgregarPedido;
    private javax.swing.JButton buttonCerrar;
    private javax.swing.JComboBox<String> comboBoxFiltro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel labelIgv;
    private javax.swing.JLabel labelSubtotal;
    private javax.swing.JLabel labelTotal;
    private javax.swing.JTextField txtDia1;
    private javax.swing.JTextField txtDia2;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtFormPago;
    private javax.swing.JTextField txtLike;
    private javax.swing.JTextField txtMoneda;
    public static javax.swing.JTextField txtNumCotiz;
    private javax.swing.JTextField txtRazSocial;
    private javax.swing.JTextField txtTiempoEntrega;
    private javax.swing.JTextField txtTipo;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

ProformaController obj = new ProformaController();
Proforma pro;

ClienteController clientecontroler = new ClienteController();
Cliente cliente;

UsuarioController usuariocontroler = new UsuarioController();
Usuario usuario;

DetalleProformaController detalleproformacontroler = new DetalleProformaController();
DetalleProforma detalleproforma;

//--------------------------- Consultar -----------------------------
    private void consultarCodProforma(String codProforma) throws Exception {
        pro = obj.ProformaBuscar(codProforma);
        if (pro != null) {

            idProf = pro.getIdProforma();

        } else {
            JOptionPane.showMessageDialog(null, "Proforma no registrada por ahora");
            //System.out.println("Error");
        }
    }

//----------------------------------------- Tabla --------------------------------------------
    void listaProforma(String valorFiltro,String filtrolike) {
        List<Proforma> lista;
        try {
            lista = obj.ProformaFiltrar(valorFiltro, filtrolike);
            verProforma(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    void verProforma(List<Proforma> lista) {

        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        tabla.setRowCount(0);
        for (Proforma prof : lista) {
            Object[] fila = {prof.getCodProforma(), prof.getRazonSocial(), prof.getContacto(), prof.getFechaEmision(),prof.getEstado()};
            tabla.addRow(fila);
        }
    }
//---------------------------------- Consultar Proforma con evento clicked -------------------------------------
     private void consultarProforma(String codigo, int anio) throws Exception {
        pro= obj.ProformaBuscar(codigo,anio);
        if (pro != null) {
            idProf=pro.getIdProforma();
            idCli = pro.getIdCliente();
            consultarClientePorId(idCli);
            idConCli = pro.getIdContactoCliente();
            idUs = pro.getIdUsuario();
            consultarUsuario1(idUs);
            moneda = pro.getMoneda();
            txtMoneda.setText(pro.getMoneda());
            validez = pro.getValidez();
            formPag = pro.getFormPago();
            txtFormPago.setText(pro.getFormPago());
            fecha=pro.getFechaEmision();
            tipo = pro.getTipo();
            txtTipo.setText(pro.getTipo());
            
            estado = pro.getEstado();
            txtEstado.setText(pro.getEstado());
            dia1=pro.getDia1();
            txtDia1.setText(Integer.toString(pro.getDia1()));
            txtDia2.setText(Integer.toString(pro.getDia2()));
            dia2=pro.getDia2();
            obs = pro.getObservacion();

        } else {
            JOptionPane.showMessageDialog(null, "Proforma no registrada");
            //System.out.println("Error");
        }
    }
     
     private void consultarClientePorId(int iddecliente) throws Exception {
        cliente = clientecontroler.ClienteBuscar1(iddecliente);
        if (cliente != null) {

            //txtRazonSocial.setText(pro.getRazonSocial());
            txtRazSocial.setText(cliente.getRazonSocial());
           
        } else {
            JOptionPane.showMessageDialog(null, "Cliente no registrado por ahora");
            //System.out.println("Error");
        }
    }
     
     private void consultarUsuario1(int idus) throws Exception {
        usuario = usuariocontroler.UsuarioBuscar2(idus);
        if (usuario != null) {
            nombre = usuario.getNombres();
            apellido = usuario.getApellidos();
            usuarioNombre = nombre + " " + apellido;
            txtUsuario.setText(usuarioNombre);
        } else {
            JOptionPane.showMessageDialog(null, "Cliente no registrado");
            //System.out.println("Error");
        }
    }
     
 //---------------------------Segunda Tabla --> Detalle de Proforma -------------------  
       
 void listaDetalleProforma(int idCot) {
        List<DetalleProforma> lista;
        try {
            lista = detalleproformacontroler.DetalleProformaFiltrar(idCot);
            verDetalleProforma(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    private void verDetalleProforma(List<DetalleProforma> lista) {
        String it,vu,f;
        float uv;
        DefaultTableModel tabla = (DefaultTableModel) jTable2.getModel();
        tabla.setRowCount(0);
        for (DetalleProforma detProf : lista) {
            if(!"".equals(detProf.getPrecioUnitario())){
                it=detProf.getImporte();
            }else{
                it="";
          }
            if(!"".equals(detProf.getPrecioUnitario())){
                f=detProf.getItem1();
            }else{
                f="";
          }
           
                Object[] fila = {detProf.getIdDetalleProforma(), detProf.getItem(), detProf.getCantidad(), detProf.getDescripcion(), detProf.getPrecioUnitario(),f,it};
                tabla.addRow(fila);
            }
        
    }
    
     void consultarPago() throws Exception {
        detalleproforma = detalleproformacontroler.DetalleProformaBuscar1(idProf);
       
        if (detalleproforma != null) {
            if (detalleproforma.getSubtotal() != null) {
                labelSubtotal.setText(detalleproforma.getSubtotal());
            } else {
                labelSubtotal.setText("0000.00");
            }
            if (detalleproforma.getIgv() != null) {
                labelIgv.setText(detalleproforma.getIgv());
            } else {
                labelIgv.setText("0000.00");
            }
            if (detalleproforma.getTotal() != null) {
                labelTotal.setText(detalleproforma.getTotal());
            } else {
                labelTotal.setText("0000.00");
            }
            
        }

        else {
            JOptionPane.showMessageDialog(null, "Cuentas no registradas");
            //System.out.println("Error");
        }
    }
     
//----------------------- consulta fecha para consultar proforma con anio --------------
     private void consultarAnioProforma(String fech, String num) throws Exception {
        pro = obj.ProformaBuscarAnio(fech, num);
        if (pro != null) {
            idProf=pro.getIdProforma();
            System.out.println("idProf del año:"+idProf);
            anioCadena=pro.getAnio();
            anio=Integer.parseInt(anioCadena);
            System.out.println("año:"+anio);
        }
  
    }
 // --------------------- Para generar pedido -----------------------------------
     private void consultarCotizacionParaPedido(int ic) throws Exception {
        pro = obj.ProformaBuscarCotizacionParaPedido(ic);
        if (pro != null) {
            idProf=pro.getIdProforma();
            numPed=pro.getNumPedido();
            comprobar=false;
        } else {
            comprobar=true;
          }
    }
}
