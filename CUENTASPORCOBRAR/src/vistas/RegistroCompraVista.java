/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controller.ComprobanteSunatController;
import controller.GlosaController;
import controller.ProveedorController;
import controller.RegistroCompraController;
import controller.RegistroPagoCompraController;
import controller.TipoCambioController;
import entity.ComprobanteSunat;
import entity.Glosa;
import entity.Proveedor;
import entity.RegistroCompra;
import entity.RegistroPagoCompra;
import entity.TipoCambio;
import exportarexcel.clsExportarExcel;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.Format;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ARCRODINPC-05
 */
public class RegistroCompraVista extends javax.swing.JInternalFrame {

    /**
     * Creates new form RegistroCompraVista
     */
    int idRegistroCompra;
    String fechaRegistro;
    int idProveedor;
    String numeroOrdenCompra;
    int idComprobante;
    String serie;
    String numero;
    String fechaEmision;
    String fechaAprobacion;
    String fechaVencimiento;
    int idglosa;
    String moneda;
    String montoTotal;
    String detraccion;
    String estadoCombo;
    
    String filtro="p.razonSocial";
    
    float tipoCambioVenta;
    float totalDolares;
    float totalSolesCalculo;
    float totalDetraccion;
    
    int tabla;
    
    static String serieStatic;
    static String numeroStatic;

    DecimalFormatSymbols separadoresPersonalizados = new DecimalFormatSymbols();
    
    public RegistroCompraVista() throws ParseException {
        initComponents();
        listaCompras(filtro, txtLike.getText());
        dateChooserInicio.setCalendar(convertirFechaDate(fechaActual()));
        dateChooserFin.setCalendar(convertirFechaDate(fechaActual()));
        jTable1.setDefaultRenderer (Object.class, new RowsRenderer());
        habilitarInicio();
    }

    public class RowsRenderer extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable jTable1, Object value, boolean selected, boolean focused, int row, int column) {
            jTable1.setBackground(Color.white);
            jTable1.setForeground(Color.black);
            super.getTableCellRendererComponent(jTable1, value, selected, focused, row, column);
            if ("CANCELADO".equals((jTable1.getValueAt(row, column)))) {
                this.setOpaque(true);
                this.setForeground(Color.decode("#009900"));//verde

            } else if ("EN PROCESO".equals((jTable1.getValueAt(row, column)))) {
                this.setOpaque(true);
                this.setForeground(Color.decode("#CCCC00"));

            } else if ("ANULADO".equals((jTable1.getValueAt(row, column)))) {
                this.setOpaque(true);
                this.setForeground(Color.RED);

            } else if ((!"CANCELADO".equals((jTable1.getValueAt(row, column))))
                    && (!"EN PROCESO".equals((jTable1.getValueAt(row, column)))
                    && (!"ANULADO".equals((jTable1.getValueAt(row, column)))))) {
                this.setOpaque(true);
                this.setForeground(Color.black);
            }

            if (selected) {
                setBackground(Color.decode("#39698a"));
                setForeground(Color.decode("#FFFFFF"));
            } else {
                setBackground(Color.WHITE);
            }

            return this;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboBoxFiltro = new javax.swing.JComboBox<>();
        txtLike = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        buttonBuscarFecha = new javax.swing.JButton();
        buttonExportar = new javax.swing.JButton();
        buttonOrdenarCompra = new javax.swing.JButton();
        dateChooserFin = new com.toedter.calendar.JDateChooser();
        dateChooserInicio = new com.toedter.calendar.JDateChooser();
        labelComprobante = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSerie = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtFechaEmision = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCambioVenta = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtFechaAprobacion = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtFechaVencimiento = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtRazSocial = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtRuc = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtConcepto = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        comboBoxMoneda = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        txtMontoTotal = new javax.swing.JTextField();
        labelSimboloSoles = new javax.swing.JLabel();
        txtMontoSoles = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        comboBoxDetraccion = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        txtMontoDetraccion = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        comboBoxEstado = new javax.swing.JComboBox<>();
        txtObservacion = new javax.swing.JTextField();
        buttonModificarEstado = new javax.swing.JButton();
        buttonGuardarEstado = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        txtNumOrdenCompra = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        buttonRegistrarPagoCompra = new javax.swing.JButton();
        buttonEditarCompra = new javax.swing.JButton();
        buttonCerrar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setClosable(true);

        comboBoxFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "RAZÓN SOCIAL", "R.U.C.", "COMPROBANTE", "SERIE", "NÚMERO", "CONCEPTO", "F. EMISIÓN", "F. VENCIMIENTO", "DETRACCION", "ESTADO" }));
        comboBoxFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxFiltroItemStateChanged(evt);
            }
        });

        txtLike.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLikeKeyReleased(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idRc", "F. Emisión", "Razón Social", "R.U.C.", "Comprob.", "Cód. Comprobante", "Serie", "Número", "Concepto", "Cód. Concepto", "Monto Total", "T.C.V.", "Valor Venta", "I.G.V.", "Detracción", "F. Venc.", "Estado", "Observación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(75);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(170);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(95);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(10).setPreferredWidth(73);
            jTable1.getColumnModel().getColumn(11).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(12).setPreferredWidth(75);
            jTable1.getColumnModel().getColumn(13).setPreferredWidth(65);
            jTable1.getColumnModel().getColumn(14).setPreferredWidth(78);
            jTable1.getColumnModel().getColumn(15).setPreferredWidth(75);
            jTable1.getColumnModel().getColumn(16).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(17).setPreferredWidth(147);
        }

        jLabel1.setText("Comprobantes de las fechas desde");

        jLabel2.setText("hasta");

        buttonBuscarFecha.setText("Buscar");
        buttonBuscarFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarFechaActionPerformed(evt);
            }
        });

        buttonExportar.setText("Exportar Excel");
        buttonExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExportarActionPerformed(evt);
            }
        });

        buttonOrdenarCompra.setText("Ordenar");
        buttonOrdenarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOrdenarCompraActionPerformed(evt);
            }
        });

        dateChooserFin.setDateFormatString("yyyy-MM-dd");

        dateChooserInicio.setDateFormatString("yyyy-MM-dd");

        labelComprobante.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelComprobante.setText("COMPROBANTE");

        jLabel4.setText("Serie:");

        jLabel5.setText("Número:");

        jLabel6.setText("Fecha Emisión:");

        jLabel7.setText("T.C.Venta:");

        jLabel8.setText("Fecha Aprobación:");

        txtFechaAprobacion.setToolTipText("");

        jLabel9.setText("Fecha Vencimiento:");

        jLabel10.setText("Razón Social:");

        jLabel11.setText("R.U.C.:");

        jLabel12.setText("Concepto:");

        jLabel13.setText("Moneda:");

        comboBoxMoneda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "DOLARES AMERICANOS", "SOLES" }));

        jLabel14.setText("Monto Total:");

        labelSimboloSoles.setText("S/");

        jLabel16.setText("Detracción:");

        comboBoxDetraccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "APLICA", "NO APLICA" }));

        jLabel17.setText("Monto Det.:");

        jLabel18.setText("en Soles.");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel19.setText("Estado:");

        jLabel20.setText("Observación:");

        comboBoxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "CANCELADO", "EN PROCESO", "ANULADO", "CON PRORROGA" }));
        comboBoxEstado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxEstadoItemStateChanged(evt);
            }
        });

        buttonModificarEstado.setText("Modificar");
        buttonModificarEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarEstadoActionPerformed(evt);
            }
        });

        buttonGuardarEstado.setText("Guardar");
        buttonGuardarEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGuardarEstadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel20)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(comboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonModificarEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtObservacion, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addComponent(buttonGuardarEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(comboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonModificarEstado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtObservacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonGuardarEstado))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel21.setText("N° O.C.:");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idPagoCompra", "Tipo de Pago", "Fecha Abonado", "Moneda", "Monto Abonado", "N° Operación", "Observación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(105);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(120);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(120);
            jTable2.getColumnModel().getColumn(5).setPreferredWidth(150);
            jTable2.getColumnModel().getColumn(6).setPreferredWidth(280);
        }

        buttonRegistrarPagoCompra.setText("Registrar Pago de Compra");
        buttonRegistrarPagoCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegistrarPagoCompraActionPerformed(evt);
            }
        });

        buttonEditarCompra.setText("Ver / Editar Compra");
        buttonEditarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditarCompraActionPerformed(evt);
            }
        });

        buttonCerrar.setText("Cerrar");
        buttonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCerrarActionPerformed(evt);
            }
        });

        jButton1.setText("Limpiar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 896, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(buttonRegistrarPagoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buttonEditarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buttonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(comboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLike, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateChooserInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateChooserFin, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonBuscarFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonExportar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonOrdenarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFechaEmision, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCambioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFechaAprobacion, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(4, 4, 4)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFechaVencimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel12))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtRazSocial, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                                    .addComponent(txtConcepto))
                                                .addGap(18, 18, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtRuc, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(135, 135, 135)
                                                .addComponent(jLabel14)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(comboBoxMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel16)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(comboBoxDetraccion, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtNumOrdenCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(txtMontoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelSimboloSoles, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtMontoSoles, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel17)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtMontoDetraccion, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel18)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 10, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtLike, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(buttonBuscarFecha)
                        .addComponent(buttonExportar)
                        .addComponent(buttonOrdenarCompra)
                        .addComponent(jButton1))
                    .addComponent(dateChooserInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2))
                    .addComponent(dateChooserFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelComprobante)
                    .addComponent(jLabel4)
                    .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtFechaEmision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtCambioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtFechaAprobacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtFechaVencimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtRazSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(comboBoxMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(comboBoxDetraccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(txtRuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel14)
                                .addComponent(txtMontoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(labelSimboloSoles)
                                .addComponent(txtMontoSoles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel17)
                                .addComponent(txtMontoDetraccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(txtConcepto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel21)
                                    .addComponent(txtNumOrdenCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(13, 13, 13)
                            .addComponent(buttonRegistrarPagoCompra)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(buttonEditarCompra)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(buttonCerrar)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCerrarActionPerformed
        estadoCombo="EN PROCESO";
        dispose();
    }//GEN-LAST:event_buttonCerrarActionPerformed

    private void comboBoxEstadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxEstadoItemStateChanged
        if (comboBoxEstado.getSelectedIndex() != 0) {
            estadoCombo = comboBoxEstado.getSelectedItem().toString();
            System.out.println(estadoCombo);
        } else {
            estadoCombo="";
        }
    }//GEN-LAST:event_comboBoxEstadoItemStateChanged

    private void buttonBuscarFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarFechaActionPerformed
        listaVentasExport(convertirFechaString(dateChooserInicio.getDate()), convertirFechaString(dateChooserFin.getDate()));
    }//GEN-LAST:event_buttonBuscarFechaActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        limpiar();
        tabla = jTable1.getSelectedRow();
        idRegistroCompra = Integer.parseInt(jTable1.getValueAt(tabla, 0).toString());
        try {
            consultarRegistroCompra(idRegistroCompra);
        } catch (Exception ex) {
            Logger.getLogger(RegistroCompraVista.class.getName()).log(Level.SEVERE, null, ex);
        }
        listaRegistroPagoCompra(idRegistroCompra);
        
        habilitarBuscar();
    }//GEN-LAST:event_jTable1MouseClicked

    private void buttonExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExportarActionPerformed
        clsExportarExcel obj = new clsExportarExcel();
        try {
            obj.exportarExcel(jTable1);
        } catch (IOException ex) {
            Logger.getLogger(CajaChicaRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonExportarActionPerformed

    private void txtLikeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLikeKeyReleased
        listaCompras(filtro, txtLike.getText());
    }//GEN-LAST:event_txtLikeKeyReleased

    private void comboBoxFiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxFiltroItemStateChanged
        
        if (comboBoxFiltro.getSelectedItem() == "RAZÓN SOCIAL") {
            filtro = "p.razonSocial";
            listaCompras(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "R.U.C.") {
            filtro = "p.ruc";
            listaCompras(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "COMPROBANTE") {
            filtro = "cs.descripcion";
            listaCompras(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "SERIE") {
            filtro = "rc.serie";
            listaCompras(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "NÚMERO") {
            filtro = "rc.numero";
            listaCompras(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "CONCEPTO") {
            filtro = "g.concepto";
            listaCompras(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "F. EMISIÓN") {
            filtro = "rc.fechaEmision";
            listaCompras(filtro, txtLike.getText());
            System.out.println(filtro);
        }else if (comboBoxFiltro.getSelectedItem() == "F. VENCIMIENTO") {
            filtro = "rc.fechaVencimiento";
            listaCompras(filtro, txtLike.getText());
            System.out.println(filtro);
        }else if (comboBoxFiltro.getSelectedItem() == "DETRACCION") {
            filtro = "rc.detraccion";
            listaCompras(filtro, txtLike.getText());
            System.out.println(filtro);
        }else if (comboBoxFiltro.getSelectedItem() == "ESTADO") {
            filtro = "rc.estado";
            listaCompras(filtro, txtLike.getText());
            System.out.println(filtro);
        }else if (comboBoxFiltro.getSelectedItem() == "SELECCIONE") {
            filtro = "p.razonSocial";
            listaCompras(filtro, txtLike.getText());
            System.out.println(filtro);
        }        
    }//GEN-LAST:event_comboBoxFiltroItemStateChanged

    private void buttonEditarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditarCompraActionPerformed
        RegistrarCompras reCom = null;
        
        try {
            reCom = new RegistrarCompras();
        } catch (ParseException ex) {
            Logger.getLogger(RegistroCompraVista.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        Principal.jDesktopPane1.add(reCom);
        reCom.toFront();
        reCom.setVisible(true);
        RegistrarCompras.SerieYNumeroDeVistaCompras();
    }//GEN-LAST:event_buttonEditarCompraActionPerformed

    private void buttonRegistrarPagoCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegistrarPagoCompraActionPerformed
         RegistrarPagosCompra rePaCo = null;
        try {
            rePaCo = new RegistrarPagosCompra();
        } catch (Exception ex) {
            Logger.getLogger(RegistrarCompras.class.getName()).log(Level.SEVERE, null, ex);
        }
        RegistrarPagosCompra.idRegistroCompraStatic=idRegistroCompra;
        Principal.jDesktopPane1.add(rePaCo);
        rePaCo.toFront();
        rePaCo.setVisible(true);
    }//GEN-LAST:event_buttonRegistrarPagoCompraActionPerformed

    private void buttonGuardarEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGuardarEstadoActionPerformed
        procesar(2);
        listaCompras(filtro, txtLike.getText());
        habilitarGuardar();
    }//GEN-LAST:event_buttonGuardarEstadoActionPerformed

    private void buttonOrdenarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOrdenarCompraActionPerformed
        listaComprasOrdenar();
    }//GEN-LAST:event_buttonOrdenarCompraActionPerformed

    private void buttonModificarEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarEstadoActionPerformed
        habilitarModificar();
    }//GEN-LAST:event_buttonModificarEstadoActionPerformed

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_UP)) {

            limpiar();
            tabla = jTable1.getSelectedRow();
            idRegistroCompra = Integer.parseInt(jTable1.getValueAt(tabla, 0).toString());
            try {
                consultarRegistroCompra(idRegistroCompra);
            } catch (Exception ex) {
                Logger.getLogger(RegistroCompraVista.class.getName()).log(Level.SEVERE, null, ex);
            }
            listaRegistroPagoCompra(idRegistroCompra);

            habilitarBuscar();
        }
    }//GEN-LAST:event_jTable1KeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        limpiar();
        habilitarInicio();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBuscarFecha;
    private javax.swing.JButton buttonCerrar;
    private javax.swing.JButton buttonEditarCompra;
    private javax.swing.JButton buttonExportar;
    private javax.swing.JButton buttonGuardarEstado;
    private javax.swing.JButton buttonModificarEstado;
    private javax.swing.JButton buttonOrdenarCompra;
    private javax.swing.JButton buttonRegistrarPagoCompra;
    private javax.swing.JComboBox<String> comboBoxDetraccion;
    private javax.swing.JComboBox<String> comboBoxEstado;
    private javax.swing.JComboBox<String> comboBoxFiltro;
    private javax.swing.JComboBox<String> comboBoxMoneda;
    private com.toedter.calendar.JDateChooser dateChooserFin;
    private com.toedter.calendar.JDateChooser dateChooserInicio;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel labelComprobante;
    private javax.swing.JLabel labelSimboloSoles;
    private javax.swing.JTextField txtCambioVenta;
    private javax.swing.JTextField txtConcepto;
    private javax.swing.JTextField txtFechaAprobacion;
    private javax.swing.JTextField txtFechaEmision;
    private javax.swing.JTextField txtFechaVencimiento;
    private javax.swing.JTextField txtLike;
    private javax.swing.JTextField txtMontoDetraccion;
    private javax.swing.JTextField txtMontoSoles;
    private javax.swing.JTextField txtMontoTotal;
    private javax.swing.JTextField txtNumOrdenCompra;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtObservacion;
    private javax.swing.JTextField txtRazSocial;
    private javax.swing.JTextField txtRuc;
    private javax.swing.JTextField txtSerie;
    // End of variables declaration//GEN-END:variables

    RegistroCompraController registrocompracontroler = new RegistroCompraController();
    RegistroCompra registrocompra;
    
    ComprobanteSunatController comprobantecontroler=new ComprobanteSunatController();
    ComprobanteSunat comprobante;
    
    GlosaController glosacontroler= new GlosaController();
    Glosa glosa;
    
    TipoCambioController tipocambiocontroler=new TipoCambioController();
    TipoCambio tipocambio;
    
    ProveedorController proveedorcontroler= new ProveedorController();
    Proveedor proveedor;
    
    RegistroPagoCompraController registropagocompracontroler= new RegistroPagoCompraController();
    RegistroPagoCompra registropagocompra;
    
    
    //----------------------------------------- Procesar ---------------------------------------------

    void procesar(int op) {
        registrocompra = leerDatos();
        try {
            String msg = registrocompracontroler.RegistroCompraProcesar(registrocompra, op);
            JOptionPane.showMessageDialog(null, msg);
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("Error" + e.getMessage());
        }
    } 

    
    RegistroCompra leerDatos() {
        RegistroCompra reco = new RegistroCompra();

        reco.setIdRegistroCompra(idRegistroCompra);
        reco.setFechaRegistro(fechaRegistro);
        reco.setIdProveedor_fk(idProveedor);
        reco.setNumOrdenCompra(numeroOrdenCompra);
        reco.setIdComprobanteSunat_fk(idComprobante);
        reco.setSerie(serie);
        reco.setNumero(numero);
        reco.setFechaEmision(fechaEmision);
        reco.setFechaAprobacion(fechaAprobacion);
        reco.setFechaVencimiento(fechaVencimiento);
        reco.setIdGlosa_fk(idglosa);
        reco.setMoneda(moneda);
        reco.setMontoFacturado(montoTotal);
        reco.setDetraccion(detraccion);
        reco.setEstado(estadoCombo);
        reco.setObservacion(txtObservacion.getText());
        
        return reco;
    }
    
//--------------------------- Consultar Tipo de Cambio ----------------------------
    
    float tipoCambioVenta(String f) throws Exception {
        tipocambio = tipocambiocontroler.TipoCambioBuscarCambio(f);

        if (tipocambio != null) {
            return tipocambio.getPrecioVenta();

        } else {
//            JOptionPane.showMessageDialog(null, "tipo cambio no registradas");
            System.out.println("Error");
        }
        return tipocambio.getPrecioVenta();
    }
    
//----------------------------------------- Tabla ---------------------------------
    
    void listaCompras(String nombreFiltro, String valorFiltro) {
        List<RegistroCompra> lista;
        try {
            lista = registrocompracontroler.RegistroCompraFiltrar(nombreFiltro, valorFiltro);
            verCompras(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    void verCompras(List<RegistroCompra> lista) throws Exception {
        separadoresPersonalizados.setDecimalSeparator('.');
        DecimalFormat df = new DecimalFormat("0.000", separadoresPersonalizados);
        String numeropedido;
        float tCVenta = 0, valorVenta = 0, igv = 0, montoDeFact;
        DefaultTableModel tabla1 = (DefaultTableModel) jTable1.getModel();
        tabla1.setRowCount(0);
        for (RegistroCompra reco : lista) {
            
            if("DOLARES AMERICANOS".equals(reco.getMoneda())){
                tCVenta=tipoCambioVenta(reco.getFechaEmision());
                montoDeFact=Float.parseFloat(reco.getMontoFacturado());
                valorVenta=montoDeFact*tCVenta;
                igv=(float) (((float) (valorVenta/1.18))*0.18);
            }else if("SOLES".equals(reco.getMoneda())){
                tCVenta=1;
                montoDeFact=Float.parseFloat(reco.getMontoFacturado());
                valorVenta=montoDeFact*tCVenta;
                igv=(float) ((float) (valorVenta/1.18)*0.18);
            }
           
            Object[] fila = {reco.getIdRegistroCompra(), reco.getFechaEmision(), reco.getRazonSocial(), reco.getRuc(),
                             reco.getDescripcion(), reco.getCodigos(), reco.getSerie(), reco.getNumero(),
                             reco.getConcepto(), reco.getCodigog(), reco.getMontoFacturado(), df.format(tCVenta), 
                             df.format(valorVenta), df.format(igv), reco.getDetraccion(), reco.getFechaVencimiento(), 
                             reco.getEstado(), reco.getObservacion()};
            tabla1.addRow(fila);
        }
    }
    
    void listaComprasOrdenar() {
        List<RegistroCompra> lista;
        try {
            lista = registrocompracontroler.RegistroCompraOrdenar() ;
            verCompras(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
   }
    
    void listaVentasExport(String fDesde, String fHasta) {
        List<RegistroCompra> lista;
        try {
            lista = registrocompracontroler.RegistroCompraFiltrarExport(fDesde, fHasta);
            verCompras(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }
    
//---------------------------------- Proveedor, Comprobante, Glosa -------------------------------------
    
    private void consultarProveedor(int idProvee) throws Exception {
        proveedor = proveedorcontroler.ProveedorBuscarId(idProvee);
        if (proveedor != null) {

            idProveedor=proveedor.getIdProveedor();
            // txtNombres.setText(pro.getNombres());
            txtRazSocial.setText(proveedor.getRazonSocial());
            txtRuc.setText(proveedor.getRuc());

        } else {
            JOptionPane.showMessageDialog(null, "Proveedor no registrado");
            //System.out.println("Error");
        }
    }
    
    
    private void consultarComprobante(int idComprob) throws Exception {
        comprobante = comprobantecontroler.ComprobanteSunatBuscar(idComprob);
        if (comprobante != null) {

            idComprobante=comprobante.getIdComprobanteSunat();
            labelComprobante.setText(comprobante.getDescripcion());

        } else {
            JOptionPane.showMessageDialog(null, "Comprobante no registrado");
            //System.out.println("Error");
        }
    }
    
    private void consultarGlosa(int idGlosa) throws Exception {
        glosa = glosacontroler.GlosaBuscar(idGlosa);
        if (glosa != null) {

            idGlosa=glosa.getIdGlosa();
            txtConcepto.setText(glosa.getConcepto());
            
        } else {
            JOptionPane.showMessageDialog(null, "Glosa no registrada");
            //System.out.println("Error");
        }
    }
    
//------------------------------- Calcular MontoDetraccion y MontoSoles ------------------------------
    
    void calcularMontoDetraccionYMontoSoles() {
        
        separadoresPersonalizados.setDecimalSeparator('.');
        DecimalFormat df = new DecimalFormat("0.000", separadoresPersonalizados);

        try {
          tipoCambioVenta=  tipoCambioVenta(fechaEmision);
        } catch (Exception ex) {
            Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (comboBoxMoneda.getSelectedIndex() == 1) {

            try {
                tipoCambioVenta=  tipoCambioVenta(fechaEmision);
            } catch (Exception ex) {
                Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
            }
            txtMontoSoles.setEnabled(true);
            labelSimboloSoles.setText("S/.");
            totalDolares = Float.parseFloat(txtMontoTotal.getText());
            totalSolesCalculo = totalDolares * tipoCambioVenta;
            txtMontoSoles.setText(df.format(totalSolesCalculo));

            if (comboBoxDetraccion.getSelectedIndex() == 1) {

                totalDetraccion = (float) (Float.parseFloat(txtMontoSoles.getText()) * 0.12);
                txtMontoDetraccion.setText(df.format(totalDetraccion));

            } else if (comboBoxDetraccion.getSelectedIndex() == 2) {

                txtMontoDetraccion.setText("");

            }

        } else if (comboBoxMoneda.getSelectedIndex() == 2) {

            txtMontoSoles.setEnabled(false);
            txtMontoSoles.setText("");
            labelSimboloSoles.setText("");
            totalSolesCalculo = Float.parseFloat(txtMontoTotal.getText());

            if (comboBoxDetraccion.getSelectedIndex() == 1) {

                totalDetraccion = (float) (totalSolesCalculo * 0.12);
                txtMontoDetraccion.setText(df.format(totalDetraccion));

            } else if (comboBoxDetraccion.getSelectedIndex() == 2) {

                txtMontoDetraccion.setText("");

            }

        }

    }
    
//-------------------------------------- Consultar Compra ----------------------------------------------
    
    private void consultarRegistroCompra(int idRC) throws Exception {
        registrocompra = registrocompracontroler.RegistroCompraBuscar(idRC);
        if (registrocompra != null) {
            
            txtSerie.setText(registrocompra.getSerie());
            serieStatic=registrocompra.getSerie();
            serie=registrocompra.getSerie();
            txtNumero.setText(registrocompra.getNumero());
            numeroStatic=registrocompra.getNumero();
            numero=registrocompra.getNumero();
            idRegistroCompra=registrocompra.getIdRegistroCompra();
            RegistrarPagosCompra.idRegistroCompraStatic=registrocompra.getIdRegistroCompra();
            fechaRegistro=registrocompra.getFechaRegistro();
            idProveedor=registrocompra.getIdProveedor_fk();
            consultarProveedor(registrocompra.getIdProveedor_fk());
            txtNumOrdenCompra.setText(registrocompra.getNumOrdenCompra());
            numeroOrdenCompra=registrocompra.getNumOrdenCompra();
            idComprobante=registrocompra.getIdComprobanteSunat_fk();
            consultarComprobante(registrocompra.getIdComprobanteSunat_fk());
            idComprobante=registrocompra.getIdComprobanteSunat_fk();
            txtFechaEmision.setText(registrocompra.getFechaEmision());
            fechaEmision=registrocompra.getFechaEmision();
            tipoCambioVenta=tipoCambioVenta(registrocompra.getFechaEmision());
            txtCambioVenta.setText(Float.toString(tipoCambioVenta));
            txtFechaAprobacion.setText(registrocompra.getFechaAprobacion());
            fechaAprobacion=registrocompra.getFechaAprobacion();
            txtFechaVencimiento.setText(registrocompra.getFechaVencimiento());
            fechaVencimiento=registrocompra.getFechaVencimiento();
            idglosa=registrocompra.getIdGlosa_fk();
            consultarGlosa(idglosa);
            moneda = registrocompra.getMoneda();
            String testValue1 = moneda;
            for (int i = 0; i < comboBoxMoneda.getModel().getSize(); i++) {
                if (comboBoxMoneda.getItemAt(i).equals(testValue1)) {
                    System.out.println(i);
                    comboBoxMoneda.setSelectedIndex(i);
                    break;
                }
            }
            
            txtMontoTotal.setText(registrocompra.getMontoFacturado());
            montoTotal=registrocompra.getMontoFacturado();            
            detraccion=registrocompra.getDetraccion();
            String testValue2 = detraccion;
            for (int i = 0; i < comboBoxDetraccion.getModel().getSize(); i++) {
                if (comboBoxDetraccion.getItemAt(i).equals(testValue2)) {
                    System.out.println(i);
                    comboBoxDetraccion.setSelectedIndex(i);
                    break;
                }
            }
            
            calcularMontoDetraccionYMontoSoles();
            
            estadoCombo=registrocompra.getEstado();
             String testValue3= estadoCombo;
            for (int i = 0; i < comboBoxEstado.getModel().getSize(); i++) {
                if (comboBoxEstado.getItemAt(i).equals(testValue3)) {
                    System.out.println(i);
                    comboBoxEstado.setSelectedIndex(i);
                    break;
                }
            }
            
            txtObservacion.setText(registrocompra.getObservacion());
       
          
        } else {
            JOptionPane.showMessageDialog(null, "Compra no registrado");
            System.out.println("Compra no registrada");
        }
    }

// ------------------------------------ TABLA ---------------------------------------
    void listaRegistroPagoCompra(int idreco) {
        List<RegistroPagoCompra> lista;
        try {
            lista = registropagocompracontroler.RegistroPagoCompraListar(idreco);
            verListaPagos(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    private void verListaPagos(List<RegistroPagoCompra> lista) {
        
        DefaultTableModel tabla = (DefaultTableModel) jTable2.getModel();
        tabla.setRowCount(0);
        for (RegistroPagoCompra repago : lista) {
           

            Object[] fila = {repago.getIdRegistroPagoCompra(), repago.getTipoPago(), repago.getFechaAbono(),
                             repago.getMoneda(), repago.getMontoAbonado(), repago.getNumeroOperacion(),
                             repago.getObservacion()};
            tabla.addRow(fila);
        }
    }

//--------------------------------- Fecha y año ---------------------------------------------
    public String fechaActual() {
        Date fecha = new Date();

        SimpleDateFormat formatofecha = new SimpleDateFormat("yyyy-MM-dd");
        return formatofecha.format(fecha);
    }
    
    Calendar convertirFechaDate(String ah) throws ParseException{
   
       Calendar fecha = Calendar.getInstance();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        Date fechaDate = null;

        fechaDate=formato.parse(ah);

        fecha.setTime(fechaDate);
        
        return fecha;
    }
    
    
    String convertirFechaString(Date fech) {

        Format formatter = new SimpleDateFormat("yyyy-MM-dd ");

        return formatter.format(fech);

    }

// ----------------------------------- Limpiar ---------------------------------
    
    void limpiar() {
        
        labelComprobante.setText("COMPROBANTE");
        txtSerie.setText("");
        txtNumero.setText("");
        txtFechaEmision.setText("");
        txtCambioVenta.setText("");
        txtFechaAprobacion.setText("");
        txtFechaVencimiento.setText("");
        txtRazSocial.setText("");
        txtRuc.setText("");
        txtConcepto.setText("");
        comboBoxMoneda.setSelectedIndex(0);
        txtMontoTotal.setText("");
        txtNumOrdenCompra.setText("");
        comboBoxDetraccion.setSelectedIndex(0);
        comboBoxEstado.setSelectedIndex(0);
        txtObservacion.setText("");
        idRegistroCompra=0;
        idComprobante=0;
        idglosa=0;        
    }
    
//------------------------------------ Habilitar -------------------------------
    
    void habilitarInicio() {

        txtSerie.setEnabled(false);
        txtNumero.setEnabled(false);
        txtFechaEmision.setEnabled(false);
        txtCambioVenta.setEnabled(false);
        txtFechaAprobacion.setEnabled(false);
        txtFechaVencimiento.setEnabled(false);
        txtRazSocial.setEnabled(false);
        txtRuc.setEnabled(false);
        txtConcepto.setEnabled(false);
        comboBoxMoneda.setEnabled(false);
        txtMontoTotal.setEnabled(false);
        txtMontoSoles.setEnabled(false);
        txtMontoDetraccion.setEnabled(false);
        txtNumOrdenCompra.setEnabled(false);
        comboBoxDetraccion.setEnabled(false);
        comboBoxEstado.setEnabled(false);
        txtObservacion.setEnabled(false);

        buttonModificarEstado.setEnabled(false);
        buttonGuardarEstado.setEnabled(false);
    }
    
     void habilitarBuscar() {

        txtSerie.setEnabled(false);
        txtNumero.setEnabled(false);
        txtFechaEmision.setEnabled(false);
        txtCambioVenta.setEnabled(false);
        txtFechaAprobacion.setEnabled(false);
        txtFechaVencimiento.setEnabled(false);
        txtRazSocial.setEnabled(false);
        txtRuc.setEnabled(false);
        txtConcepto.setEnabled(false);
        comboBoxMoneda.setEnabled(false);
        txtMontoTotal.setEnabled(false);
        txtMontoSoles.setEnabled(false);
        txtMontoDetraccion.setEnabled(false);
        txtNumOrdenCompra.setEnabled(false);
        comboBoxDetraccion.setEnabled(false);
        comboBoxEstado.setEnabled(false);
        txtObservacion.setEnabled(false);

        buttonModificarEstado.setEnabled(true);
        buttonGuardarEstado.setEnabled(false);
    }
 
      void habilitarModificar() {

        txtSerie.setEnabled(false);
        txtNumero.setEnabled(false);
        txtFechaEmision.setEnabled(false);
        txtCambioVenta.setEnabled(false);
        txtFechaAprobacion.setEnabled(false);
        txtFechaVencimiento.setEnabled(false);
        txtRazSocial.setEnabled(false);
        txtRuc.setEnabled(false);
        txtConcepto.setEnabled(false);
        comboBoxMoneda.setEnabled(false);
        txtMontoTotal.setEnabled(false);
        txtMontoSoles.setEnabled(false);
        txtMontoDetraccion.setEnabled(false);
        txtNumOrdenCompra.setEnabled(false);
        comboBoxDetraccion.setEnabled(false);
        comboBoxEstado.setEnabled(true);
        txtObservacion.setEnabled(true);

        buttonModificarEstado.setEnabled(false);
        buttonGuardarEstado.setEnabled(true);
    }
      
    void habilitarGuardar() {

        txtSerie.setEnabled(false);
        txtNumero.setEnabled(false);
        txtFechaEmision.setEnabled(false);
        txtCambioVenta.setEnabled(false);
        txtFechaAprobacion.setEnabled(false);
        txtFechaVencimiento.setEnabled(false);
        txtRazSocial.setEnabled(false);
        txtRuc.setEnabled(false);
        txtConcepto.setEnabled(false);
        comboBoxMoneda.setEnabled(false);
        txtMontoTotal.setEnabled(false);
        txtMontoSoles.setEnabled(false);
        txtMontoDetraccion.setEnabled(false);
        txtNumOrdenCompra.setEnabled(false);
        comboBoxDetraccion.setEnabled(false);
        comboBoxEstado.setEnabled(false);
        txtObservacion.setEnabled(false);

        buttonModificarEstado.setEnabled(false);
        buttonGuardarEstado.setEnabled(false);

    }
  
}
