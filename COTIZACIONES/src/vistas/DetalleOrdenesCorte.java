/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controller.ArticuloController;
import controller.DetalleOrdenCorteController;
import controller.InventarioController;
import database.AccesoDB;
import entity.Articulo;
import entity.DetalleOrdenCorte;
import entity.Inventario;
import java.awt.event.KeyEvent;
import java.sql.CallableStatement;
import java.sql.Connection;
import static java.sql.JDBCType.NULL;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ARCRODINPC-06
 */
public class DetalleOrdenesCorte extends javax.swing.JInternalFrame {
    
    Connection conexion;
    CallableStatement cs = null;
    ResultSet rs = null;
    Statement s = null;
    PreparedStatement ps = null;
    String q;
    
    String idInvCombo;
    
    static int idInventario;
   // static String diametro;
    static String dia;
    static String diaInt;
    static String unidad;
    static int idArt;
    static int idDetOrd;
    int ultimoId;
    
    String codArt;
    
    String filtro="concat(articulo.diametro,' ',articulo.unidadMedidaDiam)";
    int tabla;
    
   
    static String tablaCodArt;

    /**
     * Creates new form DetalleOrdenesCorte
     */
    public DetalleOrdenesCorte() throws SQLException, ClassNotFoundException, Exception {
        initComponents();
        labelNumCorte.setText(OrdenesCorte.numOrden);
        CargarInventarios();
        consultarUltimoIdInventario();
        listaArticulo(filtro, idInventario);
        habilitarInicio();
        
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCodArticulo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCodUbicacion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDiametro = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtLongitud = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        labelNumCorte = new javax.swing.JLabel();
        buttonNuevo = new javax.swing.JButton();
        buttonRegistrar = new javax.swing.JButton();
        buttonModificar = new javax.swing.JButton();
        buttonGuardar = new javax.swing.JButton();
        buttonEliminar = new javax.swing.JButton();
        buttonCerrar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtFiltroDia = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        comboBoxInventario = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        txtFechInventario = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Detalle de Ordenes de Corte");

        jLabel1.setText("Codigo Articulo:");

        jLabel2.setText("Codigo Ubicacion:");

        jLabel3.setText("Cantidad:");

        jLabel4.setText("Diametro:");

        jLabel5.setText("Longitud:");

        jLabel6.setText("Orden de Corte:");

        labelNumCorte.setText("000000");

        buttonNuevo.setText("Nuevo");
        buttonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNuevoActionPerformed(evt);
            }
        });

        buttonRegistrar.setText("Registrar");
        buttonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegistrarActionPerformed(evt);
            }
        });

        buttonModificar.setText("Modificar");
        buttonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarActionPerformed(evt);
            }
        });

        buttonGuardar.setText("Guardar");
        buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGuardarActionPerformed(evt);
            }
        });

        buttonEliminar.setText("Eliminar");
        buttonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminarActionPerformed(evt);
            }
        });

        buttonCerrar.setText("Cerrar");
        buttonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCerrarActionPerformed(evt);
            }
        });

        jLabel7.setText("Diametro");

        txtFiltroDia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroDiaKeyReleased(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idInv.", "Cod. Art.", "Cod. Ubi.", "Diametro", "Procedencia", "Stock Inicial(MM)", "Stock Fisico (MM)", "Stock Real (MM)", "ObservaciÃ³n"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(130);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(103);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(106);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(103);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(115);
        }

        jLabel8.setText("Inventario: ");

        comboBoxInventario.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxInventarioItemStateChanged(evt);
            }
        });

        jLabel9.setText("Fecha de Registro:");

        jLabel10.setText("Estado:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFiltroDia, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelNumCorte)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(comboBoxInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFechInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCodArticulo, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                            .addComponent(txtCodUbicacion))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtDiametro, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLongitud, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 813, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(buttonNuevo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonModificar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonGuardar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonEliminar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonRegistrar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(buttonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(labelNumCorte)
                    .addComponent(jLabel8)
                    .addComponent(comboBoxInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtFechInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtFiltroDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonNuevo)
                        .addGap(0, 0, 0)
                        .addComponent(buttonRegistrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonGuardar)
                        .addGap(7, 7, 7)
                        .addComponent(buttonEliminar)
                        .addGap(0, 19, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtDiametro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtCodUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtLongitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonCerrar))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCerrarActionPerformed
       dispose();
    }//GEN-LAST:event_buttonCerrarActionPerformed

    private void buttonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegistrarActionPerformed
        procesar(1);
        OrdenesCorte.listaDetalleOrdenCortePedido();
        habilitarRegistrar();
        try {
            consultarUltimoId();
        } catch (Exception ex) {
            Logger.getLogger(DetalleOrdenesCorte.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            consultar(ultimoId);
        } catch (Exception ex) {
            Logger.getLogger(DetalleOrdenesCorte.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        limpiar();
        listaArticulo(filtro, idInventario);
        limpiar();
        habilitarInicio();
        
    }//GEN-LAST:event_buttonRegistrarActionPerformed

    private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGuardarActionPerformed
        System.out.println(idDetOrd);      
        procesar(2);
        OrdenesCorte.listaDetalleOrdenCortePedido();
        habilitarGuardar();
    }//GEN-LAST:event_buttonGuardarActionPerformed

    private void buttonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminarActionPerformed
        System.out.println(idDetOrd);
        if (JOptionPane.showConfirmDialog(rootPane, "Se eliminarÃ¡ el registro, Â¿desea continuar?",
                "Eliminar Registro", JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            procesar(3);
            limpiar();
            OrdenesCorte.listaDetalleOrdenCortePedido();
            habilitarEliminar();
        }
    }//GEN-LAST:event_buttonEliminarActionPerformed

    private void buttonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNuevoActionPerformed
     habilitarNuevo();
    }//GEN-LAST:event_buttonNuevoActionPerformed

    private void buttonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarActionPerformed
        habilitarModificar();
    }//GEN-LAST:event_buttonModificarActionPerformed

    private void txtFiltroDiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroDiaKeyReleased
       listaArticulo(filtro, idInventario);
    }//GEN-LAST:event_txtFiltroDiaKeyReleased

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        tabla = jTable1.getSelectedRow();
        idInventario = Integer.parseInt(jTable1.getValueAt(tabla, 0).toString());
        codArt = jTable1.getValueAt(tabla, 1).toString();
        try {
            consultaArticulo(codArt, idInventario);
        } catch (Exception ex) {
            Logger.getLogger(DetalleOrdenesCorte.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void comboBoxInventarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxInventarioItemStateChanged
        if (comboBoxInventario.getSelectedIndex() != 0) {
            idInvCombo = comboBoxInventario.getSelectedItem().toString();
            idInventario = Integer.parseInt(idInvCombo);

            System.out.println(idInvCombo);

            try {
                consultarInventario(idInventario);
           } catch (Exception ex) {
                Logger.getLogger(ArticulosDeInventario.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            listaArticulo(filtro, idInventario);

        } else {

        }
    }//GEN-LAST:event_comboBoxInventarioItemStateChanged

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
     
        if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_UP)) {
            tabla = jTable1.getSelectedRow();
            idInventario = Integer.parseInt(jTable1.getValueAt(tabla, 0).toString());
            codArt = jTable1.getValueAt(tabla, 1).toString();
            try {
                consultaArticulo(codArt, idInventario);
            } catch (Exception ex) {
                Logger.getLogger(DetalleOrdenesCorte.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jTable1KeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCerrar;
    public static javax.swing.JButton buttonEliminar;
    public static javax.swing.JButton buttonGuardar;
    public static javax.swing.JButton buttonModificar;
    public static javax.swing.JButton buttonNuevo;
    public static javax.swing.JButton buttonRegistrar;
    private javax.swing.JComboBox<String> comboBoxInventario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    public static javax.swing.JLabel labelNumCorte;
    public static javax.swing.JTextField txtCantidad;
    public static javax.swing.JTextField txtCodArticulo;
    public static javax.swing.JTextField txtCodUbicacion;
    public static javax.swing.JTextField txtDiametro;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtFechInventario;
    private javax.swing.JTextField txtFiltroDia;
    public static javax.swing.JTextField txtLongitud;
    // End of variables declaration//GEN-END:variables

static DetalleOrdenCorteController obj=new DetalleOrdenCorteController();
static DetalleOrdenCorte pro;

static ArticuloController obj1= new ArticuloController();
static Articulo pro1;

InventarioController inventariocontroler = new InventarioController();
Inventario inventario;

// ---------------------------- Procesar --------------------------------    
        private void procesar(int op) {
        pro = leerDatos();
        try {
            String msg = obj.DetalleOrdenCorteProcesar(pro, op);
            JOptionPane.showMessageDialog(null, msg);
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("Error" + e.getMessage());
        }
    }
//---------------------- Consultar ---------------------------------

   static void consultaArticulo(String codDeArt, int iv) throws Exception {
        pro1 = obj1.ArticuloBuscar(codDeArt,iv);
        if (pro1 != null) {

            idArt = pro1.getAidArticulo();
            txtCodArticulo.setText(pro1.getCodigoArticulo());
            idInventario=pro1.getIdInventario();
            txtCodUbicacion.setText(pro1.getCodigoUbicacion());
            unidad = pro1.getUnidadMedidaDia();
            dia = pro1.getDiametro();
           
            txtDiametro.setText(dia);

        } else {
            JOptionPane.showMessageDialog(null, "Articulo no registrado");
            //System.out.println("Error");
        }
    }

     static void consultar(int id) throws Exception{
        pro = obj.DetalleOrdenCorteBuscarTodo(id);
        if (pro != null) {
            
            idDetOrd=pro.getIdDetalleOrdenCorte();
            System.out.println("idDetalleOrdeeeeeeeen:"+idDetOrd);
            idArt = pro.getIdArticulo();
            consultarCodigo(idArt); 
            txtDiametro.setText(pro.getDiametro());
            txtCantidad.setText(Integer.toString(pro.getCantidad()));
            txtLongitud.setText(pro.getLongitud());
            

        } else {
            JOptionPane.showMessageDialog(null, "Articulo no registrado");
            //System.out.println("Error");
        }
    
    }
     
   static void consultarCodigo(int id) throws Exception {
        pro1 = obj1.ArticuloBuscarCod(id);
        if (pro1 != null) {

            txtCodArticulo.setText(pro1.getCodigoArticulo());
            txtCodUbicacion.setText(pro1.getCodigoUbicacion());
        } else {
            JOptionPane.showMessageDialog(null, "Articulo no registrado");
            //System.out.println("Error");
        }

    }
 
       private void consultarUltimoId() throws Exception {
        pro= obj.DetalleOrdenCorteBuscarUltimoId();
        if (pro != null) {
        }
        ultimoId = pro.getIdDetalleOrdenCorte();
    }
 // -----------------------------Leer Datos ----------------------------------        
    private DetalleOrdenCorte leerDatos() {

        DetalleOrdenCorte detOrd = new DetalleOrdenCorte();
        
        detOrd.setIdDetalleOrdenCorte(idDetOrd);
        detOrd.setIdOrdenCorte(OrdenesCorte.idOrdCort);
        detOrd.setDiametro(txtDiametro.getText());
        detOrd.setCantidad(Integer.parseInt(txtCantidad.getText()));
        detOrd.setLongitud(txtLongitud.getText());
        detOrd.setIdArticulo(idArt);
        

        return detOrd;
    }
    
//---------------------- Limpiar ----------------------------------
    void limpiar() {
        txtCodArticulo.setText("");
        txtCodUbicacion.setText("");
        txtCantidad.setText("");
        txtDiametro.setText("");
        txtLongitud.setText("");
    }
    
 //--------------------- Habilitar ---------------------------------
    void habilitarInicio() {
       
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(true);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(false);
        
        txtCodArticulo.setEnabled(true);
        txtCodUbicacion.setEnabled(true);
        txtCantidad.setEnabled(true);
        txtDiametro.setEnabled(true);
        txtLongitud.setEnabled(true);
    }
    
    void habilitarNuevo() {
      
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(true);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(false);
        
        txtCodArticulo.setEnabled(true);
        txtCodUbicacion.setEnabled(true);
        txtCantidad.setEnabled(true);
        txtDiametro.setEnabled(true);
        txtLongitud.setEnabled(true);
    } 
    
        void habilitarRegistrar() {
       
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(true);
        
        txtCodArticulo.setEnabled(false);
        txtCodUbicacion.setEnabled(false);
        txtCantidad.setEnabled(false);
        txtDiametro.setEnabled(false);
        txtLongitud.setEnabled(false);
    } 
        
        void habilitarModificar() {
       
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(true);
        buttonEliminar.setEnabled(false);
        
        txtCodArticulo.setEnabled(false);
        txtCodUbicacion.setEnabled(false);
        txtCantidad.setEnabled(true);
        txtDiametro.setEnabled(false);
        txtLongitud.setEnabled(true);
    } 
   
        void habilitarGuardar() {
       
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(true);
        
        txtCodArticulo.setEnabled(false);
        txtCodUbicacion.setEnabled(false);
        txtCantidad.setEnabled(false);
        txtDiametro.setEnabled(false);
        txtLongitud.setEnabled(false);
    } 
   
        void habilitarEliminar() {
     
        buttonNuevo.setEnabled(true);
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(false);
        
        txtCodArticulo.setEnabled(false);
        txtCodUbicacion.setEnabled(false);
        txtCantidad.setEnabled(false);
        txtDiametro.setEnabled(false);
        txtLongitud.setEnabled(false);
    } 
        
    static void habilitarTabla() {
      
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(true);

        txtCodArticulo.setEnabled(false);
        txtCodUbicacion.setEnabled(false);
        txtCantidad.setEnabled(false);
        txtDiametro.setEnabled(false);
        txtLongitud.setEnabled(false);
    }
    
  //--------------------------- Tabla Articulos --------------------------------
     private void listaArticulo(String filtrar, int v) {
        List<Articulo> lista;
        try {
            lista = obj1.ArticuloFiltrar(filtrar,txtFiltroDia.getText(),v);
            verPedido(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    private void verPedido(List<Articulo> lista) {
       
        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        tabla.setRowCount(0);
        
        for (Articulo art : lista) {
      
            Object[] fila = {art.getIdInventario(),art.getCodigoArticulo(), art.getCodigoUbicacion(), art.getDiametro(),art.getProcedencia(), art.getLongitud(),art.getLongCortes(), art.getLongitudReal(), art.getObservacion()};
            tabla.addRow(fila);

        }
    }
    
    //----------------------------- Cargar Inventarios ---------------------------------     
    public JComboBox<String> CargarInventarios() throws SQLException, ClassNotFoundException {
        comboBoxInventario.removeAllItems();
        comboBoxInventario.addItem("Inventario");
        try {
            conexion = AccesoDB.obtener();
            q = "select idInventario from inventario";
            ps = conexion.prepareStatement(q);
            rs = ps.executeQuery();
            while (rs.next()) {
                comboBoxInventario.addItem(Integer.toString(rs.getInt(1)));
            }
            rs.close();
            ps.close();

        } catch (SQLException e) {
            throw e;

        }
        return comboBoxInventario;
    }

// ------------------ Ultimo id Inventario -------------------------------------
    private void consultarUltimoIdInventario() throws Exception {
        inventario = inventariocontroler.InventarioBuscarUltimoId();
        if (inventario != null) {
        }
        ultimoId = inventario.getIdInventario();
        idInventario = ultimoId;

        String testValue2 = Integer.toString(idInventario);
        for (int i = 0; i < comboBoxInventario.getModel().getSize(); i++) {
            if (comboBoxInventario.getItemAt(i).equals(testValue2)) {
                System.out.println(i);
                comboBoxInventario.setSelectedIndex(i);
                break;
            }
        }
        consultarInventario(idInventario);

    }

    void consultarInventario(int id) throws Exception {
        inventario = inventariocontroler.InventarioBuscar(id);
        if (inventario != null) {
            System.out.println("22222222222222222");
            idInventario = inventario.getIdInventario();
            System.out.println("111111111111111111111");

            txtFechInventario.setText(inventario.getFechReg());
            txtEstado.setText(inventario.getEstado());

        } else {
            JOptionPane.showMessageDialog(null, "Articulo no registrado");
            //System.out.println("Error");
        }
    }

    
    
}
