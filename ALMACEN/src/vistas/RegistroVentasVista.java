/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controller.DetalleProformaController;
import controller.PedidoController;
import controller.RegistroPagoController;
import controller.RegistroVentaController;
import controller.TipoCambioController;
import entity.DetalleProforma;
import entity.Pedido;
import entity.RegistroPago;
import entity.RegistroVenta;
import entity.TipoCambio;
import exportarexcel.clsExportarExcel;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.Format;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ARCRODINPC-05
 */
public class RegistroVentasVista extends javax.swing.JInternalFrame {

    /**
     * Creates new form RegistroVentasVista
     */
    String filtro="c.razonSocial";
    
    int idRegistroVenta;
    static int idRegistroVentaVistaStatic;
    String fechaRegistro;
    int idPedido;
    String guia;
    String comprobante;
    String serie;
    String numero;
    String fechaEmision;
    String fechaAprobacion;
    String fechaVencimiento;
    String tipoCombo;
    String monedaComboVenta;
    String montoFactura;
    String detraccionCombo;
    String estadoCombo;
    
    int idProforma;
    
    boolean mensaje= true;
        
    float totalDolares; 
    float totalSolesCalculo; 
    float totalDetraccion;
    float tipoCambioVenta;
    
    int tabla;
    
    static String serieStatic;
    static String numeroStatic; 
    
    
    static int numPedidoStatic;
    static String anioPedidoStatic;
    
   DecimalFormatSymbols separadoresPersonalizados = new DecimalFormatSymbols();
    
    
    public RegistroVentasVista() throws ParseException {
        initComponents();
        listaVentas(filtro,txtFiltroLike.getText());
        habilitarInicio();
        jDateChooserFechaDesde.setCalendar(convertirFechaDate(fechaActual()));
        jDateChooserFechaHasta.setCalendar(convertirFechaDate(fechaActual()));
        jTable1.setDefaultRenderer (Object.class, new RowsRenderer());
    }
    
    public class RowsRenderer extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable jTable1, Object value, boolean selected, boolean focused, int row, int column) {
            jTable1.setBackground(Color.white);
            jTable1.setForeground(Color.black);
            super.getTableCellRendererComponent(jTable1, value, selected, focused, row, column);
            if ("CANCELADO".equals((jTable1.getValueAt(row, column)))) {
                this.setOpaque(true);
                this.setForeground(Color.decode("#009900"));//verde

            } else if ("EN PROCESO".equals((jTable1.getValueAt(row, column)))) {
                this.setOpaque(true);
                this.setForeground(Color.decode("#CCCC00"));

            } else if ("ANULADO".equals((jTable1.getValueAt(row, column)))) {
                this.setOpaque(true);
                this.setForeground(Color.RED);

            } else if ((!"CANCELADO".equals((jTable1.getValueAt(row, column))))
                    && (!"EN PROCESO".equals((jTable1.getValueAt(row, column)))
                    && (!"ANULADO".equals((jTable1.getValueAt(row, column)))))) {
                this.setOpaque(true);
                this.setForeground(Color.black);
            }

            if (selected) {
                setBackground(Color.decode("#39698a"));
                setForeground(Color.decode("#FFFFFF"));
            } else {
                setBackground(Color.WHITE);
            }

            return this;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboBoxFiltro = new javax.swing.JComboBox<>();
        txtFiltroLike = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        labelTipoComprobante = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtSerie = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtRazonSocial = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtNumCotizacion = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        comboBoxTipo = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        comboBoxMoneda = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txtFormaPago = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtMontoFactura = new javax.swing.JTextField();
        labelSimboloSoles = new javax.swing.JLabel();
        txtMontoSoles = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        comboBoxDetraccion = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        txtMontoDetraccion = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtFechaEmision = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtTipoCambioVenta = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtFechaAprobacion = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtFechaVencimiento = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        comboBoxEstado = new javax.swing.JComboBox<>();
        txtObservacion = new javax.swing.JTextField();
        buttonModificar = new javax.swing.JButton();
        buttonGuardar = new javax.swing.JButton();
        buttonRegistrarVerPagos = new javax.swing.JButton();
        buttonModificarVenta = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jDateChooserFechaDesde = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jDateChooserFechaHasta = new com.toedter.calendar.JDateChooser();
        buttonBuscar = new javax.swing.JButton();
        buttonExportarExcel = new javax.swing.JButton();
        buttonCerrar = new javax.swing.JButton();
        buttonOrdenVencimiento = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtNumPedido = new javax.swing.JTextField();
        buttonPedido = new javax.swing.JButton();
        buttonLimpiar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Vista de Ventas");

        comboBoxFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "RAZÓN SOCIAL", "R.U.C.", "N° PEDIDO", "N° COTIZACIÓN", "COMPROBANTE", "SERIE", "NÚMERO", "TIPO", "F. EMISIÓN", "F. VENCIMIENTO", "DETRACCION", "ESTADO" }));
        comboBoxFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxFiltroItemStateChanged(evt);
            }
        });

        txtFiltroLike.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroLikeKeyReleased(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idRegVenta", "Fecha Em.", "Razón Social", "R.U.C.", "Comprob.", "Serie", "Número", "Tipo", "Monto Fact.", "T.C.", "Valor Venta", "I.G.V.", "Detracción", "Fecha Venc.", "Estado", "Observación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTable1MouseEntered(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTable1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(75);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(170);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(95);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(73);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(10).setPreferredWidth(75);
            jTable1.getColumnModel().getColumn(11).setPreferredWidth(65);
            jTable1.getColumnModel().getColumn(12).setPreferredWidth(78);
            jTable1.getColumnModel().getColumn(13).setPreferredWidth(78);
            jTable1.getColumnModel().getColumn(14).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(15).setPreferredWidth(100);
        }

        labelTipoComprobante.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTipoComprobante.setText("COMPROBANTE");

        jLabel2.setText("Serie:");

        jLabel3.setText("Número:");

        jLabel4.setText("Razón Social:");

        jLabel9.setText("N° Cot.:");

        jLabel18.setText("Tipo:");

        comboBoxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "PRODUCTO", "SERVICIO" }));

        jLabel8.setText("Moneda:");

        comboBoxMoneda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "DOLARES AMERICANOS", "SOLES" }));

        jLabel10.setText("Forma Pago:");

        jLabel11.setText("Monto Facturado:");

        labelSimboloSoles.setText("S/.");

        jLabel13.setText("Detracción:");

        comboBoxDetraccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "APLICA", "NO APLICA" }));

        jLabel14.setText("Detracción:");

        jLabel15.setText("en Soles.");

        jLabel20.setText("Fecha Emisión:");

        jLabel21.setText("T.C.Venta:");

        jLabel22.setText("Fecha Aprobación:");

        jLabel23.setText("Fecha Vencimiento:");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idPago", "Tipo de Pago", "Fecha Abonado", "Moneda", "Monto Abonado", "N° Operación", "Observación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(105);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(120);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(120);
            jTable2.getColumnModel().getColumn(5).setPreferredWidth(150);
            jTable2.getColumnModel().getColumn(6).setPreferredWidth(280);
        }

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel16.setText("Estado:");

        jLabel19.setText("Observación:");

        comboBoxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "CANCELADO", "EN PROCESO", "ANULADO", "CON PRORROGA" }));
        comboBoxEstado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxEstadoItemStateChanged(evt);
            }
        });

        buttonModificar.setText("Modificar");
        buttonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarActionPerformed(evt);
            }
        });

        buttonGuardar.setText("Guardar");
        buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtObservacion, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(comboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(comboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonModificar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtObservacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonGuardar))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        buttonRegistrarVerPagos.setText("Registrar/Ver Pagos");
        buttonRegistrarVerPagos.setToolTipText("");
        buttonRegistrarVerPagos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegistrarVerPagosActionPerformed(evt);
            }
        });

        buttonModificarVenta.setText("Modificar Venta");
        buttonModificarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarVentaActionPerformed(evt);
            }
        });

        jLabel1.setText("Facturas de las fechas desde");

        jDateChooserFechaDesde.setDateFormatString("yyyy-MM-dd");

        jLabel5.setText("hasta");

        jDateChooserFechaHasta.setDateFormatString("yyyy-MM-dd");

        buttonBuscar.setText("Buscar");
        buttonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarActionPerformed(evt);
            }
        });

        buttonExportarExcel.setText("ExportarExcel");
        buttonExportarExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExportarExcelActionPerformed(evt);
            }
        });

        buttonCerrar.setText("Cerrar");
        buttonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCerrarActionPerformed(evt);
            }
        });

        buttonOrdenVencimiento.setText("Ordenar F. Vencimiento");
        buttonOrdenVencimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOrdenVencimientoActionPerformed(evt);
            }
        });

        jLabel7.setText("N° Pedido:");

        buttonPedido.setText("Ver Pedido");
        buttonPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPedidoActionPerformed(evt);
            }
        });

        buttonLimpiar.setText("Limpiar");
        buttonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel18))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtNumPedido)
                                    .addComponent(txtNumCotizacion, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboBoxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMontoFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelSimboloSoles)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtMontoSoles, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboBoxDetraccion, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtMontoDetraccion, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel15)))))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelTipoComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addGap(3, 3, 3)
                                .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaEmision, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTipoCambioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaAprobacion, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaVencimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(comboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFiltroLike, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(103, 103, 103)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooserFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooserFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(buttonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(buttonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(buttonExportarExcel, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                                    .addComponent(buttonOrdenVencimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 893, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(buttonRegistrarVerPagos, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buttonModificarVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buttonPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buttonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonCerrar)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(comboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFiltroLike, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel5))
                                .addComponent(jDateChooserFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jDateChooserFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(buttonBuscar)
                                .addComponent(buttonExportarExcel)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(buttonOrdenVencimiento))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonLimpiar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelTipoComprobante)
                            .addComponent(jLabel2)
                            .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)
                            .addComponent(txtFechaEmision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)
                            .addComponent(txtTipoCambioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22)
                            .addComponent(txtFechaAprobacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23)
                            .addComponent(txtFechaVencimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18)
                                    .addComponent(comboBoxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11)
                                    .addComponent(txtMontoFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelSimboloSoles)
                                    .addComponent(txtMontoSoles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(txtNumCotizacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(comboBoxMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboBoxDetraccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(txtFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14)
                                    .addComponent(txtMontoDetraccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel7)
                                    .addComponent(txtNumPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(buttonRegistrarVerPagos)
                                .addGap(3, 3, 3)
                                .addComponent(buttonModificarVenta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonPedido)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFiltroLikeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroLikeKeyReleased
        listaVentas(filtro, txtFiltroLike.getText());
    }//GEN-LAST:event_txtFiltroLikeKeyReleased

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        limpiar();
        tabla = jTable1.getSelectedRow();
        idRegistroVenta = Integer.parseInt(jTable1.getValueAt(tabla, 0).toString());
        try {
            consultarRegistroVenta(idRegistroVenta);
        } catch (Exception ex) {
            Logger.getLogger(RegistroVentasVista.class.getName()).log(Level.SEVERE, null, ex);
        }
        listaRegistroPago(idRegistroVenta);
        habilitarBuscar();     
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_UP)) {
            limpiar();
            tabla = jTable1.getSelectedRow();
            idRegistroVenta = Integer.parseInt(jTable1.getValueAt(tabla, 0).toString());
            idRegistroVentaVistaStatic= Integer.parseInt(jTable1.getValueAt(tabla, 0).toString());
            try {
                consultarRegistroVenta(idRegistroVenta);
            } catch (Exception ex) {
                Logger.getLogger(RegistroVentasVista.class.getName()).log(Level.SEVERE, null, ex);
            }
            listaRegistroPago(idRegistroVenta);
            habilitarBuscar();
        }
    }//GEN-LAST:event_jTable1KeyReleased

    private void comboBoxFiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxFiltroItemStateChanged
         if (comboBoxFiltro.getSelectedItem() == "RAZÓN SOCIAL") {
            filtro = "c.razonSocial";
            listaVentas(filtro, txtFiltroLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "R.U.C.") {
            filtro = "c.ruc";
            listaVentas(filtro, txtFiltroLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "N° PEDIDO") {
            filtro = "d.numPedido";
            listaVentas(filtro, txtFiltroLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "N° COTIZACIÓN") {
            filtro = "p.codProforma";
            listaVentas(filtro, txtFiltroLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "COMPROBANTE") {
            filtro = "rv.tipoComprobante";
            listaVentas(filtro, txtFiltroLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "SERIE") {
            filtro = "rv.serie";
            listaVentas(filtro, txtFiltroLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "NÚMERO") {
            filtro = "rv.numero";
            listaVentas(filtro, txtFiltroLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "TIPO") {
            filtro = "rv.tipo";
            listaVentas(filtro, txtFiltroLike.getText());
            System.out.println(filtro);
        }else if (comboBoxFiltro.getSelectedItem() == "F. EMISIÓN") {
            filtro = "rv.fechaEmision";
            listaVentas(filtro, txtFiltroLike.getText());
            System.out.println(filtro);
        }else if (comboBoxFiltro.getSelectedItem() == "F. VENCIMIENTO") {
            filtro = "rv.fechaVencimiento";
            listaVentas(filtro, txtFiltroLike.getText());
            System.out.println(filtro);
        }else if (comboBoxFiltro.getSelectedItem() == "DETRACCION") {
            filtro = "rv.detraccion";
            listaVentas(filtro, txtFiltroLike.getText());
            System.out.println(filtro);
        }else if (comboBoxFiltro.getSelectedItem() == "ESTADO") {
            filtro = "rv.estado";
            listaVentas(filtro, txtFiltroLike.getText());
            System.out.println(filtro);
        }else if (comboBoxFiltro.getSelectedItem() == "SELECCIONE") {
            filtro = "c.razonSocial";
            listaVentas(filtro, txtFiltroLike.getText());
            System.out.println(filtro);
        }
    }//GEN-LAST:event_comboBoxFiltroItemStateChanged

    private void comboBoxEstadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxEstadoItemStateChanged
        if (comboBoxEstado.getSelectedIndex() != 0) {
            estadoCombo = comboBoxEstado.getSelectedItem().toString();
            System.out.println(estadoCombo);
        } else {
            estadoCombo="";
        }
    }//GEN-LAST:event_comboBoxEstadoItemStateChanged

    private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGuardarActionPerformed
        procesar(2);
        listaVentas(filtro, txtFiltroLike.getText());
        habilitarGuardar();
    }//GEN-LAST:event_buttonGuardarActionPerformed

    private void buttonRegistrarVerPagosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegistrarVerPagosActionPerformed
        RegistrarPago rePa = null;
        RegistrarPago.idRegistroVentaPagoStatic = idRegistroVentaVistaStatic;
        try {
            rePa = new RegistrarPago();
        } catch (Exception ex) {
            Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
        Principal.jDesktopPane1.add(rePa);
        rePa.toFront();
        rePa.setVisible(true);
    }//GEN-LAST:event_buttonRegistrarVerPagosActionPerformed

    private void buttonModificarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarVentaActionPerformed
        RegistroVentas reVet = null;
        try {
            reVet = new RegistroVentas();
        } catch (Exception ex) {
            Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
        Principal.jDesktopPane1.add(reVet);
        reVet.toFront();
        reVet.setVisible(true);
        RegistroVentas.serieYNumeroDeVenta();
    }//GEN-LAST:event_buttonModificarVentaActionPerformed

    private void jTable1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseEntered

    private void jTable1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1KeyTyped

    private void buttonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarActionPerformed
        habilitarModificar();
    }//GEN-LAST:event_buttonModificarActionPerformed

    private void buttonExportarExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExportarExcelActionPerformed
        clsExportarExcel obj = new clsExportarExcel();
        try {
            obj.exportarExcel(jTable1);
        } catch (IOException ex) {
            Logger.getLogger(CajaChicaRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonExportarExcelActionPerformed

    private void buttonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarActionPerformed
        listaVentasExport(convertirFechaString(jDateChooserFechaDesde.getDate()), convertirFechaString(jDateChooserFechaHasta.getDate()));
    }//GEN-LAST:event_buttonBuscarActionPerformed

    private void buttonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCerrarActionPerformed
        estadoCombo="EN PROCESO";
        dispose();
    }//GEN-LAST:event_buttonCerrarActionPerformed

    private void buttonOrdenVencimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOrdenVencimientoActionPerformed
       listaVentasOrdenar();
    }//GEN-LAST:event_buttonOrdenVencimientoActionPerformed

    private void buttonPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPedidoActionPerformed
       Pedidos ped = null;
        try {
            ped = new Pedidos();
        } catch (Exception ex) {
            Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
        Principal.jDesktopPane1.add(ped);
        ped.toFront();
        ped.setVisible(true);
        Pedidos.NumPedidoRegistroVenta();
    }//GEN-LAST:event_buttonPedidoActionPerformed

    private void buttonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLimpiarActionPerformed
        limpiar();
        habilitarInicio();
    }//GEN-LAST:event_buttonLimpiarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBuscar;
    private javax.swing.JButton buttonCerrar;
    private javax.swing.JButton buttonExportarExcel;
    private javax.swing.JButton buttonGuardar;
    private javax.swing.JButton buttonLimpiar;
    private javax.swing.JButton buttonModificar;
    private javax.swing.JButton buttonModificarVenta;
    private javax.swing.JButton buttonOrdenVencimiento;
    private javax.swing.JButton buttonPedido;
    private javax.swing.JButton buttonRegistrarVerPagos;
    private javax.swing.JComboBox<String> comboBoxDetraccion;
    private javax.swing.JComboBox<String> comboBoxEstado;
    private javax.swing.JComboBox<String> comboBoxFiltro;
    private javax.swing.JComboBox<String> comboBoxMoneda;
    private javax.swing.JComboBox<String> comboBoxTipo;
    private com.toedter.calendar.JDateChooser jDateChooserFechaDesde;
    private com.toedter.calendar.JDateChooser jDateChooserFechaHasta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel labelSimboloSoles;
    private javax.swing.JLabel labelTipoComprobante;
    private javax.swing.JTextField txtFechaAprobacion;
    private javax.swing.JTextField txtFechaEmision;
    private javax.swing.JTextField txtFechaVencimiento;
    private javax.swing.JTextField txtFiltroLike;
    private javax.swing.JTextField txtFormaPago;
    private javax.swing.JTextField txtMontoDetraccion;
    private javax.swing.JTextField txtMontoFactura;
    private javax.swing.JTextField txtMontoSoles;
    private javax.swing.JTextField txtNumCotizacion;
    private javax.swing.JTextField txtNumPedido;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtObservacion;
    private javax.swing.JTextField txtRazonSocial;
    private javax.swing.JTextField txtSerie;
    private javax.swing.JTextField txtTipoCambioVenta;
    // End of variables declaration//GEN-END:variables
    
    RegistroVentaController registroventacontroler=new RegistroVentaController();
    RegistroVenta registroventa;
    
    RegistroPagoController registropagocontroler=new RegistroPagoController();
    RegistroPago registropago;
    
    TipoCambioController tipocambiocontroler=new TipoCambioController();
    TipoCambio tipocambio;
    
    PedidoController pedidocontroler = new PedidoController();
    Pedido pedido;
    
    
//------------------------------ Tabla ------------------------------------------------------
    void listaVentas(String nombreFiltro, String valorFiltro) {
        List<RegistroVenta> lista;
        try {
            lista = registroventacontroler.RegistroVentaFiltrar(nombreFiltro, valorFiltro);
            verVentas(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    void verVentas(List<RegistroVenta> lista) throws Exception {
        separadoresPersonalizados.setDecimalSeparator('.');
        DecimalFormat df = new DecimalFormat("0.000", separadoresPersonalizados);
        String numeropedido;
        float tCVenta = 0, valorVenta = 0, igv = 0, montoDeFact;
        DefaultTableModel tabla1 = (DefaultTableModel) jTable1.getModel();
        tabla1.setRowCount(0);
        for (RegistroVenta reve : lista) {
            numeropedido = String.format("%06d", Integer.parseInt(reve.getNumPedido()));
            if("DOLARES AMERICANOS".equals(reve.getMoneda())){
                tCVenta=tipoCambioVenta(reve.getFechaEmision());
                montoDeFact=Float.parseFloat(reve.getMontoFacturado());
                valorVenta=montoDeFact*tCVenta;
                igv=(float) (((float) (valorVenta/1.18))*0.18);
            }else if("SOLES".equals(reve.getMoneda())){
                tCVenta=1;
                montoDeFact=Float.parseFloat(reve.getMontoFacturado());
                valorVenta=montoDeFact*tCVenta;
                igv=(float) ((float) (valorVenta/1.18)*0.18);
            }
           
            Object[] fila = {reve.getIdRegistroVenta(), reve.getFechaEmision(), reve.getRazonSocial(), 
                             reve.getRuc(), reve.getTipoComprobante(), reve.getSerie(), reve.getNumero(), 
                             reve.getTipo(), reve.getMontoFacturado(), df.format(tCVenta),df.format(valorVenta),
                             df.format(igv), reve.getDetraccion(),reve.getFechaVencimiento() ,reve.getEstado(), 
                             reve.getObservacion()};
            tabla1.addRow(fila);
        }
    }
    
    void listaVentasOrdenar() {
        List<RegistroVenta> lista;
        try {
            lista = registroventacontroler.RegistroVentaOrdenar() ;
            verVentas(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }
    
    
    
    void listaVentasExport(String fDesde, String fHasta) {
        List<RegistroVenta> lista;
        try {
            lista = registroventacontroler.RegistroVentaFiltrarExport(fDesde, fHasta);
            verVentas(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

   
    
    
//----------------------- Buscar Registro Venta -------------------------------------------
    
    private void consultarRegistroVenta(int id) throws Exception {
        registroventa = registroventacontroler.RegistroVentaPorId(id);
        if (registroventa != null) {
            
            idRegistroVenta=registroventa.getIdRegistroVenta();
            idRegistroVentaVistaStatic=registroventa.getIdRegistroVenta();
            fechaRegistro=registroventa.getFechaRegistro();
            System.out.println("fecha de registro:"+fechaRegistro);
            idPedido=registroventa.getIdPedido();
            consultarPedido(registroventa.getIdPedido());
            txtNumPedido.setText(registroventa.getNumPedido());
            idProforma=registroventa.getIdProforma();
            guia=registroventa.getGuia();
            labelTipoComprobante.setText(registroventa.getTipoComprobante());
            comprobante=registroventa.getTipoComprobante();
            txtSerie.setText(registroventa.getSerie());
            serie=registroventa.getSerie();
            serieStatic=registroventa.getSerie();
            txtNumero.setText(registroventa.getNumero());
            numeroStatic=registroventa.getNumero();
            numero=registroventa.getNumero();
            txtRazonSocial.setText(registroventa.getRazonSocial());
//            txtRuc.setText(registroventa.getRuc());
//            txtContacto.setText(registroventa.getContacto());
//            txtNumPedido.setText(String.format("%06d",Integer.parseInt(registroventa.getNumPedido())));
            txtNumCotizacion.setText(registroventa.getCodProforma());
           
            
            tipoCombo = registroventa.getTipo();
            String testValue1 = tipoCombo;
            for (int i = 0; i < comboBoxTipo.getModel().getSize(); i++) {
                if (comboBoxTipo.getItemAt(i).equals(testValue1)) {
                    System.out.println(i);
                    comboBoxTipo.setSelectedIndex(i);
                    break;
                }
            }
            
            txtFormaPago.setText(registroventa.getFormaPago());
                        
            monedaComboVenta=registroventa.getMoneda();
             String testValue2 = monedaComboVenta;
            for (int i = 0; i < comboBoxMoneda.getModel().getSize(); i++) {
                if (comboBoxMoneda.getItemAt(i).equals(testValue2)) {
                    System.out.println(i);
                    comboBoxMoneda.setSelectedIndex(i);
                    break;
                }
            }
            
            txtFechaEmision.setText(registroventa.getFechaEmision());
            fechaEmision=registroventa.getFechaEmision();
            consultarTipoCambio(registroventa.getFechaEmision());
            txtFechaAprobacion.setText(registroventa.getFechaAprobacion());
            fechaAprobacion=registroventa.getFechaAprobacion();
            txtFechaVencimiento.setText(registroventa.getFechaVencimiento());
            fechaVencimiento=registroventa.getFechaVencimiento();
            txtMontoFactura.setText(registroventa.getMontoFacturado());
            montoFactura=registroventa.getMontoFacturado();
                               
            detraccionCombo=registroventa.getDetraccion();
             String testValue3 = detraccionCombo;
            for (int i = 0; i < comboBoxDetraccion.getModel().getSize(); i++) {
                if (comboBoxDetraccion.getItemAt(i).equals(testValue3)) {
                    System.out.println(i);
                    comboBoxDetraccion.setSelectedIndex(i);
                    break;
                }
            }
            calcularMontoDetraccionYMontoSoles();
            
            estadoCombo=registroventa.getEstado();
             String testValue4 = estadoCombo;
            for (int i = 0; i < comboBoxEstado.getModel().getSize(); i++) {
                if (comboBoxEstado.getItemAt(i).equals(testValue4)) {
                    System.out.println(i);
                    comboBoxEstado.setSelectedIndex(i);
                    break;
                }
            }
            
            txtObservacion.setText(registroventa.getObservacion());
            
        } else {
            JOptionPane.showMessageDialog(null, "Pedido no registrado");
           
            System.out.println("Pedido no registrado");
        }
    }
    
 // ------------------------ Buscar Tipo de cambio segun fecha -----------------------
    
    void consultarTipoCambio(String f) throws Exception {
        tipocambio =tipocambiocontroler.TipoCambioBuscarCambio(f) ;

        if (tipocambio != null) {
            mensaje=true;
            tipoCambioVenta=tipocambio.getPrecioVenta();
            txtTipoCambioVenta.setText(Float.toString(tipocambio.getPrecioVenta()));
        } else {
            mensaje=false;
//            JOptionPane.showMessageDialog(null, "tipo cambio no registradas");
            System.out.println("Error");
        }
    }
    
    float tipoCambioVenta(String f) throws Exception {
        tipocambio =tipocambiocontroler.TipoCambioBuscarCambio(f) ;

        if (tipocambio != null) {
            mensaje=true;
            return tipocambio.getPrecioVenta();
            
        } else {
            mensaje=false;
//            JOptionPane.showMessageDialog(null, "tipo cambio no registradas");
            System.out.println("Error");
        }
        return tipocambio.getPrecioVenta();
    }
    

    
//    ----------------------- Muestra el monto en soles si en caso fuese dolares 
//                            y calcula el valor de detraccion segun el monto facturado  --------------------------

    
     void calcularMontoDetraccionYMontoSoles(){
       separadoresPersonalizados.setDecimalSeparator('.');
       DecimalFormat df = new DecimalFormat("0.000", separadoresPersonalizados);

        try {
            consultarTipoCambio(txtFechaEmision.getText());
        } catch (Exception ex) {
            Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
        

        if (comboBoxMoneda.getSelectedIndex() == 1) {

             try {
                consultarTipoCambio(txtFechaEmision.getText());
            } catch (Exception ex) {
                Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
            }
            txtMontoSoles.setEnabled(true);
            labelSimboloSoles.setText("S/.");
            labelSimboloSoles.setEnabled(true);
            totalDolares = Float.parseFloat(txtMontoFactura.getText());
            totalSolesCalculo = totalDolares * tipoCambioVenta;
            txtMontoSoles.setText(df.format(totalSolesCalculo));

            if (comboBoxTipo.getSelectedIndex() == 2) {

                if (comboBoxDetraccion.getSelectedIndex() == 1) {

                    totalDetraccion = (float) (Float.parseFloat(txtMontoSoles.getText()) * 0.12);
                    txtMontoDetraccion.setText(df.format(totalDetraccion));

                } else if (comboBoxDetraccion.getSelectedIndex() == 2) {

                    txtMontoDetraccion.setText("");

                }

            } else if (comboBoxTipo.getSelectedIndex() == 1) {
                txtMontoDetraccion.setText("");
            }

        } else if (comboBoxMoneda.getSelectedIndex() == 2) {

            txtMontoSoles.setEnabled(false);
            txtMontoSoles.setText("");
            labelSimboloSoles.setText("");
            labelSimboloSoles.setEnabled(false);
            totalSolesCalculo = Float.parseFloat(txtMontoFactura.getText());

            if (comboBoxTipo.getSelectedIndex() == 2) {

                if (comboBoxDetraccion.getSelectedIndex() == 1) {

                    totalDetraccion = (float) (totalSolesCalculo * 0.12);
                    txtMontoDetraccion.setText(df.format(totalDetraccion));

                } else if (comboBoxDetraccion.getSelectedIndex() == 2) {

                    txtMontoDetraccion.setText("");

                }
            } else if (comboBoxTipo.getSelectedIndex() == 1) {
                txtMontoDetraccion.setText("");
            }
        }
        
    }
     
// ------------------------------------ TABLA DETALLE PAGO VENTA ---------------------------------------
   
   void listaRegistroPago(int idreve) {
        List<RegistroPago> lista;
        try {
            lista = registropagocontroler.RegistroPagoListar(idreve);
            verListaPagos(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    private void verListaPagos(List<RegistroPago> lista) {
        
        DefaultTableModel tabla = (DefaultTableModel) jTable2.getModel();
        tabla.setRowCount(0);
        for (RegistroPago repago : lista) {
           

            Object[] fila = {repago.getIdRegistroPago(), repago.getTipoPago(), repago.getFechaAbono(),
                             repago.getMoneda(), repago.getMontoAbonado(), repago.getNumeroOperacion()};
            tabla.addRow(fila);
        }
    }
 
// -----------------------  PROCESAR MODIFICAR ESTADO --------------------------
     void procesar(int op) {
        registroventa = leerDatos();
        try {
                 String msg = registroventacontroler.RegistroVentaProcesar(registroventa, op);
            JOptionPane.showMessageDialog(null, msg);
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("Error" + e.getMessage());
        }
    } 
 
 //----------------------- Leer Datos ----------------------------------------
 
    RegistroVenta leerDatos() {
        RegistroVenta reve = new RegistroVenta();
        
        reve.setIdRegistroVenta(idRegistroVenta);
        reve.setFechaRegistro(fechaRegistro);
        reve.setIdPedido(idPedido);
        reve.setGuia(guia);
        reve.setTipoComprobante(comprobante);
        reve.setSerie(serie);
        reve.setNumero(numero);
        reve.setFechaEmision(fechaEmision);
        reve.setFechaAprobacion(fechaAprobacion);
        reve.setFechaVencimiento(fechaVencimiento);
        reve.setTipo(tipoCombo);
        reve.setMoneda(monedaComboVenta);
        reve.setMontoFacturado(montoFactura);
        reve.setDetraccion(detraccionCombo);
        reve.setEstado(estadoCombo);
        reve.setObservacion(txtObservacion.getText());
        
        return reve; 
    }
    
//---------------------------- Buscar Pedido ----------------------------------
    void consultarPedido(int idp ) throws Exception {
        pedido = pedidocontroler.PedidoBuscar(idp);
        if (pedido != null) {

            idPedido=pedido.getIdPedido();
            numPedidoStatic=pedido.getNumPedido();
            anioPedidoStatic=anioActual(pedido.getFechaEmision());
            
        } else {
            JOptionPane.showMessageDialog(null, "Pedido no registrado");
            //System.out.println("Error");
        }
    }
        
//-------------------------------- limpiar -------------------------------------
    void limpiar(){
        
        labelTipoComprobante.setText("COMPROBANTE");
        txtSerie.setText("");
        txtNumero.setText("");
        txtFechaEmision.setText("");
        txtTipoCambioVenta.setText("");
        txtFechaAprobacion.setText("");
        txtFechaVencimiento.setText("");
        txtRazonSocial.setText("");
        txtNumCotizacion.setText("");
        txtNumPedido.setText("");
        txtFormaPago.setText("");
        comboBoxTipo.setSelectedIndex(0);
        comboBoxMoneda.setSelectedIndex(0);
        txtMontoFactura.setText("");
        labelSimboloSoles.setText("");
        labelSimboloSoles.setEnabled(false);
        txtMontoSoles.setEnabled(false);
        txtMontoSoles.setText("");
        comboBoxDetraccion.setSelectedIndex(0);
        txtMontoDetraccion.setText("");
        comboBoxEstado.setSelectedIndex(0);
        txtObservacion.setText("");
        listaRegistroPago(0);
    }
    
    //--------------------------- Habilitar ------------------------------
    void habilitarInicio() {

        labelTipoComprobante.setEnabled(false);
        txtSerie.setEnabled(false);
        txtNumero.setEnabled(false);
        txtFechaEmision.setEnabled(false);
        txtTipoCambioVenta.setEnabled(false);
        txtFechaAprobacion.setEnabled(false);
        txtFechaVencimiento.setEnabled(false);
        txtRazonSocial.setEnabled(false);
        txtNumCotizacion.setEnabled(false);
        txtNumPedido.setEnabled(false);
        txtFormaPago.setEnabled(false);
        comboBoxTipo.setEnabled(false);
        comboBoxMoneda.setEnabled(false);
        txtMontoFactura.setEnabled(false);
        labelSimboloSoles.setEnabled(false);
        labelSimboloSoles.setEnabled(false);
        txtMontoSoles.setEnabled(false);
        txtMontoSoles.setEnabled(false);
        comboBoxDetraccion.setEnabled(false);
        txtMontoDetraccion.setEnabled(false);
        comboBoxEstado.setEnabled(false);
        txtObservacion.setEnabled(false);

        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(false);
        buttonRegistrarVerPagos.setEnabled(false);
        buttonModificarVenta.setEnabled(false);
    }
    
    void habilitarBuscar(){
        
        labelTipoComprobante.setEnabled(false);
        txtSerie.setEnabled(false);
        txtNumero.setEnabled(false);
        txtFechaEmision.setEnabled(false);
        txtTipoCambioVenta.setEnabled(false);
        txtFechaAprobacion.setEnabled(false);
        txtFechaVencimiento.setEnabled(false);
        txtRazonSocial.setEnabled(false);
        txtNumCotizacion.setEnabled(false);
        txtNumPedido.setEnabled(false);
        txtFormaPago.setEnabled(false);
        comboBoxTipo.setEnabled(false);
        comboBoxMoneda.setEnabled(false);
        txtMontoFactura.setEnabled(false);
        labelSimboloSoles.setEnabled(false);
        labelSimboloSoles.setEnabled(false);
        txtMontoSoles.setEnabled(false);
        txtMontoSoles.setEnabled(false);
        comboBoxDetraccion.setEnabled(false);
        txtMontoDetraccion.setEnabled(false);
        comboBoxEstado.setEnabled(false);
        txtObservacion.setEnabled(false);

        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonRegistrarVerPagos.setEnabled(true);
        buttonModificarVenta.setEnabled(true);
    }
    
    void habilitarModificar(){
        labelTipoComprobante.setEnabled(false);
        txtSerie.setEnabled(false);
        txtNumero.setEnabled(false);
        txtFechaEmision.setEnabled(false);
        txtTipoCambioVenta.setEnabled(false);
        txtFechaAprobacion.setEnabled(false);
        txtFechaVencimiento.setEnabled(false);
        txtRazonSocial.setEnabled(false);
        txtNumCotizacion.setEnabled(false);
        txtNumPedido.setEnabled(false);
        txtFormaPago.setEnabled(false);
        comboBoxTipo.setEnabled(false);
        comboBoxMoneda.setEnabled(false);
        txtMontoFactura.setEnabled(false);
        labelSimboloSoles.setEnabled(false);
        labelSimboloSoles.setEnabled(false);
        txtMontoSoles.setEnabled(false);
        txtMontoSoles.setEnabled(false);
        comboBoxDetraccion.setEnabled(false);
        txtMontoDetraccion.setEnabled(false);
        comboBoxEstado.setEnabled(true);
        txtObservacion.setEnabled(true);

        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(true);
        buttonRegistrarVerPagos.setEnabled(true);
        buttonModificarVenta.setEnabled(true);
   
    }
    
    void habilitarGuardar(){
        
        labelTipoComprobante.setEnabled(false);
        txtSerie.setEnabled(false);
        txtNumero.setEnabled(false);
        txtFechaEmision.setEnabled(false);
        txtTipoCambioVenta.setEnabled(false);
        txtFechaAprobacion.setEnabled(false);
        txtFechaVencimiento.setEnabled(false);
        txtRazonSocial.setEnabled(false);
        txtNumCotizacion.setEnabled(false);
        txtNumPedido.setEnabled(false);
        txtFormaPago.setEnabled(false);
        comboBoxTipo.setEnabled(false);
        comboBoxMoneda.setEnabled(false);
        txtMontoFactura.setEnabled(false);
        labelSimboloSoles.setEnabled(false);
        labelSimboloSoles.setEnabled(false);
        txtMontoSoles.setEnabled(false);
        txtMontoSoles.setEnabled(false);
        comboBoxDetraccion.setEnabled(false);
        txtMontoDetraccion.setEnabled(false);
        comboBoxEstado.setEnabled(false);
        txtObservacion.setEnabled(false);

        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonRegistrarVerPagos.setEnabled(true);
        buttonModificarVenta.setEnabled(true);
    }

    //--------------------------------- Fecha y año ---------------------------------------------
    public String fechaActual() {
        Date fecha = new Date();

        SimpleDateFormat formatofecha = new SimpleDateFormat("yyyy-MM-dd");
        return formatofecha.format(fecha);
    }
    
    Calendar convertirFechaDate(String ah) throws ParseException{
   
       Calendar fecha = Calendar.getInstance();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        Date fechaDate = null;

        fechaDate=formato.parse(ah);

        fecha.setTime(fechaDate);
        
        return fecha;
    }
    
    
    String convertirFechaString(Date fech) {

        Format formatter = new SimpleDateFormat("yyyy-MM-dd ");

        return formatter.format(fech);

    }
    
    public String anioActual(String f) throws ParseException {
        Calendar fecha = Calendar.getInstance();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        Date fechaDate = null;

        fechaDate = formato.parse(f);

        SimpleDateFormat formatofecha = new SimpleDateFormat("yyyy");
        return formatofecha.format(fechaDate);

    }
}
