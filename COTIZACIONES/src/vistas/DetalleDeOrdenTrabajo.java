/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controller.ClienteController;
import controller.DetalleOrdenTrabajoController;
import controller.DetallePedidoController;
import controller.DetalleProformaController;
import controller.OrdenTrabajoController;
import controller.PedidoController;
import controller.ProformaController;
import entity.Cliente;
import entity.DetalleOrdenTrabajo;
import entity.DetallePedido;
import entity.DetalleProforma;
import entity.OrdenTrabajo;
import entity.Pedido;
import entity.Proforma;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ARCRODINPC-05
 */
public class DetalleDeOrdenTrabajo extends javax.swing.JInternalFrame {

    /**
     * Creates new form DetalleDeOrdenTrabajo
     */
    static int idDetalleOrdenTrabajo;
    static int idOrdenTrabajo;
    int idProforma;
    String numOTD;
    int idPedidoD;
    int numPedidoD;
    int idProfD;
    String numProfD;
    int idCliD;
    int anio;
    
    int tabla;
    static String item;
    static String cant;
    static String descripcion;
    static String tolerancia;
    static String campo1;

    public DetalleDeOrdenTrabajo() throws Exception {
        initComponents();
        idOrdenTrabajo=OrdenTrabajoRegistro.idOrdenTrabajoParaDetalle;
        numPedidoD=OrdenTrabajoRegistro.numDePedparaDetalle;
        anio=OrdenTrabajoRegistro.anioPedidoEnDetalle;
        consultarPedido(numPedidoD, anio);
        listaDetalleProforma(idProforma);
        numOTD=OrdenTrabajoRegistro.numOTParaDetalle;
        labelNumOT.setText(numOTD);
        habilitarInicio();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        labelNumOT = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNumPedido = new javax.swing.JTextField();
        buttonBuscar = new javax.swing.JButton();
        buttonLimpiar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtRazSocial = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtItem = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtCant = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTolerancia = new javax.swing.JTextField();
        buttonRegistrar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtNumProf = new javax.swing.JTextField();
        buttonCerrar = new javax.swing.JButton();
        buttonModificar = new javax.swing.JButton();
        buttonGuardar = new javax.swing.JButton();
        buttonEliminar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Detalle de Orden de Trabajo");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Número de Orden de Trabajo:");

        labelNumOT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelNumOT.setText("00000000000");

        jLabel3.setText("N° de Pedido:");

        buttonBuscar.setText("Buscar");
        buttonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarActionPerformed(evt);
            }
        });

        buttonLimpiar.setText("Limpiar");
        buttonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLimpiarActionPerformed(evt);
            }
        });

        jLabel4.setText("Cliente:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idDetPed", "Item", "Cant", "Descripcion", "Valor Unit.", "Precio Unit.", "Importe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(15);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(45);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(45);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(380);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(100);
        }

        jLabel5.setText("Item");

        jLabel6.setText("Cantidad");

        jLabel7.setText("Descripción");

        txtDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescripcionActionPerformed(evt);
            }
        });
        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyTyped(evt);
            }
        });

        jLabel8.setText("Tolerancia");

        buttonRegistrar.setText("Registrar");
        buttonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegistrarActionPerformed(evt);
            }
        });

        jLabel9.setText("Según Cotización:");

        buttonCerrar.setText("Cerrar");
        buttonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCerrarActionPerformed(evt);
            }
        });

        buttonModificar.setText("Modificar ");
        buttonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarActionPerformed(evt);
            }
        });

        buttonGuardar.setText("Guardar");
        buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGuardarActionPerformed(evt);
            }
        });

        buttonEliminar.setText("Eliminar");
        buttonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(190, 190, 190)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelNumOT))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumProf, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(312, 312, 312)
                                .addComponent(buttonRegistrar)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonBuscar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonLimpiar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtRazSocial))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonModificar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonGuardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonEliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buttonCerrar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 788, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(txtItem, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(txtDescripcion))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(txtTolerancia, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(labelNumOT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNumPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBuscar)
                    .addComponent(buttonLimpiar)
                    .addComponent(jLabel4)
                    .addComponent(txtRazSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtNumProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTolerancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonRegistrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonModificar)
                    .addComponent(buttonGuardar)
                    .addComponent(buttonEliminar)
                    .addComponent(buttonCerrar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarActionPerformed
        try {
            consultarPedido(Integer.parseInt(txtNumPedido.getText()), anio);
        } catch (Exception ex) {
            Logger.getLogger(DetalleDeOrdenTrabajo.class.getName()).log(Level.SEVERE, null, ex);
        }
        listaDetalleProforma(idProforma);
    }//GEN-LAST:event_buttonBuscarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        tabla = jTable1.getSelectedRow();
        item = jTable1.getValueAt(tabla, 1).toString();
        cant = jTable1.getValueAt(tabla, 2).toString();
        descripcion = jTable1.getValueAt(tabla, 3).toString();

        txtItem.setText(item);
        txtCant.setText(cant);
        txtDescripcion.setText(descripcion);
    }//GEN-LAST:event_jTable1MouseClicked

    private void buttonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegistrarActionPerformed
        procesar(1);
        limpiar();
        OrdenTrabajoRegistro.listaDetalleOrdenTrabajo(idOrdenTrabajo);
    }//GEN-LAST:event_buttonRegistrarActionPerformed

    private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGuardarActionPerformed
        procesar(2);
        OrdenTrabajoRegistro.listaDetalleOrdenTrabajo(idOrdenTrabajo);
        limpiar();
        habilitarGuardar();
    }//GEN-LAST:event_buttonGuardarActionPerformed

    private void buttonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminarActionPerformed
        if (JOptionPane.showConfirmDialog(rootPane, "Se eliminará el registro, ¿desea continuar?",
                "Eliminar Registro", JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            procesar(3);
            limpiar();
            OrdenTrabajoRegistro.listaDetalleOrdenTrabajo(idOrdenTrabajo);
            habilitarEliminar();
        }
        dispose();
    
    }//GEN-LAST:event_buttonEliminarActionPerformed

    private void buttonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_buttonCerrarActionPerformed

    private void buttonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarActionPerformed
        habilitarModificar();
    }//GEN-LAST:event_buttonModificarActionPerformed

    private void buttonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_buttonLimpiarActionPerformed

    private void txtDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionActionPerformed

    private void txtDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyTyped
        String Caracteres = txtDescripcion.getText();
        if (Caracteres.length() >= 116) {
            JOptionPane.showMessageDialog(null, "Ya no puede ingresar más letras.");
            evt.consume();
        }
    }//GEN-LAST:event_txtDescripcionKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBuscar;
    private javax.swing.JButton buttonCerrar;
    public static javax.swing.JButton buttonEliminar;
    public static javax.swing.JButton buttonGuardar;
    private javax.swing.JButton buttonLimpiar;
    public static javax.swing.JButton buttonModificar;
    public static javax.swing.JButton buttonRegistrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelNumOT;
    public static javax.swing.JTextField txtCant;
    public static javax.swing.JTextField txtDescripcion;
    public static javax.swing.JTextField txtItem;
    private javax.swing.JTextField txtNumPedido;
    private javax.swing.JTextField txtNumProf;
    private javax.swing.JTextField txtRazSocial;
    public static javax.swing.JTextField txtTolerancia;
    // End of variables declaration//GEN-END:variables

    PedidoController pedidocontroler = new PedidoController();
    Pedido pedido;

    DetallePedidoController detallepedidocontroler = new DetallePedidoController();
    DetallePedido detallepedido;

    OrdenTrabajoController ordentrabajocontroler = new OrdenTrabajoController();
    OrdenTrabajo ordentrabajo;

    static DetalleOrdenTrabajoController detalleordentrabajocontroler = new DetalleOrdenTrabajoController();
    static DetalleOrdenTrabajo detalleordentrabajo;

    ClienteController clientecontroler = new ClienteController();
    Cliente cliente;

    ProformaController proformacontroler = new ProformaController();
    Proforma proforma;
    
    DetalleProformaController detalleproformacontroler=new DetalleProformaController();
    DetalleProforma detalleproforma;

//-------------------------------- Consultar Pedido ----------------------------
    private void consultarPedido(int numPed, int anio) throws Exception {
        pedido = pedidocontroler.PedidoBuscar(numPed, anio);
        if (pedido != null) {

            idPedidoD = pedido.getIdPedido();
            numPedidoD = pedido.getNumPedido();
            txtNumPedido.setText(String.format("%06d", pedido.getNumPedido()));
            idProfD = pedido.getIdProforma();
            idProforma=pedido.getIdProforma();
            consultarCodigoProforma(idProfD);
            idCliD = pedido.getIdCliente();
            consultarCliente(idCliD);
        } else {
            JOptionPane.showMessageDialog(null, "Pedido no registrado");
        }
    }

    private void consultarCodigoProforma(int idP) throws Exception {

        proforma = proformacontroler.ProformaBuscar1(idP);
        if (proforma != null) {

            numProfD = proforma.getCodProforma();
            txtNumProf.setText(proforma.getCodProforma());

        } else {
        }
    }

    private void consultarCliente(int idCli) throws Exception {
        cliente = clientecontroler.ClienteBuscar1(idCli);
        if (cliente != null) {

            idCliD = cliente.getIdCliente();
            txtRazSocial.setText(cliente.getRazonSocial());

        } else {
            JOptionPane.showMessageDialog(null, "Cliente no registrado");
        }
    }
    //-------------------------- Consultar detalle pedido ------------------------
         static void consultarDetalleOrdenTrabajo(int iddet) throws Exception {
        detalleordentrabajo = detalleordentrabajocontroler.DetalleOrdenTrabajoBuscar(iddet);
        if (detalleordentrabajo != null) {
            idDetalleOrdenTrabajo= detalleordentrabajo.getIdDetalleOrdenTrabajo();
            idOrdenTrabajo=detalleordentrabajo.getIdOrdenTrabajo();
            item= detalleordentrabajo.getItem();
            txtItem.setText(item);
            cant= detalleordentrabajo.getCant();
            txtCant.setText(cant);
            descripcion= detalleordentrabajo.getDescripcion();
            txtDescripcion.setText(descripcion);
            tolerancia= detalleordentrabajo.getTolerancia();
            txtTolerancia.setText(tolerancia);
            campo1= detalleordentrabajo.getCampo1();
     
        } else {
            JOptionPane.showMessageDialog(null, "Detalle Orden Trabajo no registrado");
        }
    }
    
    //----------------------------- Procesar -------------------------------------
    private void procesar(int op) {
        detalleordentrabajo = leerDatos();
        try {
            String msg = detalleordentrabajocontroler.DetalleOrdenTrabajoProcesar(detalleordentrabajo, op);
            JOptionPane.showMessageDialog(null, msg);
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("Error" + e.getMessage());
        }
    }
    
    // -----------------------------Leer Datos ----------------------------------        
    private DetalleOrdenTrabajo leerDatos() {

        DetalleOrdenTrabajo detOT = new DetalleOrdenTrabajo();
        
        detOT.setIdDetalleOrdenTrabajo(idDetalleOrdenTrabajo);
        detOT.setIdOrdenTrabajo(idOrdenTrabajo);
        item=txtItem.getText();
        detOT.setItem(item);
        cant=txtCant.getText();
        detOT.setCant(cant);
        descripcion=txtDescripcion.getText();
        detOT.setDescripcion(descripcion);
        tolerancia=txtTolerancia.getText();
        detOT.setTolerancia(tolerancia);
        detOT.setCampo1(campo1);

        return detOT;
    }

    
// ------------------------------------ TABLA  DETALLE PROFORMA ---------------------------------------
    void listaDetalleProforma(int idpro) {
        List<DetalleProforma> lista;
        try {
            lista = detalleproformacontroler.DetalleProformaFiltrar(idpro);
            verDetalleProforma(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    private void verDetalleProforma(List<DetalleProforma> lista) {
        String it, vu, f;
        float uv;
        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        tabla.setRowCount(0);
        for (DetalleProforma detProf : lista) {
            if (!"".equals(detProf.getPrecioUnitario())) {
                it = detProf.getImporte();
            } else {
                it = "";
            }
            if (!"".equals(detProf.getPrecioUnitario())) {
                f = detProf.getItem1();
            } else {
                f = "";
            }

            Object[] fila = {detProf.getIdDetalleProforma(), detProf.getItem(), detProf.getCantidad(), detProf.getDescripcion(), detProf.getPrecioUnitario(), f, it};
            tabla.addRow(fila);
        }
    }

//---------------------------------------- Limpiar ----------------------------------------
    void limpiar() {
        txtItem.setText("");
        txtCant.setText("");
        txtDescripcion.setText("");
        txtTolerancia.setText("");
        idDetalleOrdenTrabajo=0;
        habilitarInicio();
    }
    
    
    void habilitarInicio() {
        buttonRegistrar.setEnabled(true);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(false);
        
        txtItem.setEnabled(true);
        txtCant.setEnabled(true);
        txtDescripcion.setEnabled(true);
        txtTolerancia.setEnabled(true);
    }
    static void habilitarTabla(){
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(true);
        
        txtItem.setEnabled(false);
        txtCant.setEnabled(false);
        txtDescripcion.setEnabled(false);
        txtTolerancia.setEnabled(false);
    }
    
    void habilitarModificar(){
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(true);
        buttonEliminar.setEnabled(false);
        
        txtItem.setEnabled(true);
        txtCant.setEnabled(true);
        txtDescripcion.setEnabled(true);
        txtTolerancia.setEnabled(true);
    }
    
    void habilitarGuardar(){
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(false);
        
        txtItem.setEnabled(false);
        txtCant.setEnabled(false);
        txtDescripcion.setEnabled(false);
        txtTolerancia.setEnabled(false);
    }
    
    void habilitarEliminar(){
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(true);
        
        txtItem.setEnabled(false);
        txtCant.setEnabled(false);
        txtDescripcion.setEnabled(false);
        txtTolerancia.setEnabled(false); 
    }
}
