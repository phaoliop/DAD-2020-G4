/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controller.ContactoProveedorController;
import controller.ProveedorController;
import controller.SucursalController;
import entity.ContactoProveedor;
import entity.Proveedor;
import entity.Sucursal;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ARCRODINPC-02
 */
public class RegistrarContactosProveedor extends javax.swing.JInternalFrame {

    /**
     * Creates new form RegistrarContactosProveedor
     */
    int idProvee;
    int idConPro;
    
    int tabla;
    String contac;
    
    String sucursalNombre;
    
    
    public RegistrarContactosProveedor() throws Exception {
        initComponents();
        consultarProveedor(Proveedores.y);
        idProvee=Proveedores.y;
        listaContactoProveedor();
        habilitarInicio();
        
        comboBoxSucursal.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {

         @Override
         public void keyReleased(KeyEvent evt) {
                // aca falta validar que me ejecute el campo
                String cadenaEscrita = comboBoxSucursal.getEditor().getItem().toString();
                if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                    try {
                     consultarSucursalNombre(comboBoxSucursal.getItemAt(0));
                    } catch (Exception ex) {
                        Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    comboBoxSucursal.setSelectedIndex(0);
                   
                    if (comparar(cadenaEscrita)) {
                        try {
                            // compara si el texto escrito se ecuentra en la lista
                            // busca el texto escrito en la base de datos, solo pasa si es identico
                           consultarSucursalNombre(cadenaEscrita);

                                                      
                        } catch (Exception ex) {
                            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    

                    } else {
                        try {
                            for (int i = 0; i <comboBoxSucursal.getModel().getSize(); i++) {
                                if (comboBoxSucursal.getItemAt(i).equals(cadenaEscrita)) {
                                    consultarSucursalNombre(comboBoxSucursal.getItemAt(i));
                                    comboBoxSucursal.setSelectedIndex(i);
                                }
                            }
                            
                            } catch (Exception ex) {
                            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }

                if (evt.getKeyCode() >= 65 && evt.getKeyCode() <= 90 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105 || evt.getKeyCode() == 8) {
                    try {
                        comboBoxSucursal.setModel(sucursalcontroler.SucursalListarCombo(cadenaEscrita));
                    } catch (Exception ex) {
                        Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (comboBoxSucursal.getItemCount() > 0) {
                        comboBoxSucursal.getEditor().setItem(cadenaEscrita);
                        comboBoxSucursal.showPopup();
                    } else {
                        comboBoxSucursal.addItem(cadenaEscrita);
                    }
                }
            }
        });
    }
    
    private boolean comparar(String cadena) {
        Object[] lista = comboBoxSucursal.getComponents();
        boolean encontrado = false;
        for (Object object : lista) {
            if (cadena.equals(object)) {
                encontrado = true;
                break;
            }

        }
        return encontrado;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        labelIdContactoProveedor = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtDni = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtCargo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTlf1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTlf2 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        buttonCerrar = new javax.swing.JButton();
        buttonEliminar = new javax.swing.JButton();
        buttonModificar = new javax.swing.JButton();
        buttonRegistrar = new javax.swing.JButton();
        buttonGuardar = new javax.swing.JButton();
        buttonNuevo = new javax.swing.JButton();
        buttonLimpiar = new javax.swing.JButton();
        txtObservacion = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtProveedor = new javax.swing.JTextField();
        buttonRegistroSucursales = new javax.swing.JButton();
        comboBoxSucursal = new javax.swing.JComboBox<>();

        setClosable(true);
        setTitle("Contacto del Proveedor");

        jLabel1.setText("N°: ");

        labelIdContactoProveedor.setText("0");

        jLabel3.setText("D.N.I.:");

        txtDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDniKeyTyped(evt);
            }
        });

        jLabel4.setText("Nombres: ");

        jLabel5.setText("Apellidos: ");

        jLabel6.setText("Cargo:");

        jLabel7.setText("Correo: ");

        jLabel8.setText("Telefono1:");

        txtTlf1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTlf1ActionPerformed(evt);
            }
        });

        jLabel9.setText("Teléfono 2:");

        jLabel11.setText("Observacion: ");

        buttonCerrar.setText("Cerrar");
        buttonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCerrarActionPerformed(evt);
            }
        });

        buttonEliminar.setText("Eliminar");
        buttonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminarActionPerformed(evt);
            }
        });

        buttonModificar.setText("Modificar");
        buttonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarActionPerformed(evt);
            }
        });

        buttonRegistrar.setText("Registrar");
        buttonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegistrarActionPerformed(evt);
            }
        });

        buttonGuardar.setText("Guardar");
        buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGuardarActionPerformed(evt);
            }
        });

        buttonNuevo.setText("Nuevo");
        buttonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNuevoActionPerformed(evt);
            }
        });

        buttonLimpiar.setText("Limpiar");
        buttonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLimpiarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idConPro", "Nombre", "Correo", "Telefono1", "Cargo", "Observación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(25);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(180);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(150);
        }

        jLabel2.setText("Proveedor:");

        buttonRegistroSucursales.setText("Sucursal:");
        buttonRegistroSucursales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegistroSucursalesActionPerformed(evt);
            }
        });

        comboBoxSucursal.setEditable(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonRegistrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                                        .addComponent(jLabel8))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonRegistroSucursales)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtTlf1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(comboBoxSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtObservacion, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4)
                                        .addGap(203, 203, 203))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(labelIdContactoProveedor)
                                        .addGap(70, 70, 70)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTlf2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(labelIdContactoProveedor)
                    .addComponent(jLabel2)
                    .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonLimpiar))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtTlf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTlf2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtObservacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(buttonRegistroSucursales)
                    .addComponent(comboBoxSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonNuevo)
                    .addComponent(buttonRegistrar)
                    .addComponent(buttonModificar)
                    .addComponent(buttonGuardar)
                    .addComponent(buttonEliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 15, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonCerrar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTlf1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTlf1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTlf1ActionPerformed

    private void buttonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_buttonCerrarActionPerformed

    private void buttonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegistrarActionPerformed
        String nombr=txtNombres.getText();
        if (nombr.length()== 0) {
            JOptionPane.showMessageDialog(null, "Llenar nombre del contacto(dato obligatorio)");
        } else {
            procesar(1);
            listaContactoProveedor();
            limpiarCampos();
            habilitarRegistrar();
        }
    }//GEN-LAST:event_buttonRegistrarActionPerformed

    private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGuardarActionPerformed
        procesar2(2);
        listaContactoProveedor();
        try {
            consultar(txtNombres.getText(), idProvee);
        } catch (Exception ex) {
            Logger.getLogger(RegistrarContactosProveedor.class.getName()).log(Level.SEVERE, null, ex);
        }
        habilitarGuardar();
    }//GEN-LAST:event_buttonGuardarActionPerformed

    private void buttonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminarActionPerformed
        procesar2(3);
        listaContactoProveedor();
        limpiarCampos();
        habilitarEliminar();
    }//GEN-LAST:event_buttonEliminarActionPerformed

    private void buttonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLimpiarActionPerformed
        limpiarCampos();
        habilitarInicio();
    }//GEN-LAST:event_buttonLimpiarActionPerformed

    private void buttonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNuevoActionPerformed
        limpiarCampos();
        habilitarNuevo();
    }//GEN-LAST:event_buttonNuevoActionPerformed

    private void buttonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarActionPerformed
        habilitarModificar();
    }//GEN-LAST:event_buttonModificarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       tabla = jTable1.getSelectedRow();
       contac= jTable1.getValueAt(tabla, 0).toString();
       idConPro=Integer.parseInt(contac);
        try {
            consultar(idConPro);
        } catch (Exception ex) {
            Logger.getLogger(RegistrarContactosProveedor.class.getName()).log(Level.SEVERE, null, ex);
        }
        habilitarBuscar();
    }//GEN-LAST:event_jTable1MouseClicked

    private void txtDniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniKeyTyped
          String Caracteres = txtDni.getText(); 
        if(Caracteres.length()>=8){ 
            evt.consume(); 
        }
    }//GEN-LAST:event_txtDniKeyTyped

    private void buttonRegistroSucursalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegistroSucursalesActionPerformed
        SucursalRegistro sucuRe= new SucursalRegistro();
        Principal.jDesktopPane1.add(sucuRe);
        sucuRe.toFront();
        sucuRe.setVisible(true);
    }//GEN-LAST:event_buttonRegistroSucursalesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCerrar;
    private javax.swing.JButton buttonEliminar;
    private javax.swing.JButton buttonGuardar;
    private javax.swing.JButton buttonLimpiar;
    private javax.swing.JButton buttonModificar;
    private javax.swing.JButton buttonNuevo;
    private javax.swing.JButton buttonRegistrar;
    private javax.swing.JButton buttonRegistroSucursales;
    private javax.swing.JComboBox<String> comboBoxSucursal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelIdContactoProveedor;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCargo;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtObservacion;
    private javax.swing.JTextField txtProveedor;
    private javax.swing.JTextField txtTlf1;
    private javax.swing.JTextField txtTlf2;
    // End of variables declaration//GEN-END:variables

   ContactoProveedorController obj=new ContactoProveedorController();
   ContactoProveedor pro, pro2;
   
   ProveedorController proveedorcontroler=new ProveedorController();
   Proveedor proveedor;
   
   SucursalController sucursalcontroler= new SucursalController();
   Sucursal sucursal;
   
   private void procesar(int op) {
       pro=leerDatos();
        try {
            String msg=obj.ContactoProveedorProcesar(pro, op);
            JOptionPane.showMessageDialog(null, msg);            
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
             System.out.println("Error"+e.getMessage());
        }       
   }
   
   private void procesar2(int op) {
      
       pro2=leerDatos2();
       
        try {
            
            String msg=obj.ContactoProveedorProcesar(pro2, op);
            JOptionPane.showMessageDialog(null, msg);            
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
             System.out.println("Error"+e.getMessage());
        }       
   }
   
     private void consultar(String nombre, int id) throws Exception {
        pro = obj.ContactoProveedorBuscar(nombre, id);
        if (pro != null) {

            labelIdContactoProveedor.setText(pro.getIdContactoProveedor() + "");
            // txtNombres.setText(pro.getNombres());
            txtDni.setText(pro.getDni());
            txtApellidos.setText(pro.getApellidos());
            txtCargo.setText(pro.getCargo());
            txtCorreo.setText(pro.getCorreo());
            txtTlf1.setText(pro.getTlf1());
            txtTlf2.setText(pro.getTlf2());
            comboBoxSucursal.setSelectedItem(pro.getSucursal());
            txtObservacion.setText(pro.getObservacion());

        } else {
            JOptionPane.showMessageDialog(null, "Contacto no registrado");
            //System.out.println("Error");
        }
    }
         
      private void consultar(int id) throws Exception {
        pro = obj.ContactoProveedorBuscar(id);
        if (pro != null) {

            labelIdContactoProveedor.setText(pro.getIdContactoProveedor() + "");
            txtNombres.setText(pro.getNombres());
            txtDni.setText(pro.getDni());
            txtApellidos.setText(pro.getApellidos());
            txtCargo.setText(pro.getCargo());
            txtCorreo.setText(pro.getCorreo());
            txtTlf1.setText(pro.getTlf1());
            txtTlf2.setText(pro.getTlf2());
            comboBoxSucursal.setSelectedItem(pro.getSucursal());
            txtObservacion.setText(pro.getObservacion());

        } else {
            JOptionPane.showMessageDialog(null, "Contacto no registrado");
            //System.out.println("Error");
        }
    }
      
       private void consultarSucursalNombre(String cadena) throws Exception {
        sucursal = sucursalcontroler.SucursalBuscarNombre(cadena);
        if (sucursal != null) {

            sucursalNombre=sucursal.getSucursal();
            System.out.println("la sucursal es: "+sucursalNombre);
            

        } else {
            JOptionPane.showMessageDialog(null, "sucursal no registrado");
            //System.out.println("Error");
        }
    }
    
     private ContactoProveedor leerDatos() {
        ContactoProveedor conPro = new ContactoProveedor();
        
        conPro.setIdProveedor(Proveedores.y);
        conPro.setDni(txtDni.getText());
        conPro.setNombres(txtNombres.getText());
        conPro.setApellidos(txtApellidos.getText());
        conPro.setCargo(txtCargo.getText());
        conPro.setCorreo(txtCorreo.getText());
        conPro.setTlf1(txtTlf1.getText());
        conPro.setTlf2(txtTlf2.getText());
        conPro.setSucursal(comboBoxSucursal.getEditor().getItem().toString());
        conPro.setObservacion(txtObservacion.getText());
        
        return conPro;
    }
   private ContactoProveedor leerDatos2() {
        ContactoProveedor conPro = new ContactoProveedor();
        
        conPro.setIdContactoProveedor(Integer.parseInt(labelIdContactoProveedor.getText()));
        conPro.setDni(txtDni.getText());
        conPro.setNombres(txtNombres.getText());
        conPro.setApellidos(txtApellidos.getText());
        conPro.setCargo(txtCargo.getText());
        conPro.setCorreo(txtCorreo.getText());
        conPro.setTlf1(txtTlf1.getText());
        conPro.setTlf2(txtTlf2.getText());
        conPro.setSucursal(comboBoxSucursal.getEditor().getItem().toString());
        conPro.setObservacion(txtObservacion.getText());
        
        return conPro;
    }
   
    public void limpiarCampos(){
        txtDni.setText("");
        txtNombres.setText("");
        txtApellidos.setText("");
        txtCargo.setText("");
        txtCorreo.setText("");
        txtTlf1.setText("");
        txtTlf2.setText("");
        comboBoxSucursal.setSelectedItem("");
        txtObservacion.setText("");
        labelIdContactoProveedor.setText("0");
        idConPro=0;
        
    }
    
    public void habilitarInicio() {

        buttonLimpiar.setEnabled(true);
        buttonNuevo.setEnabled(true);
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(false);
        buttonRegistroSucursales.setEnabled(false);

        txtDni.setEnabled(false);
        txtNombres.setEnabled(false);
        txtApellidos.setEnabled(false);
        txtCargo.setEnabled(false);
        txtCorreo.setEnabled(false);
        txtTlf1.setEnabled(false);
        txtTlf2.setEnabled(false);
        comboBoxSucursal.setEnabled(false);
        txtObservacion.setEnabled(false);
}
     public void habilitarNuevo() {
        
        buttonLimpiar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonModificar.setEnabled(false);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(true);
        buttonEliminar.setEnabled(false);
        buttonRegistroSucursales.setEnabled(true);

        txtDni.setEnabled(true);
        txtNombres.setEnabled(true);
        txtApellidos.setEnabled(true);
        txtCargo.setEnabled(true);
        txtTlf1.setEnabled(true);
        txtTlf2.setEnabled(true);
        txtCorreo.setEnabled(true);
        comboBoxSucursal.setEnabled(true);
        txtObservacion.setEnabled(true);
    }
    
    public void habilitarRegistrar() {
        
        buttonLimpiar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonEliminar.setEnabled(true);
        buttonRegistroSucursales.setEnabled(false);

        txtDni.setEnabled(false);
        txtNombres.setEnabled(false);
        txtApellidos.setEnabled(false);
        txtCargo.setEnabled(false);
        txtTlf1.setEnabled(false);
        txtTlf2.setEnabled(false);
        txtCorreo.setEnabled(false);
        comboBoxSucursal.setEnabled(false);
        txtObservacion.setEnabled(false);
 
    }
        public void habilitarEliminar(){
        
        buttonLimpiar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonModificar.setEnabled(false);
        buttonNuevo.setEnabled(true);
        buttonRegistrar.setEnabled(false);
        buttonEliminar.setEnabled(false);
        buttonRegistroSucursales.setEnabled(false);

        txtDni.setEnabled(false);
        txtNombres.setEnabled(false);
        txtApellidos.setEnabled(false);
        txtCargo.setEnabled(false);
        txtTlf1.setEnabled(false);
        txtTlf2.setEnabled(false);
        txtCorreo.setEnabled(false);
        comboBoxSucursal.setEnabled(false);
        txtObservacion.setEnabled(false);
 }
        
        public void habilitarGuardar(){
        
        buttonLimpiar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonEliminar.setEnabled(true);
        buttonRegistroSucursales.setEnabled(false);

        txtDni.setEnabled(false);
        txtNombres.setEnabled(false);
        txtApellidos.setEnabled(false);
        txtCargo.setEnabled(false);
        txtTlf1.setEnabled(false);
        txtTlf2.setEnabled(false);
        txtCorreo.setEnabled(false);
        comboBoxSucursal.setEnabled(false);
        txtObservacion.setEnabled(false);
 }
        
         public void habilitarBuscar(){
        
        buttonLimpiar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonEliminar.setEnabled(true);
        buttonRegistroSucursales.setEnabled(false);

        txtDni.setEnabled(false);
        txtNombres.setEnabled(false);
        txtApellidos.setEnabled(false);
        txtCargo.setEnabled(false);
        txtTlf1.setEnabled(false);
        txtTlf2.setEnabled(false);
        txtCorreo.setEnabled(false);
        comboBoxSucursal.setEnabled(false);
        txtObservacion.setEnabled(false);
 }
      public void habilitarModificar(){
        
        buttonLimpiar.setEnabled(true);
        buttonGuardar.setEnabled(true);
        buttonModificar.setEnabled(false);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonEliminar.setEnabled(false);
        buttonRegistroSucursales.setEnabled(true);

        txtDni.setEnabled(true);
        txtNombres.setEnabled(true);
        txtApellidos.setEnabled(true);
        txtCargo.setEnabled(true);
        txtTlf1.setEnabled(true);
        txtTlf2.setEnabled(true);
        txtCorreo.setEnabled(true);
        comboBoxSucursal.setEnabled(true);
        txtObservacion.setEnabled(true);
 }
      
  private void consultarProveedor(int id) throws Exception {
       proveedor = proveedorcontroler.ProveedorBuscarId(id);
        if (proveedor!= null) {

           txtProveedor.setText(proveedor.getRazonSocial());
            
            
        } else {
            JOptionPane.showMessageDialog(null, "Proveedor no registrado");
            //System.out.println("Error");
        }
    }
  
      private void listaContactoProveedor() {
        List<ContactoProveedor> lista;
        try {
            
            lista = obj.ContactoProveedorListar1(Proveedores.y);
            verContactoProveedor(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    private void verContactoProveedor(List<ContactoProveedor> lista) {

        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        tabla.setRowCount(0);
        for (ContactoProveedor conPro : lista) {
            
            Object[] fila = {conPro.getIdContactoProveedor() , conPro.getNombres()+" "+ conPro.getApellidos(), conPro.getCorreo(),  conPro.getTlf1(),conPro.getCargo(), conPro.getObservacion()};
            tabla.addRow(fila);
        }
    }

}
