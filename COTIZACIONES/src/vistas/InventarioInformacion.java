/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controller.InventarioController;
import entity.Inventario;
import java.awt.Color;
import java.awt.Component;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ARCRODINPC-06
 */
public class InventarioInformacion extends javax.swing.JInternalFrame {

    /**
     * Creates new form InventarioInformacion
     */
    String filtro= "encargado";
    public InventarioInformacion() {
        initComponents();
        listaInventario(filtro,txtLike.getText());
        jTable1.setDefaultRenderer (Object.class, new RowsRenderer());
    }
    
    public class RowsRenderer extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable jTable1, Object value, boolean selected, boolean focused, int row, int column) {

            super.getTableCellRendererComponent(jTable1, value, selected, focused, row, column);
            if ("ACTUALIZADO".equals((jTable1.getValueAt(row, column)))) {
                this.setOpaque(true);
                this.setForeground(Color.decode("#009900"));//verde

            } else if ("FINALIZADO".equals((jTable1.getValueAt(row, column)))) {
                this.setOpaque(true);
                this.setForeground(Color.RED);

            } else if ((!"ACTUALIZADO".equals((jTable1.getValueAt(row, column))))
                    && (!"FINALIZADO".equals((jTable1.getValueAt(row, column))))) {
                this.setOpaque(true);
                this.setForeground(Color.BLACK);

            }

            if (selected) {
                setBackground(Color.decode("#39698a"));
                setForeground(Color.decode("#FFFFFF"));
            } else {
                setBackground(Color.WHITE);
            }

            return this;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboBoxInventario = new javax.swing.JComboBox<>();
        txtLike = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        comboBoxInventario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "INVENTARIO", "ENCARGADO", "FECHA REGISTRO", "FECHA REALIZADO", "ESTADO" }));
        comboBoxInventario.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxInventarioItemStateChanged(evt);
            }
        });

        txtLike.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLikeKeyReleased(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Inv.", "Encargado", "Fecha Realizó", "Fecha Registrado", "Estado", "Observación "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(180);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(130);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(180);
        }

        jButton1.setText("Cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(comboBoxInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLike, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 230, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLike, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtLikeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLikeKeyReleased
        listaInventario(filtro,txtLike.getText());
    }//GEN-LAST:event_txtLikeKeyReleased

    private void comboBoxInventarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxInventarioItemStateChanged
         if (comboBoxInventario.getSelectedItem() == "INVENTARIO") {
            filtro = "idInventario";
            listaInventario(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxInventario.getSelectedItem() == "ENCARGADO") {
            filtro = "encargado";
            listaInventario(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxInventario.getSelectedItem() == "FECHA REGISTRO") {
            filtro = "fechaRegistro";
            listaInventario(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxInventario.getSelectedItem() == "FECHA REALIZADO") {
            filtro = "fechaRealizado";
            listaInventario(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxInventario.getSelectedItem() == "ESTADO") {
            filtro = "estado";
            listaInventario(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxInventario.getSelectedItem() == "SELECCIONAR") {
            filtro = "idInventario";
            listaInventario(filtro, txtLike.getText());
            System.out.println(filtro);
        }
    }//GEN-LAST:event_comboBoxInventarioItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboBoxInventario;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtLike;
    // End of variables declaration//GEN-END:variables
  
  InventarioController inventariocontroler = new InventarioController();
  Inventario inventario;
  
  
  private void listaInventario(String filtrar,String filter) {
        List<Inventario> lista;
        try {
            lista = inventariocontroler.InventarioFiltrar(filtrar,filter);
            verInventario(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    private void verInventario(List<Inventario> lista) {
       
        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        tabla.setRowCount(0);
        
        for (Inventario inv : lista) {
      
            Object[] fila = {inv.getIdInventario(),inv.getEncargado(), inv.getFechRea(), inv.getFechReg(),inv.getEstado(), inv.getObser()};
            tabla.addRow(fila);

        }
    }
  
    
  

}
