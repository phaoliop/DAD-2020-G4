/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controller.DetalleProformaController;
import controller.PedidoController;
import controller.RegistroVentaController;
import controller.TipoCambioController;
import entity.DetalleProforma;
import entity.Pedido;
import entity.RegistroVenta;
import entity.TipoCambio;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.Format;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ARCRODINPC-05
 */
public class RegistroVentas extends javax.swing.JInternalFrame {

    /**
     * Creates new form RegistroPagos
     */
    int idRegistroVenta;
    static int idRegistroVentaRegistroStatic;
    static int idPedido;
    int idProforma;
    String detraccionCombo;
    String monedaCombo;
    String tipoCombo;
    String comprobanteCombo;
    
    String estadoRV="EN PROCESO";
    String obsRV="";
    
    float totalDolares;
    float totalSolesCalculo;
    float totalDetraccion;
    String tipoCambioVenta;
    
    boolean mensaje= true;
    boolean mensajeventa=true;
    
    DecimalFormatSymbols separadoresPersonalizados = new DecimalFormatSymbols();
    
    public RegistroVentas() throws ParseException {
        initComponents();
        habilitarInicio();
        txtCondicionSoles.setEnabled(false);
        labelSimboloSoles.setText("");
        txtAnioPedido.setText(anioActual());
        txtFechaRegistro.setText(fechaActual());
        jDateChooserFechaAprobacion.setCalendar(convertirFechaDate(fechaActual()));
        jDateChooserFechaEmision.setCalendar(convertirFechaDate(fechaActual()));
        jDateChooserFechaVencimiento.setCalendar(convertirFechaDate(fechaActual()));
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtAnioPedido = new javax.swing.JTextField();
        txtNumpedidoBuscar = new javax.swing.JTextField();
        buttonBuscarPedido = new javax.swing.JButton();
        buttonNumPedido = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtFechaRegistro = new javax.swing.JTextField();
        txtRazonSocial = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtRuc = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtContacto = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtNumCotizacion = new javax.swing.JTextField();
        txtNumPedido = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jDateChooserFechaVencimiento = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        txtTipoCambio = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jDateChooserFechaAprobacion = new com.toedter.calendar.JDateChooser();
        jLabel17 = new javax.swing.JLabel();
        jDateChooserFechaEmision = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        txtMontoTotal = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        comboBoxDetraccion = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        txtDetraccion = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtFormaPago = new javax.swing.JTextField();
        comboBoxComprobante = new javax.swing.JComboBox<>();
        txtSerieFactura = new javax.swing.JTextField();
        txtNumeroFactura = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        labelSubtotal = new javax.swing.JLabel();
        labelIgv = new javax.swing.JLabel();
        labelTotal = new javax.swing.JLabel();
        txtGuiaRemision = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        buttonNuevo = new javax.swing.JButton();
        buttonRegistrar = new javax.swing.JButton();
        buttonModificar = new javax.swing.JButton();
        buttonGuardar = new javax.swing.JButton();
        buttonEliminar = new javax.swing.JButton();
        comboBoxMoneda = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        txtSerieFacturaBuscar = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        txtNumFacturaBuscar = new javax.swing.JTextField();
        buttonBuscarVenta = new javax.swing.JButton();
        txtCondicionSoles = new javax.swing.JTextField();
        buttonLimpiar = new javax.swing.JButton();
        labelSimboloSoles = new javax.swing.JLabel();
        comboBoxTipo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        buttonRegistrarPago = new javax.swing.JButton();
        buttonCerrar = new javax.swing.JButton();
        txtNumReferencial = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Registro de Ventas");
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                formAncestorRemoved(evt);
            }
        });

        jLabel1.setText("Año:");

        txtAnioPedido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtNumpedidoBuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        buttonBuscarPedido.setText("Buscar");
        buttonBuscarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarPedidoActionPerformed(evt);
            }
        });

        buttonNumPedido.setText("N° Pedido");
        buttonNumPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNumPedidoActionPerformed(evt);
            }
        });

        jLabel4.setText("Fecha de Registro:");

        txtFechaRegistro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel6.setText("R.U.C.:");

        jLabel7.setText("Contacto:");

        jLabel8.setText("N° Cotización:");

        jLabel10.setText("Guia Remisión:");

        jLabel11.setText("Tipo Comprobante:");

        jLabel23.setText("Razón Social:");

        jLabel24.setText("Forma de Pago:");

        jLabel27.setText("T.C.Venta:");

        jLabel12.setText("Serie Comprobante:");

        jLabel13.setText("Número Comprobante:");

        jLabel15.setText("Fecha Vencimiento:");

        jDateChooserFechaVencimiento.setDateFormatString("yyyy-MM-dd");

        jLabel16.setText("Moneda:");

        jLabel5.setText("Fecha Aprobación:");

        jDateChooserFechaAprobacion.setDateFormatString("yyyy-MM-dd");

        jLabel17.setText("Fecha Emisión:");

        jDateChooserFechaEmision.setDateFormatString("yyyy-MM-dd");

        jLabel14.setText("Monto Facturado:");

        jLabel18.setText("Detracción:");

        comboBoxDetraccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "APLICA", "NO APLICA" }));
        comboBoxDetraccion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxDetraccionItemStateChanged(evt);
            }
        });

        jLabel19.setText("Monto Detracción:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idDetCot", "Item", "Cant.", "Descripción", "Valor Unit.", "Precio Unit.", "Importe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(45);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(45);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(470);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(120);
        }

        comboBoxComprobante.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "FACTURA", "BOLETA", "RECIBO", "COTIZACION" }));
        comboBoxComprobante.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxComprobanteItemStateChanged(evt);
            }
        });

        jLabel21.setText("Sub-Total:");

        jLabel22.setText("I.G.V.(18%):");

        jLabel25.setText("Total:");

        labelSubtotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelSubtotal.setText("000000.00");

        labelIgv.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelIgv.setText("000000.00");

        labelTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelTotal.setText("000000.00");

        jLabel31.setText("N° Pedido:");

        buttonNuevo.setText("Nuevo");
        buttonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNuevoActionPerformed(evt);
            }
        });

        buttonRegistrar.setText("Registrar");
        buttonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegistrarActionPerformed(evt);
            }
        });

        buttonModificar.setText("Modificar");
        buttonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarActionPerformed(evt);
            }
        });

        buttonGuardar.setText("Guardar");
        buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGuardarActionPerformed(evt);
            }
        });

        buttonEliminar.setText("Eliminar");
        buttonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminarActionPerformed(evt);
            }
        });

        comboBoxMoneda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "DOLARES AMERICANOS", "SOLES" }));
        comboBoxMoneda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxMonedaItemStateChanged(evt);
            }
        });

        jLabel9.setText("en Soles ");

        jLabel32.setText("Serie Comprobante:");

        jLabel33.setText("Número Comprobante:");

        buttonBuscarVenta.setText("Buscar");
        buttonBuscarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarVentaActionPerformed(evt);
            }
        });

        buttonLimpiar.setText("Limpiar");
        buttonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLimpiarActionPerformed(evt);
            }
        });

        labelSimboloSoles.setText("S/.");

        comboBoxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "PRODUCTO", "SERVICIO" }));
        comboBoxTipo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxTipoItemStateChanged(evt);
            }
        });

        jLabel2.setText("Tipo:");

        jLabel20.setText("N° Referencial:");

        buttonRegistrarPago.setText("Registrar Pago");
        buttonRegistrarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegistrarPagoActionPerformed(evt);
            }
        });

        buttonCerrar.setText("Cerrar");
        buttonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel25)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelIgv, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(262, 262, 262))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buttonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 945, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonRegistrarPago, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel23))
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtGuiaRemision, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtRuc, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtNumCotizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtNumPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(txtRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(comboBoxComprobante, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtSerieFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jDateChooserFechaEmision, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtTipoCambio, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(comboBoxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtNumeroFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNumReferencial, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel19))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                                        .addComponent(buttonNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jDateChooserFechaAprobacion, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jDateChooserFechaVencimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(comboBoxMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtMontoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labelSimboloSoles, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtCondicionSoles, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(comboBoxDetraccion, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtDetraccion, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel9)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(buttonEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(buttonModificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(buttonGuardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(buttonRegistrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAnioPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonNumPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumpedidoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(buttonBuscarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel32)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSerieFacturaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel33)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumFacturaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonBuscarVenta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonLimpiar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtAnioPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumpedidoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBuscarPedido)
                    .addComponent(buttonNumPedido)
                    .addComponent(jLabel4)
                    .addComponent(txtFechaRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(txtSerieFacturaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBuscarVenta)
                    .addComponent(jLabel33)
                    .addComponent(txtNumFacturaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonLimpiar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(txtFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxTipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(buttonNuevo))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooserFechaAprobacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtRuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)
                                .addComponent(jLabel5)
                                .addComponent(jLabel20)
                                .addComponent(txtNumReferencial, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7)
                                .addComponent(jLabel11)
                                .addComponent(comboBoxComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel15))
                            .addComponent(jDateChooserFechaVencimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(comboBoxMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel16))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(txtNumCotizacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel12)
                            .addComponent(txtSerieFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtNumPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel31))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(txtNumeroFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtMontoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(labelSimboloSoles)
                                .addComponent(txtCondicionSoles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDateChooserFechaEmision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel18)
                                        .addComponent(comboBoxDetraccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel19)
                                        .addComponent(txtDetraccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel9))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtTipoCambio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel27))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(txtGuiaRemision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonRegistrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonEliminar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonRegistrarPago))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelSubtotal)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(labelIgv))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonCerrar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelTotal)
                        .addComponent(jLabel25)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_formAncestorRemoved

    private void buttonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminarActionPerformed
        if (JOptionPane.showConfirmDialog(rootPane, "Se eliminará el registro, ¿desea continuar?",
                "Eliminar Registro", JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            procesar(3);
            try {
                limpiar();
            } catch (ParseException ex) {
                Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
            }
            habilitarEliminar();
        }
    }//GEN-LAST:event_buttonEliminarActionPerformed

    private void buttonNumPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNumPedidoActionPerformed
        PedidosAVentaFactura ped = new PedidosAVentaFactura();
        Principal.jDesktopPane1.add(ped);
        ped.toFront();
        ped.setVisible(true);
    }//GEN-LAST:event_buttonNumPedidoActionPerformed

    private void buttonBuscarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarPedidoActionPerformed

        try {
            consultarPedido(Integer.parseInt(txtNumpedidoBuscar.getText()), Integer.parseInt(txtAnioPedido.getText()));
        } catch (Exception ex) {
            Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            consultarPedidoParaRegistrar(idPedido);
        } catch (Exception ex) {
            Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonBuscarPedidoActionPerformed

    private void buttonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegistrarActionPerformed
        if (comboBoxComprobante.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Seleccionar el Tipo de Comprobante, REVISAR!!!");
        } else if ("".equals(txtSerieFactura.getText())) {
            JOptionPane.showMessageDialog(null, "La serie de Comprobante de Pago está vacío, REVISAR!!!");
        } else if ("".equals(txtNumeroFactura.getText())) {
            JOptionPane.showMessageDialog(null, "El número de Comprobante de Pago está vacío, REVISAR!!!");
        } else {
            try {
                consultarRegistroVentaComprobar(txtSerieFactura.getText(), txtNumeroFactura.getText());
            } catch (Exception ex) {
                Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (mensajeventa == false) {
                try {
                    consultarTipoCambio(convertirFechaString(jDateChooserFechaEmision.getDate()));
                } catch (Exception ex) {
                    Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
                }

                if (mensaje == true) {

                    comprobarYVerificarDetraccionTipoCambioADolaresYMontoFacturado();
                    procesar(1);
                    actualizarPedidoEstado();
                    try {
                        consultarRegistroVenta(txtSerieFactura.getText(), txtNumeroFactura.getText());
                    } catch (Exception ex) {
                        Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    habilitarRegistrar();

                } else if (mensaje == false) {

                    JOptionPane.showMessageDialog(null, "No existe tipo de cambio para la Fecha de Emisión, REVISAR!!!");

                }
            }else if(mensajeventa==true){
            
                JOptionPane.showMessageDialog(null, "Venta ya registrada, VERIFIQUE la serie y número de su comprobante!!");
            }
            
        }

    }//GEN-LAST:event_buttonRegistrarActionPerformed

    private void buttonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLimpiarActionPerformed
        try {
            limpiar();
            habilitarInicio();
        } catch (ParseException ex) {
            Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonLimpiarActionPerformed

    private void buttonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarActionPerformed
        
        habilitarModificar() ; 
    }//GEN-LAST:event_buttonModificarActionPerformed

    private void comboBoxMonedaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxMonedaItemStateChanged
        if (comboBoxMoneda.getSelectedIndex() != 0) {
            monedaCombo = comboBoxMoneda.getSelectedItem().toString();
            System.out.println(monedaCombo);
        } else {
        }
    }//GEN-LAST:event_comboBoxMonedaItemStateChanged

    private void comboBoxTipoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxTipoItemStateChanged
       if (comboBoxTipo.getSelectedIndex() != 0) {
            tipoCombo = comboBoxTipo.getSelectedItem().toString();
            System.out.println(tipoCombo);
        } else {
        }
    }//GEN-LAST:event_comboBoxTipoItemStateChanged

    private void comboBoxComprobanteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxComprobanteItemStateChanged
        if (comboBoxComprobante.getSelectedIndex() != 0) {
            comprobanteCombo = comboBoxComprobante.getSelectedItem().toString();
            System.out.println(comprobanteCombo);
        } else{
        }
    }//GEN-LAST:event_comboBoxComprobanteItemStateChanged

    private void comboBoxDetraccionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxDetraccionItemStateChanged
        if (comboBoxDetraccion.getSelectedIndex() != 0) {
            detraccionCombo = comboBoxDetraccion.getSelectedItem().toString();
            System.out.println(detraccionCombo);
        } else {
        }
    }//GEN-LAST:event_comboBoxDetraccionItemStateChanged

    private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGuardarActionPerformed
//        comprobarYVerificarDetraccionTipoCambioADolaresYMontoFacturado();
        procesar(2);
        habilitarGuardar();
    }//GEN-LAST:event_buttonGuardarActionPerformed

    private void buttonBuscarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarVentaActionPerformed
        try {
            consultarRegistroVenta(txtSerieFacturaBuscar.getText(), txtNumFacturaBuscar.getText());
            habilitarBuscar();
        } catch (Exception ex) {
            Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonBuscarVentaActionPerformed

    private void buttonRegistrarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegistrarPagoActionPerformed
        RegistrarPago rePa = null;
        RegistrarPago.idRegistroVentaPagoStatic = idRegistroVentaRegistroStatic;
        try {
            rePa = new RegistrarPago();
        } catch (Exception ex) {
            Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
        Principal.jDesktopPane1.add(rePa);
        rePa.toFront();
        rePa.setVisible(true);
    }//GEN-LAST:event_buttonRegistrarPagoActionPerformed

    private void buttonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNuevoActionPerformed
        try {
            limpiarNuevo();
        } catch (ParseException ex) {
            Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
        habilitarNuevo();       
    }//GEN-LAST:event_buttonNuevoActionPerformed

    private void buttonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_buttonCerrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBuscarPedido;
    private javax.swing.JButton buttonBuscarVenta;
    private javax.swing.JButton buttonCerrar;
    private javax.swing.JButton buttonEliminar;
    private javax.swing.JButton buttonGuardar;
    private javax.swing.JButton buttonLimpiar;
    private javax.swing.JButton buttonModificar;
    private javax.swing.JButton buttonNuevo;
    private javax.swing.JButton buttonNumPedido;
    private javax.swing.JButton buttonRegistrar;
    private javax.swing.JButton buttonRegistrarPago;
    private javax.swing.JComboBox<String> comboBoxComprobante;
    private javax.swing.JComboBox<String> comboBoxDetraccion;
    private javax.swing.JComboBox<String> comboBoxMoneda;
    private javax.swing.JComboBox<String> comboBoxTipo;
    private com.toedter.calendar.JDateChooser jDateChooserFechaAprobacion;
    private com.toedter.calendar.JDateChooser jDateChooserFechaEmision;
    private com.toedter.calendar.JDateChooser jDateChooserFechaVencimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelIgv;
    private javax.swing.JLabel labelSimboloSoles;
    private javax.swing.JLabel labelSubtotal;
    private javax.swing.JLabel labelTotal;
    public static javax.swing.JTextField txtAnioPedido;
    private javax.swing.JTextField txtCondicionSoles;
    private javax.swing.JTextField txtContacto;
    private javax.swing.JTextField txtDetraccion;
    private javax.swing.JTextField txtFechaRegistro;
    private javax.swing.JTextField txtFormaPago;
    private javax.swing.JTextField txtGuiaRemision;
    private javax.swing.JTextField txtMontoTotal;
    private javax.swing.JTextField txtNumCotizacion;
    public static javax.swing.JTextField txtNumFacturaBuscar;
    private javax.swing.JTextField txtNumPedido;
    private javax.swing.JLabel txtNumReferencial;
    private javax.swing.JTextField txtNumeroFactura;
    public static javax.swing.JTextField txtNumpedidoBuscar;
    private javax.swing.JTextField txtRazonSocial;
    private javax.swing.JTextField txtRuc;
    private javax.swing.JTextField txtSerieFactura;
    public static javax.swing.JTextField txtSerieFacturaBuscar;
    private javax.swing.JTextField txtTipoCambio;
    // End of variables declaration//GEN-END:variables

RegistroVentaController registroventacontroler= new RegistroVentaController();
RegistroVenta registroventa;

PedidoController pedidocontroler= new PedidoController();
Pedido pedido;

DetalleProformaController detalleproformacontroler= new DetalleProformaController();
DetalleProforma detalleproforma;

TipoCambioController tipocambiocontroler= new TipoCambioController();
TipoCambio tipocambio;


//----------------------------------------- Procesar ---------------------------------------------

    void procesar(int op) {
        registroventa = leerDatos();
        try {
                 String msg = registroventacontroler.RegistroVentaProcesar(registroventa, op);
            JOptionPane.showMessageDialog(null, msg);
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("Error" + e.getMessage());
        }
    } 

    
    RegistroVenta leerDatos() {
        RegistroVenta reve = new RegistroVenta();
        
        reve.setIdRegistroVenta(idRegistroVenta);
        reve.setFechaRegistro(txtFechaRegistro.getText());
        reve.setIdPedido(idPedido);
        reve.setGuia(txtGuiaRemision.getText());
        reve.setTipoComprobante(comprobanteCombo);
        reve.setSerie(txtSerieFactura.getText());
        reve.setNumero(txtNumeroFactura.getText());
        reve.setFechaEmision(convertirFechaString(jDateChooserFechaEmision.getDate()));
        reve.setFechaAprobacion(convertirFechaString(jDateChooserFechaAprobacion.getDate()));
        reve.setFechaVencimiento(convertirFechaString(jDateChooserFechaVencimiento.getDate()));
        reve.setTipo(tipoCombo);
        reve.setMoneda(monedaCombo);
        reve.setMontoFacturado(txtMontoTotal.getText());
        reve.setDetraccion(detraccionCombo);
        reve.setEstado(estadoRV);
        reve.setObservacion(obsRV);
        
        return reve;
    }
    
//---------------------------- Buscar Registro de Ventas ----------------------------------------
    
    private void consultarRegistroVenta(String ser, String num) throws Exception {
        registroventa = registroventacontroler.RegistroVentaBuscarPorFactura(ser, num);
        if (registroventa != null) {
            
            idRegistroVenta=registroventa.getIdRegistroVenta();
            idRegistroVentaRegistroStatic=registroventa.getIdRegistroVenta();
            txtSerieFacturaBuscar.setText(registroventa.getSerie());
            txtNumFacturaBuscar.setText(registroventa.getNumero());
            txtFechaRegistro.setText(registroventa.getFechaRegistro());
            idPedido=registroventa.getIdPedido();
            txtGuiaRemision.setText(registroventa.getGuia());
            consultarPedido(idPedido);
                       
            comprobanteCombo = registroventa.getTipoComprobante();
            String testValue = comprobanteCombo;
            for (int i = 0; i < comboBoxComprobante.getModel().getSize(); i++) {
                if (comboBoxComprobante.getItemAt(i).equals(testValue)) {
                    System.out.println(i);
                    comboBoxComprobante.setSelectedIndex(i);
                    break;
                }
            }
            
            txtSerieFactura.setText(registroventa.getSerie());
            txtNumeroFactura.setText(registroventa.getNumero());
            
            jDateChooserFechaEmision.setCalendar(convertirFechaDate(registroventa.getFechaEmision()));
            consultarTipoCambio(registroventa.getFechaEmision());
            jDateChooserFechaAprobacion.setCalendar(convertirFechaDate(registroventa.getFechaAprobacion()));
            jDateChooserFechaVencimiento.setCalendar(convertirFechaDate(registroventa.getFechaVencimiento()));
             
            tipoCombo = registroventa.getTipo();
            String testValue1 = tipoCombo;
            for (int i = 0; i < comboBoxTipo.getModel().getSize(); i++) {
                if (comboBoxTipo.getItemAt(i).equals(testValue1)) {
                    System.out.println(i);
                    comboBoxTipo.setSelectedIndex(i);
                    break;
                }
            }
            
            monedaCombo=registroventa.getMoneda();
             String testValue2 = monedaCombo;
            for (int i = 0; i < comboBoxMoneda.getModel().getSize(); i++) {
                if (comboBoxMoneda.getItemAt(i).equals(testValue2)) {
                    System.out.println(i);
                    comboBoxMoneda.setSelectedIndex(i);
                    break;
                }
            }
            
            txtMontoTotal.setText(registroventa.getMontoFacturado());
            
            detraccionCombo=registroventa.getDetraccion();
             String testValue3 = detraccionCombo;
            for (int i = 0; i < comboBoxDetraccion.getModel().getSize(); i++) {
                if (comboBoxDetraccion.getItemAt(i).equals(testValue3)) {
                    System.out.println(i);
                    comboBoxDetraccion.setSelectedIndex(i);
                    break;
                }
            }
            
            calcularMontoDetraccionYMontoSoles();
            
            estadoRV=registroventa.getEstado();
            obsRV=registroventa.getObservacion();
       
          
        } else {
            JOptionPane.showMessageDialog(null, "Venta no registrado");
            System.out.println("Venta no registrada");
        }
    }
    
 private void consultarRegistroVentaComprobar(String ser, String num) throws Exception {
        registroventa = registroventacontroler.RegistroVentaBuscarPorFactura(ser, num);
        if (registroventa != null) {
            mensajeventa=true;
        } else {
            mensajeventa=false;
            System.out.println("Venta no registrada");
        }
    }
    
//------------------------- Buscar desde Pedido Para Venta ----------------------------------------

private void consultarPedido(int nP) throws Exception {
        pedido = pedidocontroler.PedidoParaVenta(nP);
        if (pedido != null) {
                       
            txtRazonSocial.setText(pedido.getRazSocial());
            txtRuc.setText(pedido.getRuc());
            txtContacto.setText(pedido.getContacto());
            txtNumPedido.setText(String.format("%06d",pedido.getNumPedido()));
            idProforma=pedido.getIdProforma();
            listaDetalleProforma(idProforma);
            consultarCalculoProforma(idProforma);
            txtNumCotizacion.setText(pedido.getCodCotiz());
            txtNumReferencial.setText(pedido.getNumReferencial());
            txtFormaPago.setText(pedido.getFormPago());
            
          
        } else {
            JOptionPane.showMessageDialog(null, "Pedido no registrado");
           
            System.out.println("Pedido no registrado");
        }
    }

    private void consultarPedidoParaRegistrar(int nP) throws Exception {
        pedido = pedidocontroler.PedidoParaVenta(nP);
        if (pedido != null) {
            
            txtRazonSocial.setText(pedido.getRazSocial());
            txtRuc.setText(pedido.getRuc());
            txtContacto.setText(pedido.getContacto());
            txtNumPedido.setText(String.format("%06d",pedido.getNumPedido()));
            idProforma=pedido.getIdProforma();
            listaDetalleProforma(idProforma);
            consultarCalculoProforma(idProforma);
            txtNumCotizacion.setText(pedido.getCodCotiz());
            txtGuiaRemision.setText(pedido.getGuia());
            txtNumReferencial.setText(pedido.getNumReferencial());
            
            tipoCombo = pedido.getTipo();
            String testValue1 = tipoCombo;
            for (int i = 0; i < comboBoxTipo.getModel().getSize(); i++) {
                if (comboBoxTipo.getItemAt(i).equals(testValue1)) {
                    System.out.println(i);
                    comboBoxTipo.setSelectedIndex(i);
                    break;
                }
            }
            
            monedaCombo=pedido.getMoneda();
             String testValue = monedaCombo;
            for (int i = 0; i < comboBoxMoneda.getModel().getSize(); i++) {
                if (comboBoxMoneda.getItemAt(i).equals(testValue)) {
                    System.out.println(i);
                    comboBoxMoneda.setSelectedIndex(i);
                    break;
                }
            }
            txtFormaPago.setText(pedido.getFormPago());
            txtMontoTotal.setText(pedido.getMontoFact());
            
          
        } else {
            JOptionPane.showMessageDialog(null, "Pedido no registrado");
           
            System.out.println("Pedido no registrado");
        }
    }

    private void consultarPedido(int numeroPedido, int anio) throws Exception {
        pedido = pedidocontroler.PedidoBuscar(numeroPedido, anio);
        
        if (pedido != null) {
            
            idPedido=pedido.getIdPedido();
            idProforma=pedido.getIdProforma();
            
          
        } else {
            JOptionPane.showMessageDialog(null, "Pedido no registrado");
           
            System.out.println("Pedido no registrado");
        }
    }
        
    private void consultarIdProformaDePedido(int ij) throws Exception {
        pedido = pedidocontroler.PedidoBuscar(ij);
        if (pedido != null) {
            idProforma = pedido.getIdProforma();
            System.out.println("idProforma segun num pedido es:" + idProforma);

        } else {

            JOptionPane.showMessageDialog(null, "Pedido no registrado");
            System.out.println("Pedido no registrado");
        }
    }
    
 //---------------------------- Actualizar Estado de Pedido --------------------------
    
    void actualizarPedidoEstado() {
        pedido = leerDatosPedidoEstado();
        try {
            System.out.println("11111111111");
            String msg = pedidocontroler.PedidoActualizarEstado(pedido);
            JOptionPane.showMessageDialog(null, "Pedido Finalizado");
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("Error" + e.getMessage());
        }
    }
   
    Pedido leerDatosPedidoEstado() {
        Pedido ped = new Pedido();

        ped.setEstado("FINALIZADO");
        ped.setIdPedido(idPedido);

        return ped;
    }

 // ------------------------------------ TABLA ---------------------------------------
    void listaDetalleProforma(int idpro) {
        List<DetalleProforma> lista;
        try {
            lista = detalleproformacontroler.DetalleProformaFiltrar(idpro);
            verDetalleProforma(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    private void verDetalleProforma(List<DetalleProforma> lista) {
        String it, vu, f;
        float uv;
        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        tabla.setRowCount(0);
        for (DetalleProforma detProf : lista) {
            if (!"".equals(detProf.getPrecioUnitario())) {
                it = detProf.getImporte();
            } else {
                it = "";
            }
            if (!"".equals(detProf.getPrecioUnitario())) {
                f = detProf.getItem1();
            } else {
                f = "";
            }

            Object[] fila = {detProf.getIdDetalleProforma(), detProf.getItem(), detProf.getCantidad(), detProf.getDescripcion(), detProf.getPrecioUnitario(), f, it};
            tabla.addRow(fila);
        }
    }
    
    void consultarCalculoProforma(int iddp) throws Exception {
        detalleproforma =detalleproformacontroler.DetalleProformaBuscar1(iddp) ;

        if (detalleproforma != null) {
           
            labelIgv.setText(detalleproforma.getIgv());
            labelSubtotal.setText(detalleproforma.getSubtotal());
            labelTotal.setText(detalleproforma.getTotal());
        } else {
            System.out.println("Error");
        }
    }
    
    
//--------------------------- Consultar Tipo Cambio  -------------------------------

    void consultarTipoCambio(String f) throws Exception {
        tipocambio =tipocambiocontroler.TipoCambioBuscarCambio(f) ;

        if (tipocambio != null) {
            mensaje=true;
            tipoCambioVenta=Float.toString(tipocambio.getPrecioVenta());
            txtTipoCambio.setText(Float.toString(tipocambio.getPrecioVenta()));
        } else {
            mensaje=false;
//            JOptionPane.showMessageDialog(null, "tipo cambio no registradas");
            System.out.println("Error");
        }
    }

//--------------------------------- Fecha y año ---------------------------------------------
    public String fechaActual() {
        Date fecha = new Date();

        SimpleDateFormat formatofecha = new SimpleDateFormat("yyyy-MM-dd");
        return formatofecha.format(fecha);
    }
    
    public String anioActual() {
        Date fecha = new Date();

        SimpleDateFormat formatofecha = new SimpleDateFormat("yyyy");
        return formatofecha.format(fecha);
    }

    
    Calendar convertirFechaDate(String ah) throws ParseException{
   
       Calendar fecha = Calendar.getInstance();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        Date fechaDate = null;

        fechaDate=formato.parse(ah);

        fecha.setTime(fechaDate);
        
        return fecha;
    }
    
    
    String convertirFechaString(Date fech) {

        Format formatter = new SimpleDateFormat("yyyy-MM-dd ");

        return formatter.format(fech);

    }

// ------------------  idPedido y numPedido  desde  VentaFactura -----------------------------
static void numPedidoVentaFactura() {
        PedidosAVentaFactura.numeroPedido = Integer.parseInt(PedidosAVentaFactura.txtNumPedido.getText());
        idPedido = PedidosAVentaFactura.idPedido;
        txtNumpedidoBuscar.setText(String.format("%06d", PedidosAVentaFactura.numeroPedido));
        System.out.println("idPedido:" + idPedido);
    }

//-------------------- De Pedidos Vista ------------------------------------
static void numPedidoYAnio(){
       txtNumpedidoBuscar.setText(String.format("%06d",Integer.parseInt(PedidosVista.numero)));
       txtAnioPedido.setText(PedidosVista.anioPe);
}

static void numPedidoPedidos(){
       txtNumpedidoBuscar.setText(String.format("%06d",Pedidos.numPedParaDetalle));
       txtAnioPedido.setText(Integer.toString(Pedidos.anioParaDetalleAPedido));
}


//  ------------------------------- Consulta Tipo de cambio y verifica si esta registrado
//                                   cambia dolares a soles
//                                   verifica si es servicio o producto 
//                                   y segun eso evalua si aplica o no detraccion
//                                   y muestra el monto de detraccion segun sea el caso ---------------
                                   
    void comprobarYVerificarDetraccionTipoCambioADolaresYMontoFacturado(){
        separadoresPersonalizados.setDecimalSeparator('.');
        DecimalFormat df = new DecimalFormat("0.000", separadoresPersonalizados);

        try {
            consultarTipoCambio(convertirFechaString(jDateChooserFechaEmision.getDate()));
        } catch (Exception ex) {
            Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (mensaje == true) {

            if (comboBoxMoneda.getSelectedIndex() == 1) {

                try {
                    consultarTipoCambio(convertirFechaString(jDateChooserFechaEmision.getDate()));
                } catch (Exception ex) {
                    Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
                }
                txtCondicionSoles.setEnabled(true);
                labelSimboloSoles.setText("S/.");
                totalDolares = Float.parseFloat(txtMontoTotal.getText());
                totalSolesCalculo = totalDolares * Float.parseFloat(tipoCambioVenta);
                txtCondicionSoles.setText(df.format(totalSolesCalculo));

                if (comboBoxTipo.getSelectedIndex() == 2) {

                    if (Float.parseFloat(txtCondicionSoles.getText()) > 700) {
                        comboBoxDetraccion.setSelectedIndex(1);
                        totalDetraccion = (float) (Float.parseFloat(txtCondicionSoles.getText()) * 0.12);
                        txtDetraccion.setText(df.format(totalDetraccion));
                    } else if (Float.parseFloat(txtCondicionSoles.getText()) <= 700) {
                        comboBoxDetraccion.setSelectedIndex(2);
                        txtDetraccion.setText("");
                    }

                } else if (comboBoxTipo.getSelectedIndex() == 1) {
                    comboBoxDetraccion.setSelectedIndex(2);
                    txtDetraccion.setText("");
                }

            } else if (comboBoxMoneda.getSelectedIndex() == 2) {
                try {
                    consultarTipoCambio(convertirFechaString(jDateChooserFechaEmision.getDate()));
                } catch (Exception ex) {
                    Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
                }
                txtCondicionSoles.setEnabled(false);
                txtCondicionSoles.setText("");
                labelSimboloSoles.setText("");
                totalSolesCalculo = Float.parseFloat(txtMontoTotal.getText());

                if (comboBoxTipo.getSelectedIndex() == 2) {

                    if (totalSolesCalculo > 700) {
                        comboBoxDetraccion.setSelectedIndex(1);
                        totalDetraccion = (float) (totalSolesCalculo * 0.12);
                        txtDetraccion.setText(df.format(totalDetraccion));
                    } else if (totalSolesCalculo <= 700) {
                        comboBoxDetraccion.setSelectedIndex(2);
                        txtDetraccion.setText("");
                    }
                } else if (comboBoxTipo.getSelectedIndex() == 1) {
                    comboBoxDetraccion.setSelectedIndex(2);
                    txtDetraccion.setText("");
                }
            }

        } else if (mensaje == false) {
            JOptionPane.showMessageDialog(null, "No existe tipo de cambio para la Fecha de Emisión, REVISAR!!!");
        }
    }
    
    
//    ----------------------- Muestra el monto en soles si en caso fuese dolares 
//                            y calcula el valor de detraccion segun el monto facturado  --------------------------

    void calcularMontoDetraccionYMontoSoles(){
       separadoresPersonalizados.setDecimalSeparator('.');
       DecimalFormat df = new DecimalFormat("0.000", separadoresPersonalizados);

        try {
            consultarTipoCambio(convertirFechaString(jDateChooserFechaEmision.getDate()));
        } catch (Exception ex) {
            Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
        

        if (comboBoxMoneda.getSelectedIndex() == 1) {

             try {
                consultarTipoCambio(convertirFechaString(jDateChooserFechaEmision.getDate()));
            } catch (Exception ex) {
                Logger.getLogger(RegistroVentas.class.getName()).log(Level.SEVERE, null, ex);
            }
            txtCondicionSoles.setEnabled(true);
            labelSimboloSoles.setText("S/.");
            totalDolares = Float.parseFloat(txtMontoTotal.getText());
            totalSolesCalculo = totalDolares * Float.parseFloat(tipoCambioVenta);
            txtCondicionSoles.setText(df.format(totalSolesCalculo));

            if (comboBoxTipo.getSelectedIndex() == 2) {

                if (comboBoxDetraccion.getSelectedIndex() == 1) {

                    totalDetraccion = (float) (Float.parseFloat(txtCondicionSoles.getText()) * 0.12);
                    txtDetraccion.setText(df.format(totalDetraccion));

                } else if (comboBoxDetraccion.getSelectedIndex() == 2) {

                    txtDetraccion.setText("");

                }

            } else if (comboBoxTipo.getSelectedIndex() == 1) {
                txtDetraccion.setText("");
            }

        } else if (comboBoxMoneda.getSelectedIndex() == 2) {

            txtCondicionSoles.setEnabled(false);
            txtCondicionSoles.setText("");
            labelSimboloSoles.setText("");
            totalSolesCalculo = Float.parseFloat(txtMontoTotal.getText());

            if (comboBoxTipo.getSelectedIndex() == 2) {

                if (comboBoxDetraccion.getSelectedIndex() == 1) {

                    totalDetraccion = (float) (totalSolesCalculo * 0.12);
                    txtDetraccion.setText(df.format(totalDetraccion));

                } else if (comboBoxDetraccion.getSelectedIndex() == 2) {

                    txtDetraccion.setText("");

                }
            } else if (comboBoxTipo.getSelectedIndex() == 1) {
                txtDetraccion.setText("");
            }
        }
        
    }
    
    //------------------------------- Limpiar ----------------------------------------------

    void limpiar() throws ParseException {
        
        txtAnioPedido.setText(anioActual());
        txtNumpedidoBuscar.setText("");
        txtSerieFacturaBuscar.setText("");
        txtNumFacturaBuscar.setText("");
        txtFechaRegistro.setText(fechaActual());
        txtRazonSocial.setText("");
        txtRuc.setText("");
        txtContacto.setText("");
        txtNumCotizacion.setText("");
        txtNumPedido.setText("");
        txtGuiaRemision.setText("");
        comboBoxTipo.setSelectedIndex(0);
        txtNumReferencial.setText("");
        comboBoxComprobante.setSelectedIndex(0);
        txtSerieFactura.setText("");
        txtNumeroFactura.setText("");
        jDateChooserFechaEmision.setCalendar(convertirFechaDate(fechaActual()));
        txtTipoCambio.setText("");
        txtFormaPago.setText("");
        jDateChooserFechaAprobacion.setCalendar(convertirFechaDate(fechaActual()));
        jDateChooserFechaVencimiento.setCalendar(convertirFechaDate(fechaActual()));
        comboBoxMoneda.setSelectedIndex(0);
        txtMontoTotal.setText("");
        labelSimboloSoles.setText("");
        txtCondicionSoles.setEnabled(false);
        txtCondicionSoles.setText("");
        comboBoxDetraccion.setSelectedIndex(0);
        txtDetraccion.setText("");
        labelIgv.setText("000000.00");
        labelSubtotal.setText("000000.00");
        labelTotal.setText("000000.00");
        idPedido = 0;
        idProforma = 0;
        listaDetalleProforma(idProforma);
        totalDolares = 0;
        totalSolesCalculo = 0;
        totalDetraccion = 0;
        tipoCambioVenta = "";

    }
    
    void limpiarNuevo() throws ParseException {
        
        txtSerieFacturaBuscar.setText("");
        txtNumFacturaBuscar.setText("");
        txtFechaRegistro.setText(fechaActual());
        txtRazonSocial.setText("");
        txtRuc.setText("");
        txtContacto.setText("");
        txtNumCotizacion.setText("");
        txtNumPedido.setText("");
        txtGuiaRemision.setText("");
        comboBoxTipo.setSelectedIndex(0);
        txtNumReferencial.setText("");
        comboBoxComprobante.setSelectedIndex(0);
        txtSerieFactura.setText("");
        txtNumeroFactura.setText("");
        jDateChooserFechaEmision.setCalendar(convertirFechaDate(fechaActual()));
        txtTipoCambio.setText("");
        txtFormaPago.setText("");
        jDateChooserFechaAprobacion.setCalendar(convertirFechaDate(fechaActual()));
        jDateChooserFechaVencimiento.setCalendar(convertirFechaDate(fechaActual()));
        comboBoxMoneda.setSelectedIndex(0);
        txtMontoTotal.setText("");
        labelSimboloSoles.setText("");
        txtCondicionSoles.setEnabled(false);
        txtCondicionSoles.setText("");
        comboBoxDetraccion.setSelectedIndex(0);
        txtDetraccion.setText("");
        labelIgv.setText("000000.00");
        labelSubtotal.setText("000000.00");
        labelTotal.setText("000000.00");
        idPedido = 0;
        idProforma = 0;
        listaDetalleProforma(idProforma);
        totalDolares = 0;
        totalSolesCalculo = 0;
        totalDetraccion = 0;
        tipoCambioVenta = "";

    }
    
//-----------------------------  serie y numero de Vista de Ventas ------------------------
    static void serieYNumeroDeVenta() {
        txtSerieFacturaBuscar.setText(RegistroVentasVista.serieStatic);
        txtNumFacturaBuscar.setText(RegistroVentasVista.numeroStatic);
    }
//-----------------------------  serie y numero de Cuentas por Cobrar ------------------------
    static void serieYNumeroDeVentaDeCuentasPorCobrar() {
        txtSerieFacturaBuscar.setText(CuentasPorCobrar_2.serieStaticCobro);
        txtNumFacturaBuscar.setText(CuentasPorCobrar_2.numeroStaticCobro);
    }
    
//------------------------- Habilitar ---------------------------------
    void habilitarInicio(){
        
        txtAnioPedido.setEnabled(false);
        txtNumpedidoBuscar.setEnabled(false);
        buttonNumPedido.setEnabled(false);
        buttonBuscarPedido.setEnabled(false);
        txtSerieFacturaBuscar.setEnabled(true);
        txtNumFacturaBuscar.setEnabled(true);
        txtFechaRegistro.setEnabled(false);
        txtRazonSocial.setEnabled(false);
        txtRuc.setEnabled(false);
        txtContacto.setEnabled(false);
        txtNumCotizacion.setEnabled(false);
        txtNumPedido.setEnabled(false);
        txtGuiaRemision.setEnabled(false);
        comboBoxTipo.setEnabled(false);
        txtNumReferencial.setEnabled(false);
        comboBoxComprobante.setEnabled(false);
        txtSerieFactura.setEnabled(false);
        txtNumeroFactura.setEnabled(false);
        jDateChooserFechaEmision.setEnabled(false);
        txtTipoCambio.setEnabled(false);
        txtFormaPago.setEnabled(false);
        jDateChooserFechaAprobacion.setEnabled(false);
        jDateChooserFechaVencimiento.setEnabled(false);
        comboBoxMoneda.setEnabled(false);
        txtMontoTotal.setEnabled(false);
        labelSimboloSoles.setEnabled(false);
        txtCondicionSoles.setEnabled(false);
        comboBoxDetraccion.setEnabled(false);
        txtDetraccion.setEnabled(false);

        buttonBuscarVenta.setEnabled(true);
        buttonNuevo.setEnabled(true);
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(false);
        buttonRegistrarPago.setEnabled(false);
    }
    
    void habilitarBuscar(){
        
        txtAnioPedido.setEnabled(false);
        txtNumpedidoBuscar.setEnabled(false);
        buttonNumPedido.setEnabled(false);
        buttonBuscarPedido.setEnabled(false);
        txtSerieFacturaBuscar.setEnabled(false);
        txtNumFacturaBuscar.setEnabled(false);
        txtFechaRegistro.setEnabled(false);
        txtRazonSocial.setEnabled(false);
        txtRuc.setEnabled(false);
        txtContacto.setEnabled(false);
        txtNumCotizacion.setEnabled(false);
        txtNumPedido.setEnabled(false);
        txtGuiaRemision.setEnabled(false);
        comboBoxTipo.setEnabled(false);
        txtNumReferencial.setEnabled(false);
        comboBoxComprobante.setEnabled(false);
        txtSerieFactura.setEnabled(false);
        txtNumeroFactura.setEnabled(false);
        jDateChooserFechaEmision.setEnabled(false);
        txtTipoCambio.setEnabled(false);
        txtFormaPago.setEnabled(false);
        jDateChooserFechaAprobacion.setEnabled(false);
        jDateChooserFechaVencimiento.setEnabled(false);
        comboBoxMoneda.setEnabled(false);
        txtMontoTotal.setEnabled(false);
        labelSimboloSoles.setEnabled(false);
        txtCondicionSoles.setEnabled(false);
        comboBoxDetraccion.setEnabled(false);
        txtDetraccion.setEnabled(false);

        buttonBuscarVenta.setEnabled(false);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(true);
        buttonRegistrarPago.setEnabled(true);
    
    }
    
    void habilitarNuevo(){
        
        txtAnioPedido.setEnabled(true);
        txtNumpedidoBuscar.setEnabled(true);
        buttonNumPedido.setEnabled(true);
        buttonBuscarPedido.setEnabled(true);
        txtSerieFacturaBuscar.setEnabled(false);
        txtNumFacturaBuscar.setEnabled(false);
        txtFechaRegistro.setEnabled(true);
        txtRazonSocial.setEnabled(true);
        txtRuc.setEnabled(true);
        txtContacto.setEnabled(true);
        txtNumCotizacion.setEnabled(true);
        txtNumPedido.setEnabled(true);
        txtGuiaRemision.setEnabled(true);
        comboBoxTipo.setEnabled(true);
        txtNumReferencial.setEnabled(true);
        comboBoxComprobante.setEnabled(true);
        txtSerieFactura.setEnabled(true);
        txtNumeroFactura.setEnabled(true);
        jDateChooserFechaEmision.setEnabled(true);
        txtTipoCambio.setEnabled(true);
        txtFormaPago.setEnabled(true);
        jDateChooserFechaAprobacion.setEnabled(true);
        jDateChooserFechaVencimiento.setEnabled(true);
        comboBoxMoneda.setEnabled(true);
        txtMontoTotal.setEnabled(true);
        labelSimboloSoles.setEnabled(true);
        txtCondicionSoles.setEnabled(true);
        comboBoxDetraccion.setEnabled(true);
        txtDetraccion.setEnabled(true);

        buttonBuscarVenta.setEnabled(false);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(true);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(false);
        buttonRegistrarPago.setEnabled(false);
    }
    
    void habilitarRegistrar(){
    
        txtAnioPedido.setEnabled(false);
        txtNumpedidoBuscar.setEnabled(false);
        buttonNumPedido.setEnabled(false);
        buttonBuscarPedido.setEnabled(false);
        txtSerieFacturaBuscar.setEnabled(false);
        txtNumFacturaBuscar.setEnabled(false);
        txtFechaRegistro.setEnabled(false);
        txtRazonSocial.setEnabled(false);
        txtRuc.setEnabled(false);
        txtContacto.setEnabled(false);
        txtNumCotizacion.setEnabled(false);
        txtNumPedido.setEnabled(false);
        txtGuiaRemision.setEnabled(false);
        comboBoxTipo.setEnabled(false);
        txtNumReferencial.setEnabled(false);
        comboBoxComprobante.setEnabled(false);
        txtSerieFactura.setEnabled(false);
        txtNumeroFactura.setEnabled(false);
        jDateChooserFechaEmision.setEnabled(false);
        txtTipoCambio.setEnabled(false);
        txtFormaPago.setEnabled(false);
        jDateChooserFechaAprobacion.setEnabled(false);
        jDateChooserFechaVencimiento.setEnabled(false);
        comboBoxMoneda.setEnabled(false);
        txtMontoTotal.setEnabled(false);
        labelSimboloSoles.setEnabled(false);
        txtCondicionSoles.setEnabled(false);
        comboBoxDetraccion.setEnabled(false);
        txtDetraccion.setEnabled(false);

        buttonBuscarVenta.setEnabled(false);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(true);
        buttonRegistrarPago.setEnabled(true);
    
    }
    
    void habilitarModificar(){
    
        txtAnioPedido.setEnabled(true);
        txtNumpedidoBuscar.setEnabled(true);
        buttonNumPedido.setEnabled(true);
        buttonBuscarPedido.setEnabled(true);
        txtSerieFacturaBuscar.setEnabled(false);
        txtNumFacturaBuscar.setEnabled(false);
        txtFechaRegistro.setEnabled(true);
        txtRazonSocial.setEnabled(true);
        txtRuc.setEnabled(true);
        txtContacto.setEnabled(true);
        txtNumCotizacion.setEnabled(true);
        txtNumPedido.setEnabled(true);
        txtGuiaRemision.setEnabled(true);
        comboBoxTipo.setEnabled(true);
        txtNumReferencial.setEnabled(true);
        comboBoxComprobante.setEnabled(true);
        txtSerieFactura.setEnabled(true);
        txtNumeroFactura.setEnabled(true);
        jDateChooserFechaEmision.setEnabled(true);
        txtTipoCambio.setEnabled(true);
        txtFormaPago.setEnabled(true);
        jDateChooserFechaAprobacion.setEnabled(true);
        jDateChooserFechaVencimiento.setEnabled(true);
        comboBoxMoneda.setEnabled(true);
        txtMontoTotal.setEnabled(true);
        labelSimboloSoles.setEnabled(true);
        txtCondicionSoles.setEnabled(true);
        comboBoxDetraccion.setEnabled(true);
        txtDetraccion.setEnabled(true);

        buttonBuscarVenta.setEnabled(false);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(true);
        buttonEliminar.setEnabled(false);
        buttonRegistrarPago.setEnabled(false);
    }
    
    void habilitarGuardar(){
    
        txtAnioPedido.setEnabled(false);
        txtNumpedidoBuscar.setEnabled(false);
        buttonNumPedido.setEnabled(false);
        buttonBuscarPedido.setEnabled(false);
        txtSerieFacturaBuscar.setEnabled(false);
        txtNumFacturaBuscar.setEnabled(false);
        txtFechaRegistro.setEnabled(false);
        txtRazonSocial.setEnabled(false);
        txtRuc.setEnabled(false);
        txtContacto.setEnabled(false);
        txtNumCotizacion.setEnabled(false);
        txtNumPedido.setEnabled(false);
        txtGuiaRemision.setEnabled(false);
        comboBoxTipo.setEnabled(false);
        txtNumReferencial.setEnabled(false);
        comboBoxComprobante.setEnabled(false);
        txtSerieFactura.setEnabled(false);
        txtNumeroFactura.setEnabled(false);
        jDateChooserFechaEmision.setEnabled(false);
        txtTipoCambio.setEnabled(false);
        txtFormaPago.setEnabled(false);
        jDateChooserFechaAprobacion.setEnabled(false);
        jDateChooserFechaVencimiento.setEnabled(false);
        comboBoxMoneda.setEnabled(false);
        txtMontoTotal.setEnabled(false);
        labelSimboloSoles.setEnabled(false);
        txtCondicionSoles.setEnabled(false);
        comboBoxDetraccion.setEnabled(false);
        txtDetraccion.setEnabled(false);

        buttonBuscarVenta.setEnabled(false);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(true);
        buttonRegistrarPago.setEnabled(true);
    }
    
    void habilitarEliminar(){
    
        txtAnioPedido.setEnabled(false);
        txtNumpedidoBuscar.setEnabled(false);
        buttonNumPedido.setEnabled(false);
        buttonBuscarPedido.setEnabled(false);
        txtSerieFacturaBuscar.setEnabled(true);
        txtNumFacturaBuscar.setEnabled(true);
        txtFechaRegistro.setEnabled(false);
        txtRazonSocial.setEnabled(false);
        txtRuc.setEnabled(false);
        txtContacto.setEnabled(false);
        txtNumCotizacion.setEnabled(false);
        txtNumPedido.setEnabled(false);
        txtGuiaRemision.setEnabled(false);
        comboBoxTipo.setEnabled(false);
        txtNumReferencial.setEnabled(false);
        comboBoxComprobante.setEnabled(false);
        txtSerieFactura.setEnabled(false);
        txtNumeroFactura.setEnabled(false);
        jDateChooserFechaEmision.setEnabled(false);
        txtTipoCambio.setEnabled(false);
        txtFormaPago.setEnabled(false);
        jDateChooserFechaAprobacion.setEnabled(false);
        jDateChooserFechaVencimiento.setEnabled(false);
        comboBoxMoneda.setEnabled(false);
        txtMontoTotal.setEnabled(false);
        labelSimboloSoles.setEnabled(false);
        txtCondicionSoles.setEnabled(false);
        comboBoxDetraccion.setEnabled(false);
        txtDetraccion.setEnabled(false);

        buttonBuscarVenta.setEnabled(true);
        buttonNuevo.setEnabled(true);
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(false);
        buttonRegistrarPago.setEnabled(false);
    
    }
    
}
