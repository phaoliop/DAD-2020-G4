/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controller.ClienteController;
import entity.Cliente;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ARCRODINPC-02
 */
public final class Clientes extends javax.swing.JInternalFrame {

    static String s;
    static int x;
    static String cliente;
    String ruc;

    ClienteController obj = new ClienteController();
    
    int cliUltimoId;
    int nuevoNumero;
    String numCeros;
    

    /**
     * Creates new form Clientesvista
     */
    public Clientes() {
        initComponents();
        habilitarInicio();
        Comborazonsocial.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent evt) {
                // aca falta validar que me ejecute el campo
                String cadenaEscrita = Comborazonsocial.getEditor().getItem().toString();
                if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                    try {
                        consultar(Comborazonsocial.getItemAt(0));
                    } catch (Exception ex) {
                        Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    Comborazonsocial.setSelectedIndex(0);
                    habilitarInicio();
                    if (comparar(cadenaEscrita)) {
                        try {
                            // compara si el texto escrito se ecuentra en la lista
                            // busca el texto escrito en la base de datos, solo pasa si es identico
                            consultar(cadenaEscrita);

                            s = labelIdCliente.getText();
                            x = Integer.parseInt(s);
                            
                        } catch (Exception ex) {
                            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
                        }
                     habilitarInicio();

                    } else {
                        try {
                            for (int i = 0; i < Comborazonsocial.getModel().getSize(); i++) {
                                if (Comborazonsocial.getItemAt(i).equals(cadenaEscrita)) {
                                    consultar(Comborazonsocial.getItemAt(i));
                                    Comborazonsocial.setSelectedIndex(i);
                                }
                            }
                          //  habilitarInicio();
                            habilitarBuscar();
                            s = labelIdCliente.getText();
                            x = Integer.parseInt(s);
                        } catch (Exception ex) {
                            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }

                if (evt.getKeyCode() >= 65 && evt.getKeyCode() <= 90 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105 || evt.getKeyCode() == 8) {
                    try {
                        Comborazonsocial.setModel(obj.ClienteListarCombo(cadenaEscrita));
                    } catch (Exception ex) {
                        Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (Comborazonsocial.getItemCount() > 0) {
                        Comborazonsocial.getEditor().setItem(cadenaEscrita);
                        Comborazonsocial.showPopup();
                    } else {
                        Comborazonsocial.addItem(cadenaEscrita);
                    }
                }
            }
        });

        habilitarInicio();
    }

    private boolean comparar(String cadena) {
        Object[] lista = Comborazonsocial.getComponents();
        boolean encontrado = false;
        for (Object object : lista) {
            if (cadena.equals(object)) {
                encontrado = true;
                break;
            }

        }
        return encontrado;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textRuc = new javax.swing.JTextField();
        buttonRegistrar = new javax.swing.JButton();
        buttonCerrar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        textCategoria = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        TextDireccion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaObservacion = new javax.swing.JTextArea();
        buttonEliminar = new javax.swing.JButton();
        buttonModificar = new javax.swing.JButton();
        buttonAgregarContacto = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        labelIdCliente = new javax.swing.JLabel();
        buttonGuardar = new javax.swing.JButton();
        buttonNuevo = new javax.swing.JButton();
        buttonLimpiar = new javax.swing.JButton();
        Comborazonsocial = new javax.swing.JComboBox<>();
        buttonAgregarDirec = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtCodigoCliente = new javax.swing.JTextField();

        jButton2.setText("jButton2");

        setClosable(true);
        setTitle("Clientes");

        jLabel1.setText("Razon Social: ");

        jLabel2.setText("R.U.C. :");

        buttonRegistrar.setText("Registrar");
        buttonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegistrarActionPerformed(evt);
            }
        });

        buttonCerrar.setText("Cerrar");
        buttonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCerrarActionPerformed(evt);
            }
        });

        jLabel4.setText("Categoria de Cliente:");

        textCategoria.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        textCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textCategoriaActionPerformed(evt);
            }
        });

        jLabel5.setText("Direccion: ");

        jLabel6.setText("Observacion: ");

        textAreaObservacion.setColumns(20);
        textAreaObservacion.setRows(5);
        jScrollPane1.setViewportView(textAreaObservacion);

        buttonEliminar.setText("Eliminar");
        buttonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminarActionPerformed(evt);
            }
        });

        buttonModificar.setText("Modificar");
        buttonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarActionPerformed(evt);
            }
        });

        buttonAgregarContacto.setText("Agregar Contacto");
        buttonAgregarContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAgregarContactoActionPerformed(evt);
            }
        });

        jLabel7.setText("N°:");

        labelIdCliente.setText("00000");

        buttonGuardar.setText("Guardar");
        buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGuardarActionPerformed(evt);
            }
        });

        buttonNuevo.setText("Nuevo");
        buttonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNuevoActionPerformed(evt);
            }
        });

        buttonLimpiar.setText("Limpiar");
        buttonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLimpiarActionPerformed(evt);
            }
        });

        Comborazonsocial.setEditable(true);

        buttonAgregarDirec.setText("Agregar Dir. Anexa");
        buttonAgregarDirec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAgregarDirecActionPerformed(evt);
            }
        });

        jLabel3.setText("Código de Cliente:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(23, 23, 23)
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(labelIdCliente))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jLabel2))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jLabel5)))
                                        .addGap(15, 15, 15))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(jLabel1)
                                        .addGap(17, 17, 17)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Comborazonsocial, 0, 520, Short.MAX_VALUE)
                                    .addComponent(textRuc, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TextDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(81, 81, 81)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(textCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(22, 22, 22))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 2, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(buttonRegistrar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonLimpiar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonNuevo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                    .addComponent(buttonModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(buttonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(buttonAgregarContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonAgregarDirec, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonCerrar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(labelIdCliente)
                        .addComponent(buttonLimpiar)
                        .addComponent(jLabel3)
                        .addComponent(txtCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Comborazonsocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonNuevo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textRuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(buttonRegistrar))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(TextDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonAgregarContacto)
                            .addComponent(buttonAgregarDirec))
                        .addGap(29, 29, 29))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonCerrar)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegistrarActionPerformed
        String texto = Comborazonsocial.getEditor().getItem().toString().trim();
        texto = texto.replaceAll(" ", "");

        if (texto.length() == 0) {
            JOptionPane.showMessageDialog(null, "Llenar Razón Social del Cliente");
            habilitarNuevo();
        } else {
            try {
                if (consultarTextoCliente(Comborazonsocial.getEditor().getItem().toString().trim())== true) {
                    JOptionPane.showMessageDialog(null, "Razón Social del Cliente YA EXISTE!! REVISAR");
                    habilitarNuevo();

                } else if (!"".equals(textRuc.getText()) && consultarRucCliente(textRuc.getText()) == true) {

                    JOptionPane.showMessageDialog(null, "R.U.C. del Cliente YA EXISTE!! REVISAR");
                    habilitarNuevo();
                } else {
                    generarCodigoCliente();
                    procesar1(1);
                    try {
                        consultar(Comborazonsocial.getEditor().getItem().toString().trim());
                        habilitarNuevo();
                    } catch (Exception ex) {
                        Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    s = labelIdCliente.getText();
                    x = Integer.parseInt(s);
                    habilitarRegistrar();
                }
            } catch (Exception ex) {
                Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_buttonRegistrarActionPerformed

    private void buttonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_buttonCerrarActionPerformed

    private void buttonAgregarContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAgregarContactoActionPerformed
        if (x != 0) {
            ContactosClientes conCliente = null;
            try {
                conCliente = new ContactosClientes();
            } catch (Exception ex) {
                Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
            }
            Principal.jDesktopPane1.add(conCliente);
            conCliente.toFront();
            conCliente.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Agregar Cliente");

        }
    }//GEN-LAST:event_buttonAgregarContactoActionPerformed

    private void buttonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNuevoActionPerformed
        limpiar();
        habilitarNuevo(); 
    }//GEN-LAST:event_buttonNuevoActionPerformed

    private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGuardarActionPerformed
       procesar(2);
       habilitarGuardar();
       try {
                consultar(Comborazonsocial.getEditor().getItem().toString());
            } catch (Exception ex) {
                Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
            }
            s = labelIdCliente.getText();
            x = Integer.parseInt(s);
    }//GEN-LAST:event_buttonGuardarActionPerformed

    private void buttonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminarActionPerformed
        procesar1(3);
        limpiar(); //limpia para buscar de nuevo 
        x = 0;
        s = Integer.toString(x);
        labelIdCliente.setText(s);
        habilitarEliminar();
    }//GEN-LAST:event_buttonEliminarActionPerformed

    private void buttonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarActionPerformed
        habilitarModificar(); 
    }//GEN-LAST:event_buttonModificarActionPerformed

    private void buttonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLimpiarActionPerformed
        limpiar(); //limpia para buscar de nuevo 
        x = 0;
        s = Integer.toString(x);
        labelIdCliente.setText(s);
        habilitarInicio();
    }//GEN-LAST:event_buttonLimpiarActionPerformed

    private void textCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textCategoriaActionPerformed

    private void buttonAgregarDirecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAgregarDirecActionPerformed
        if (x != 0) {
            DireccionesAnexasRegistrar direccionRegistar = null;
            try {
                direccionRegistar = new DireccionesAnexasRegistrar();
            } catch (Exception ex) {
                Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
            }
            Principal.jDesktopPane1.add(direccionRegistar);
            direccionRegistar.toFront();
            direccionRegistar.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Agregar Cliente");
        }
    }//GEN-LAST:event_buttonAgregarDirecActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JComboBox<String> Comborazonsocial;
    private javax.swing.JTextField TextDireccion;
    private javax.swing.JButton buttonAgregarContacto;
    private javax.swing.JButton buttonAgregarDirec;
    private javax.swing.JButton buttonCerrar;
    private javax.swing.JButton buttonEliminar;
    private javax.swing.JButton buttonGuardar;
    private javax.swing.JButton buttonLimpiar;
    private javax.swing.JButton buttonModificar;
    private javax.swing.JButton buttonNuevo;
    private javax.swing.JButton buttonRegistrar;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    public javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JLabel labelIdCliente;
    private javax.swing.JTextArea textAreaObservacion;
    private javax.swing.JTextField textCategoria;
    private javax.swing.JTextField textRuc;
    private javax.swing.JTextField txtCodigoCliente;
    // End of variables declaration//GEN-END:variables

    Cliente pro;
    Cliente pro2;

    private void procesar1(int op) {
        pro2 = leerDatos2();

        try {
            String msg = obj.ClienteProcesar(pro2, op);
            JOptionPane.showMessageDialog(null, msg);
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("Error" + e.getMessage());
        }

    }

    private void procesar(int op) {
        pro = leerDatos();

        try {

            String msg = obj.ClienteProcesar(pro, op);
            JOptionPane.showMessageDialog(null, msg);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("Error" + e.getMessage());
        }
    }

    private void consultar() throws Exception {
        pro = obj.ClienteBuscar(Comborazonsocial.getEditor().getItem().toString());
        if (pro != null) {

            labelIdCliente.setText(pro.getIdCliente() + "");
            // txtNombres.setText(pro.getNombres());
            Comborazonsocial.setSelectedItem(pro.getRazonSocial());
            // xxxx.setText(pro.getRazonSocial());
            txtCodigoCliente.setText(pro.getCodigoCliente());
            textRuc.setText(pro.getRuc());
            textCategoria.setText(pro.getTipo());
            TextDireccion.setText(pro.getDireccion());
            textAreaObservacion.setText(pro.getObservacion());
            

        } else {
            JOptionPane.showMessageDialog(null, "Cliente no registrado");
            //System.out.println("Error");
        }
    }

    private void consultar(String razonsocial) throws Exception {
        pro = obj.ClienteBuscar(razonsocial);
        if (pro != null) {

            labelIdCliente.setText(pro.getIdCliente()+ "");
            cliente=pro.getRazonSocial();
            txtCodigoCliente.setText(pro.getCodigoCliente());
            textRuc.setText(pro.getRuc());
            textCategoria.setText(pro.getTipo());
            TextDireccion.setText(pro.getDireccion());
            textAreaObservacion.setText(pro.getObservacion());

        } else {
            JOptionPane.showMessageDialog(null, "Cliente no registrado");
            //System.out.println("Error");
        }
    }
    
    private boolean consultarTextoCliente(String razonsocial) throws Exception {
        pro = obj.ClienteBuscar(razonsocial);
        if (pro != null) {
            return true;
            
        } else {
            System.out.println("no existe cliente");
            return false;
        }
    }
    
     private boolean consultarRucCliente(String rc) throws Exception {
        pro = obj.ClienteBuscarRuc(rc);
        if (pro!= null) {
            return true;
        } else {
            return false; 
        }
    }

    private Cliente leerDatos() {
        Cliente cli = new Cliente();

        cli.setIdCliente(Integer.parseInt(labelIdCliente.getText()));
        cli.setCodigoCliente(txtCodigoCliente.getText());
        cli.setRazonSocial(Comborazonsocial.getEditor().getItem().toString().trim());
        cli.setRuc(textRuc.getText());
        cli.setTipo(textCategoria.getText());
        cli.setDireccion(TextDireccion.getText());
        cli.setObservacion(textAreaObservacion.getText());

        return cli;
    }

    private Cliente leerDatos2() {
        Cliente cli = new Cliente();
        
        cli.setCodigoCliente(txtCodigoCliente.getText());
        cli.setRazonSocial(Comborazonsocial.getEditor().getItem().toString().trim());
        cli.setRuc(textRuc.getText().trim());
        cli.setTipo(textCategoria.getText());
        cli.setDireccion(TextDireccion.getText());
        cli.setObservacion(textAreaObservacion.getText());

        return cli;
    }

    public void limpiar() {
        labelIdCliente.setText("");
        Comborazonsocial.setSelectedItem("");
        // xxxx.setText("");
        textRuc.setText("");
        textCategoria.setText("");
        TextDireccion.setText("");
        textAreaObservacion.setText("");
        txtCodigoCliente.setText("");

    }

    public void habilitarInicio(){
        buttonAgregarContacto.setEnabled(false);
        buttonAgregarDirec.setEnabled(false);
        buttonLimpiar.setEnabled(true);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(false);
        buttonNuevo.setEnabled(true);
        buttonRegistrar.setEnabled(false);
        buttonEliminar.setEnabled(false);
        
        textCategoria.setEnabled(false);
        Comborazonsocial.setEnabled(true);
        txtCodigoCliente.setEnabled(false);
        textRuc.setEnabled(false);
        TextDireccion.setEnabled(false);
        textAreaObservacion.setEnabled(false);
    }
    
     public void habilitarBuscar(){
        buttonAgregarContacto.setEnabled(true);
        buttonAgregarDirec.setEnabled(true);
        buttonLimpiar.setEnabled(true);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonEliminar.setEnabled(true);
       

        textCategoria.setEnabled(false);
        Comborazonsocial.setEnabled(true);
        txtCodigoCliente.setEnabled(false);
        textRuc.setEnabled(false);
        TextDireccion.setEnabled(false);
        textAreaObservacion.setEnabled(false);
    }
     
     public void habilitarModificar(){
        buttonAgregarContacto.setEnabled(false);
        buttonAgregarDirec.setEnabled(false);
        buttonLimpiar.setEnabled(true);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(true);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonEliminar.setEnabled(false);
       
        textCategoria.setEnabled(true);
        Comborazonsocial.setEnabled(true);
        txtCodigoCliente.setEnabled(true);
        textRuc.setEnabled(true);
        TextDireccion.setEnabled(true);
        textAreaObservacion.setEnabled(true);
    }
     public void habilitarGuardar(){
        buttonAgregarContacto.setEnabled(true);
        buttonAgregarDirec.setEnabled(true);
        buttonLimpiar.setEnabled(true);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonEliminar.setEnabled(true);
       
        textCategoria.setEnabled(false);
        Comborazonsocial.setEnabled(true);
        txtCodigoCliente.setEnabled(false);
        textRuc.setEnabled(false);
        TextDireccion.setEnabled(false);
        textAreaObservacion.setEnabled(false);
    }
     public void habilitarEliminar(){
        buttonAgregarContacto.setEnabled(false);
        buttonAgregarDirec.setEnabled(false);
        buttonLimpiar.setEnabled(true);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(false);
        buttonNuevo.setEnabled(true);
        buttonRegistrar.setEnabled(false);
        buttonEliminar.setEnabled(false);
       
        textCategoria.setEnabled(false);
        Comborazonsocial.setEnabled(true);
        txtCodigoCliente.setEnabled(false);
        textRuc.setEnabled(false);
        TextDireccion.setEnabled(false);
        textAreaObservacion.setEnabled(false);
    }
     
     public void habilitarNuevo(){
        buttonAgregarContacto.setEnabled(false);
        buttonAgregarDirec.setEnabled(false);
        buttonLimpiar.setEnabled(true);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(false);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(true);
        buttonEliminar.setEnabled(false);
     
        textCategoria.setEnabled(true);
        Comborazonsocial.setEnabled(true);
        txtCodigoCliente.setEnabled(true);
        textRuc.setEnabled(true);
        TextDireccion.setEnabled(true);
        textAreaObservacion.setEnabled(true);
    }
     
    public void habilitarRegistrar(){
        buttonAgregarContacto.setEnabled(true);
        buttonAgregarDirec.setEnabled(true);
        buttonLimpiar.setEnabled(true);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonEliminar.setEnabled(true);
    
        textCategoria.setEnabled(false);
        Comborazonsocial.setEnabled(false);
        txtCodigoCliente.setEnabled(false);
        textRuc.setEnabled(false);
        TextDireccion.setEnabled(false);
        textAreaObservacion.setEnabled(false);
    }
    
    private void consultarUltimoId() throws Exception {
        pro = obj.ClienteUltimoId();
        if (pro != null) {
            cliUltimoId = pro.getIdCliente();
            System.out.println("ultimoId:" + cliUltimoId);
        }
    }

    public String anioActual() {
        Date fecha = new Date();

        SimpleDateFormat formatofecha = new SimpleDateFormat("yyyy");
        return formatofecha.format(fecha);
    }

    void generarCodigoCliente() throws Exception {
        String CRuc = textRuc.getText();
        String CAnio = anioActual();
        String sSubAnio1 = CAnio.substring(2, 3);
        String sSubAnio2 = CAnio.substring(3, 4);
        consultarUltimoId();
        nuevoNumero = cliUltimoId + 1;
        numCeros = String.format("%06d", nuevoNumero);
        if ("".equals(CRuc)) {
            String codigo = sSubAnio1 + sSubAnio2 + "30" + numCeros;
            System.out.println("codigoClienteSinRuc" + codigo);
            txtCodigoCliente.setText(codigo);
        } else {
            String sSubCadena = CRuc.substring(0, 1);
            String sSubCadena2 = CRuc.substring(1, 2);
            String codigo = sSubAnio1 + sSubAnio2 + sSubCadena + sSubCadena2 + numCeros;
            System.out.println("codigoClienteConRuc" + codigo);
            txtCodigoCliente.setText(codigo);
        }
    }

}
