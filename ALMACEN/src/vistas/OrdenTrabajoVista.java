/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controller.ClienteController;
import controller.DetalleOrdenTrabajoController;
import controller.OrdenTrabajoController;
import controller.PedidoController;
import controller.ProformaController;
import entity.Cliente;
import entity.DetalleOrdenTrabajo;
import entity.OrdenTrabajo;
import entity.Pedido;
import entity.Proforma;
import exportarexcel.clsExportarExcel;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import reportes.GenerarReporte;

/**
 *
 * @author ARCRODINPC-05
 */
public class OrdenTrabajoVista extends javax.swing.JInternalFrame {

    /**
     * Creates new form OrdenTrabajoVista
     */
    

    int idOrdenTrabajo;
    int anioOT;
    int idPedido;
    int anioP;
    int numPedido;
    int idCotizacion;
    String numeroCotizacion;
    int idCliente;
    String numOrdenTrabajo;
    String servicio;
    String recepcion;
    String destino;
    String fechaEmision;
    String fechaInicio;
    String fechaFinal;
    String fechaEntrega;
    String estado;
    String estadoCombo;
    String observacion;
    String medidaIngreso;
    String medidaFinaliza;
    int dia1;
    int dia2;
    
    int tabla;
    static String anio;
    static String numOrdTrabParaModificar;
    
    String filtro="c.razonSocial";
    
    String valorDia;
    
    public OrdenTrabajoVista() {
        initComponents();
        listaOrdenTrabajo(filtro, txtFiltro.getText()); 
        habilitarInicio();
        jTable1.setDefaultRenderer (Object.class, new RowsRenderer());
    }
    
    public class RowsRenderer extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable jTable1, Object value, boolean selected, boolean focused, int row, int column) {
//            jTable1.setBackground(Color.white);
//            jTable1.setForeground(Color.black);
            super.getTableCellRendererComponent(jTable1, value, selected, focused, row, column);
            if ("FINALIZADO".equals((jTable1.getValueAt(row, column)))) {
                this.setOpaque(true);
                this.setForeground(Color.decode("#009900"));//verde
//                this.setFont(this.getFont().deriveFont( Font.BOLD));
            } else if ("EN PROCESO".equals((jTable1.getValueAt(row, column)))) {
                this.setOpaque(true);
                this.setForeground(Color.decode("#CCCC00"));
//                this.setFont(this.getFont().deriveFont( Font.BOLD));
            } else if ("PENDIENTE".equals((jTable1.getValueAt(row, column)))) {
                this.setOpaque(true);
                this.setForeground(Color.BLACK);
//               this.setFont(this.getFont().deriveFont( Font.BOLD));
            } else if ((!"FINALIZADO".equals((jTable1.getValueAt(row, column)))) && 
                       (!"EN PROCESO".equals((jTable1.getValueAt(row, column))) && 
                       (!"PENDIENTE".equals((jTable1.getValueAt(row, column)))))) {
                this.setOpaque(true);
                this.setForeground(Color.BLACK);
            }
            
            if (selected) {
                setBackground(Color.decode("#39698a"));
                setForeground(Color.decode("#FFFFFF"));
            } else{
                setBackground(Color.WHITE);
            }
            
            return this;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboBoxFiltro = new javax.swing.JComboBox<>();
        txtFiltro = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtNumOT = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNumPed = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNumCot = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtRazSocial = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtFechaEmision = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtFechaInicio = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtFechaFinal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtFechaEntrega = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtServicio = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtRecepcion = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtSevicioPara = new javax.swing.JTextField();
        buttonModificarEnOT = new javax.swing.JButton();
        buttonPDF = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        buttonCerrar = new javax.swing.JButton();
        buttonLimpiar = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        labelN1 = new javax.swing.JLabel();
        label1 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        labelN2 = new javax.swing.JLabel();
        label2 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        labelN3 = new javax.swing.JLabel();
        label3 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        labelN4 = new javax.swing.JLabel();
        label4 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        labelN5 = new javax.swing.JLabel();
        label5 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        labelN6 = new javax.swing.JLabel();
        label6 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        labelN7 = new javax.swing.JLabel();
        label7 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        labelN8 = new javax.swing.JLabel();
        label8 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        labelN9 = new javax.swing.JLabel();
        label9 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        labelN10 = new javax.swing.JLabel();
        label10 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        labelN11 = new javax.swing.JLabel();
        label11 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        labelN12 = new javax.swing.JLabel();
        label12 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        labelN13 = new javax.swing.JLabel();
        label13 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        labelN14 = new javax.swing.JLabel();
        label14 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        labelN15 = new javax.swing.JLabel();
        label15 = new javax.swing.JLabel();
        labelN16 = new javax.swing.JLabel();
        labelN17 = new javax.swing.JLabel();
        labelN18 = new javax.swing.JLabel();
        labelN19 = new javax.swing.JLabel();
        labelN20 = new javax.swing.JLabel();
        labelN21 = new javax.swing.JLabel();
        labelN22 = new javax.swing.JLabel();
        labelN23 = new javax.swing.JLabel();
        labelN24 = new javax.swing.JLabel();
        labelN25 = new javax.swing.JLabel();
        labelN26 = new javax.swing.JLabel();
        labelN27 = new javax.swing.JLabel();
        labelN28 = new javax.swing.JLabel();
        labelN29 = new javax.swing.JLabel();
        labelN30 = new javax.swing.JLabel();
        labelN31 = new javax.swing.JLabel();
        labelN32 = new javax.swing.JLabel();
        labelN33 = new javax.swing.JLabel();
        labelN34 = new javax.swing.JLabel();
        labelN35 = new javax.swing.JLabel();
        labelN36 = new javax.swing.JLabel();
        labelN37 = new javax.swing.JLabel();
        labelN38 = new javax.swing.JLabel();
        labelN39 = new javax.swing.JLabel();
        labelN40 = new javax.swing.JLabel();
        labelN41 = new javax.swing.JLabel();
        labelN42 = new javax.swing.JLabel();
        labelN43 = new javax.swing.JLabel();
        labelN44 = new javax.swing.JLabel();
        labelN45 = new javax.swing.JLabel();
        labelN46 = new javax.swing.JLabel();
        labelN47 = new javax.swing.JLabel();
        labelN48 = new javax.swing.JLabel();
        labelN49 = new javax.swing.JLabel();
        label16 = new javax.swing.JLabel();
        label17 = new javax.swing.JLabel();
        label18 = new javax.swing.JLabel();
        label19 = new javax.swing.JLabel();
        label20 = new javax.swing.JLabel();
        label21 = new javax.swing.JLabel();
        label22 = new javax.swing.JLabel();
        label23 = new javax.swing.JLabel();
        label28 = new javax.swing.JLabel();
        label29 = new javax.swing.JLabel();
        label30 = new javax.swing.JLabel();
        label31 = new javax.swing.JLabel();
        label24 = new javax.swing.JLabel();
        label25 = new javax.swing.JLabel();
        label26 = new javax.swing.JLabel();
        label27 = new javax.swing.JLabel();
        label32 = new javax.swing.JLabel();
        label33 = new javax.swing.JLabel();
        label34 = new javax.swing.JLabel();
        label35 = new javax.swing.JLabel();
        label36 = new javax.swing.JLabel();
        label37 = new javax.swing.JLabel();
        label38 = new javax.swing.JLabel();
        label39 = new javax.swing.JLabel();
        label40 = new javax.swing.JLabel();
        label41 = new javax.swing.JLabel();
        label42 = new javax.swing.JLabel();
        label43 = new javax.swing.JLabel();
        label44 = new javax.swing.JLabel();
        label45 = new javax.swing.JLabel();
        label46 = new javax.swing.JLabel();
        label47 = new javax.swing.JLabel();
        label48 = new javax.swing.JLabel();
        label49 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtDiasHabiles = new javax.swing.JTextField();
        buttonImprimir = new javax.swing.JButton();
        buttonExportarExcel = new javax.swing.JButton();
        buttonListarOrdenFecha = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        comboBoxEstado = new javax.swing.JComboBox<>();
        txtObservacion = new javax.swing.JTextField();
        buttonModificar = new javax.swing.JButton();
        buttonGuardar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Vista de las Ordenes de Trabajo");

        comboBoxFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "RAZÓN SOCIAL", "N° ORD. TRABAJO", "N° PEDIDO", "N° COTIZACION", "F. EMISIÓN", "F. INICIO", "F. FINAL", "F. ENTREGA", "ESTADO" }));
        comboBoxFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxFiltroItemStateChanged(evt);
            }
        });

        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroKeyReleased(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idOT", "N° Ord.Trab.", "Cliente", "N° Ped.", "N° Cot.", "F. Emisión", "F. Inicio", "F. Final", "F. Entrega", "Estado", "Observación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(250);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(10).setPreferredWidth(120);
        }

        jLabel1.setText("N° Ord. Trab.:");

        jLabel2.setText("N° Pedido:");

        jLabel3.setText("N° Cot.:");

        jLabel4.setText("Cliente:");

        jLabel5.setText("F. Emisión:");

        jLabel6.setText("F. Inicio:");

        jLabel7.setText("F. Final:");

        jLabel8.setText("F. Entrega:");

        jLabel9.setText("Servicio:");

        jLabel10.setText("Recepción:");

        jLabel11.setText("Servicio para:");

        buttonModificarEnOT.setText("Modificar O.T.");
        buttonModificarEnOT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarEnOTActionPerformed(evt);
            }
        });

        buttonPDF.setText("PDF");
        buttonPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPDFActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idDetOT", "Item", "Cant.", "Descripcion general del trabajo en curso", "Tolerancia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(40);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(40);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(750);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(180);
        }

        buttonCerrar.setText("Cerrar");
        buttonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCerrarActionPerformed(evt);
            }
        });

        buttonLimpiar.setText("Limpiar");
        buttonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLimpiarActionPerformed(evt);
            }
        });

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("L");

        labelN1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN1.setText("00");

        label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label1.setText("O");

        jLabel17.setText("M");

        labelN2.setText("00");

        label2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label2.setText("O");

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("M");

        labelN3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN3.setText("00");

        label3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label3.setText("O");

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("J");

        labelN4.setText("00");

        label4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label4.setText("O");

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("V");

        labelN5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN5.setText("00");

        label5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label5.setText("O");

        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("S");

        labelN6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN6.setText("00");

        label6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label6.setText("O");

        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("D");

        labelN7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN7.setText("00");

        label7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label7.setText("O");

        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("L");

        labelN8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN8.setText("00");

        label8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label8.setText("O");

        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("M");

        labelN9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN9.setText("00");

        label9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label9.setText("O");

        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("M");

        labelN10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN10.setText("00");

        label10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label10.setText("O");

        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel44.setText("J");

        labelN11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN11.setText("00");

        label11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label11.setText("O");

        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel47.setText("V");

        labelN12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN12.setText("00");

        label12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label12.setText("O");

        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel50.setText("S");

        labelN13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN13.setText("00");

        label13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label13.setText("O");

        jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel53.setText("D");

        labelN14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN14.setText("00");

        label14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label14.setText("O");

        jLabel56.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel56.setText("L");

        jLabel57.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel57.setText("M");

        jLabel58.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel58.setText("M");

        jLabel59.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel59.setText("J");

        jLabel60.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel60.setText("V");

        jLabel61.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel61.setText("S");

        jLabel62.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel62.setText("D");

        jLabel63.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel63.setText("L");

        jLabel64.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel64.setText("M");

        jLabel65.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel65.setText("M");

        jLabel66.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel66.setText("J");

        jLabel67.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel67.setText("V");

        jLabel68.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel68.setText("S");

        jLabel69.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel69.setText("D");

        jLabel70.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel70.setText("L");

        jLabel71.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel71.setText("M");

        jLabel72.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel72.setText("M");

        jLabel73.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel73.setText("J");

        jLabel74.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel74.setText("V");

        jLabel75.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel75.setText("S");

        jLabel76.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel76.setText("D");

        jLabel77.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel77.setText("L");

        jLabel78.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel78.setText("M");

        jLabel79.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel79.setText("M");

        jLabel80.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel80.setText("J");

        jLabel81.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel81.setText("V");

        jLabel82.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel82.setText("S");

        jLabel83.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel83.setText("D");

        jLabel84.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel84.setText("L");

        jLabel85.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel85.setText("M");

        jLabel86.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel86.setText("M");

        jLabel87.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel87.setText("J");

        jLabel88.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel88.setText("V");

        jLabel89.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel89.setText("S");

        jLabel90.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel90.setText("D");

        labelN15.setText("00");

        label15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label15.setText("O");

        labelN16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN16.setText("00");

        labelN17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN17.setText("00");

        labelN18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN18.setText("00");

        labelN19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN19.setText("00");

        labelN20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN20.setText("00");

        labelN21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN21.setText("00");

        labelN22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN22.setText("00");

        labelN23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN23.setText("00");

        labelN24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN24.setText("00");

        labelN25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN25.setText("00");

        labelN26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN26.setText("00");

        labelN27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN27.setText("00");

        labelN28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN28.setText("00");

        labelN29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN29.setText("00");

        labelN30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN30.setText("00");

        labelN31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN31.setText("00");

        labelN32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN32.setText("00");

        labelN33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN33.setText("00");

        labelN34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN34.setText("00");

        labelN35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN35.setText("00");

        labelN36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN36.setText("00");

        labelN37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN37.setText("00");

        labelN38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN38.setText("00");

        labelN39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN39.setText("00");

        labelN40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN40.setText("00");

        labelN41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN41.setText("00");

        labelN42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN42.setText("00");

        labelN43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN43.setText("00");

        labelN44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN44.setText("00");

        labelN45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN45.setText("00");

        labelN46.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN46.setText("00");

        labelN47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN47.setText("00");

        labelN48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN48.setText("00");

        labelN49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelN49.setText("00");

        label16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label16.setText("O");

        label17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label17.setText("O");

        label18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label18.setText("O");

        label19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label19.setText("O");

        label20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label20.setText("O");

        label21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label21.setText("O");

        label22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label22.setText("O");

        label23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label23.setText("O");

        label28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label28.setText("O");

        label29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label29.setText("O");

        label30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label30.setText("O");

        label31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label31.setText("O");

        label24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label24.setText("O");

        label25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label25.setText("O");

        label26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label26.setText("O");

        label27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label27.setText("O");

        label32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label32.setText("O");

        label33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label33.setText("O");

        label34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label34.setText("O");

        label35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label35.setText("O");

        label36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label36.setText("O");

        label37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label37.setText("O");

        label38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label38.setText("O");

        label39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label39.setText("O");

        label40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label40.setText("O");

        label41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label41.setText("O");

        label42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label42.setText("O");

        label43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label43.setText("O");

        label44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label44.setText("O");

        label45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label45.setText("O");

        label46.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label46.setText("O");

        label47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label47.setText("O");

        label48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label48.setText("O");

        label49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label49.setText("O");

        jLabel15.setText("Dias:");

        buttonImprimir.setText("Imprimir");
        buttonImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonImprimirActionPerformed(evt);
            }
        });

        buttonExportarExcel.setText("Exportar Excel");
        buttonExportarExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExportarExcelActionPerformed(evt);
            }
        });

        buttonListarOrdenFecha.setText("Ordenar por fecha de entrega");
        buttonListarOrdenFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonListarOrdenFechaActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel12.setText("Estado:");

        jLabel13.setText("Observación:");

        comboBoxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "EN PROCESO", "FINALIZADO", "PENDIENTE" }));
        comboBoxEstado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxEstadoItemStateChanged(evt);
            }
        });

        buttonModificar.setText("Modificar");
        buttonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarActionPerformed(evt);
            }
        });

        buttonGuardar.setText("Guardar");
        buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtObservacion, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(comboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonModificar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtObservacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonGuardar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonListarOrdenFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonExportarExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(buttonModificarEnOT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonPDF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonCerrar, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(buttonImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSevicioPara, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(label1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelN1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelN2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label13, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label14, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label15, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label16, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label17, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label18, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label19, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label20, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(labelN3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labelN4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labelN5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labelN6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labelN7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labelN8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labelN9, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labelN10, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labelN11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labelN12, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labelN13, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labelN14, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labelN15)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labelN16, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labelN17, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labelN18, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel70, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel71, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel72, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel75, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel76, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel77, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel78, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel79, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel80, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel82, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel83, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel84, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel85, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel86, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel87, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel88, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel89, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel90, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(labelN19, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN20, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN21, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN22, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN23, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addGap(42, 42, 42)
                                                        .addComponent(label21, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label22, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(label23, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(labelN24, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN25, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN26, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN27, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN28, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN29, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN30, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN31, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(label24, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label25, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label26, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label27, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(label28, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label29, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label30, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label31, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(labelN32, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN33, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN34, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN35, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN36, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN37, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN38, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN39, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN40, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN41, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN42, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN43, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN44, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN45, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN46, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN47, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN48, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelN49, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(label32, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label33, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label34, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label35, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label36, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label37, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label38, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label39, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label40, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label41, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label42, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label43, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label44, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label45, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label46, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label47, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label48, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(label49, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumOT, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumPed, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumCot, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtRazSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaEmision, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel15))
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtRecepcion)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtDiasHabiles, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtFechaEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(12, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonLimpiar)
                    .addComponent(buttonExportarExcel)
                    .addComponent(buttonListarOrdenFecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNumOT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtNumPed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtNumCot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtRazSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtFechaEmision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(txtFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(txtFechaEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(txtDiasHabiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRecepcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(txtSevicioPara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel17)
                    .addComponent(jLabel20)
                    .addComponent(jLabel23)
                    .addComponent(jLabel26)
                    .addComponent(jLabel29)
                    .addComponent(jLabel32)
                    .addComponent(jLabel35)
                    .addComponent(jLabel38)
                    .addComponent(jLabel41)
                    .addComponent(jLabel44)
                    .addComponent(jLabel47)
                    .addComponent(jLabel50)
                    .addComponent(jLabel53)
                    .addComponent(jLabel56)
                    .addComponent(jLabel57)
                    .addComponent(jLabel58)
                    .addComponent(jLabel59)
                    .addComponent(jLabel60)
                    .addComponent(jLabel61)
                    .addComponent(jLabel62)
                    .addComponent(jLabel63)
                    .addComponent(jLabel64)
                    .addComponent(jLabel65)
                    .addComponent(jLabel66)
                    .addComponent(jLabel67)
                    .addComponent(jLabel68)
                    .addComponent(jLabel69)
                    .addComponent(jLabel70)
                    .addComponent(jLabel71)
                    .addComponent(jLabel72)
                    .addComponent(jLabel73)
                    .addComponent(jLabel74)
                    .addComponent(jLabel75)
                    .addComponent(jLabel76)
                    .addComponent(jLabel77)
                    .addComponent(jLabel78)
                    .addComponent(jLabel79)
                    .addComponent(jLabel80)
                    .addComponent(jLabel81)
                    .addComponent(jLabel82)
                    .addComponent(jLabel83)
                    .addComponent(jLabel84)
                    .addComponent(jLabel85)
                    .addComponent(jLabel86)
                    .addComponent(jLabel87)
                    .addComponent(jLabel88)
                    .addComponent(jLabel89)
                    .addComponent(jLabel90))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelN24, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelN1)
                        .addComponent(labelN2)
                        .addComponent(labelN3)
                        .addComponent(labelN4)
                        .addComponent(labelN5)
                        .addComponent(labelN6)
                        .addComponent(labelN7)
                        .addComponent(labelN8)
                        .addComponent(labelN9)
                        .addComponent(labelN10)
                        .addComponent(labelN11)
                        .addComponent(labelN12)
                        .addComponent(labelN13)
                        .addComponent(labelN14)
                        .addComponent(labelN15)
                        .addComponent(labelN16)
                        .addComponent(labelN17)
                        .addComponent(labelN18)
                        .addComponent(labelN19)
                        .addComponent(labelN20)
                        .addComponent(labelN21)
                        .addComponent(labelN22)
                        .addComponent(labelN23)
                        .addComponent(labelN25)
                        .addComponent(labelN26)
                        .addComponent(labelN27)
                        .addComponent(labelN28)
                        .addComponent(labelN29)
                        .addComponent(labelN30)
                        .addComponent(labelN31)
                        .addComponent(labelN32)
                        .addComponent(labelN33)
                        .addComponent(labelN34)
                        .addComponent(labelN35)
                        .addComponent(labelN36)
                        .addComponent(labelN37)
                        .addComponent(labelN38)
                        .addComponent(labelN39)
                        .addComponent(labelN40)
                        .addComponent(labelN41)
                        .addComponent(labelN42)
                        .addComponent(labelN43)
                        .addComponent(labelN44)
                        .addComponent(labelN45)
                        .addComponent(labelN46)
                        .addComponent(labelN47)
                        .addComponent(labelN48)
                        .addComponent(labelN49)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label1)
                    .addComponent(label2)
                    .addComponent(label3)
                    .addComponent(label4)
                    .addComponent(label5)
                    .addComponent(label6)
                    .addComponent(label7)
                    .addComponent(label8)
                    .addComponent(label9)
                    .addComponent(label10)
                    .addComponent(label11)
                    .addComponent(label12)
                    .addComponent(label13)
                    .addComponent(label14)
                    .addComponent(label15)
                    .addComponent(label16)
                    .addComponent(label17)
                    .addComponent(label18)
                    .addComponent(label19)
                    .addComponent(label20)
                    .addComponent(label21)
                    .addComponent(label28)
                    .addComponent(label29)
                    .addComponent(label30)
                    .addComponent(label31)
                    .addComponent(label24)
                    .addComponent(label25)
                    .addComponent(label26)
                    .addComponent(label27)
                    .addComponent(label32)
                    .addComponent(label22)
                    .addComponent(label23)
                    .addComponent(label33)
                    .addComponent(label34)
                    .addComponent(label35)
                    .addComponent(label36)
                    .addComponent(label37)
                    .addComponent(label38)
                    .addComponent(label39)
                    .addComponent(label40)
                    .addComponent(label41)
                    .addComponent(label42)
                    .addComponent(label43)
                    .addComponent(label44)
                    .addComponent(label45)
                    .addComponent(label46)
                    .addComponent(label47)
                    .addComponent(label48)
                    .addComponent(label49))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonPDF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonImprimir)
                        .addGap(8, 8, 8)
                        .addComponent(buttonModificarEnOT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonCerrar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_buttonCerrarActionPerformed

    private void comboBoxEstadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxEstadoItemStateChanged
        if (comboBoxEstado.getSelectedIndex() != 0) {
            estadoCombo = comboBoxEstado.getSelectedItem().toString();
        } else {
            estadoCombo = "";
        }
    }//GEN-LAST:event_comboBoxEstadoItemStateChanged

    private void comboBoxFiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxFiltroItemStateChanged
        if (comboBoxFiltro.getSelectedItem() == "RAZÓN SOCIAL") {
            filtro = "c.razonSocial";
            listaOrdenTrabajo(filtro, txtFiltro.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "N° ORD. TRABAJO") {
            filtro = "o.numOrdenTrabajo";
            listaOrdenTrabajo(filtro, txtFiltro.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "N° PEDIDO") {
            filtro = "p.numPedido ";
            listaOrdenTrabajo(filtro, txtFiltro.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "N° COTIZACION") {
            filtro = "pr.codProforma ";
            listaOrdenTrabajo(filtro, txtFiltro.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "F. EMISIÓN") {
            filtro = "o.fechaEmision";
            listaOrdenTrabajo(filtro, txtFiltro.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "F. INICIO") {
            filtro = "o.fechaInicio";
            listaOrdenTrabajo(filtro, txtFiltro.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "F. FINAL") {
            filtro = "o.fechaFinal";
            listaOrdenTrabajo(filtro, txtFiltro.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "F. ENTREGA") {
            filtro = "o.fechaEntrega";
            listaOrdenTrabajo(filtro, txtFiltro.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "ESTADO") {
            filtro = "o.estado";
            listaOrdenTrabajo(filtro, txtFiltro.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "SELECCIONAR") {
            filtro = "c.razonSocial";
            listaOrdenTrabajo(filtro, txtFiltro.getText());
            System.out.println(filtro);
        } 
    }//GEN-LAST:event_comboBoxFiltroItemStateChanged

    private void txtFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyReleased
        listaOrdenTrabajo(filtro, txtFiltro.getText());
    }//GEN-LAST:event_txtFiltroKeyReleased

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        limpiar();
        tabla = jTable1.getSelectedRow();
        idOrdenTrabajo = Integer.parseInt(jTable1.getValueAt(tabla, 0).toString());
        fechaEmision=jTable1.getValueAt(tabla, 5).toString();
        try {
            anio=anioActual(fechaEmision);
        } catch (ParseException ex) {
            Logger.getLogger(OrdenTrabajoVista.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            consultarOrdenTrabajo(idOrdenTrabajo);
        } catch (Exception ex) {
            Logger.getLogger(OrdenTrabajoVista.class.getName()).log(Level.SEVERE, null, ex);
        }
        habilitarBuscar();        
        listaDetalleOrdenTrabajo(idOrdenTrabajo);
    }//GEN-LAST:event_jTable1MouseClicked

    private void buttonPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPDFActionPerformed
        GenerarReporte ordT = new GenerarReporte();
        try {
            ordT.ReporteOrdenTrabajo(idOrdenTrabajo);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(Rotulaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonPDFActionPerformed

    private void buttonModificarEnOTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarEnOTActionPerformed
        OrdenTrabajoRegistro ordtrab = null;
        try {
            ordtrab = new OrdenTrabajoRegistro();
        } catch (ParseException ex) {
            Logger.getLogger(OrdenTrabajoVista.class.getName()).log(Level.SEVERE, null, ex);
        }
        Principal.jDesktopPane1.add(ordtrab);
        ordtrab.toFront();
        ordtrab.setVisible(true);
        OrdenTrabajoRegistro.pasarOrdenDeTrabajo();
    }//GEN-LAST:event_buttonModificarEnOTActionPerformed

    private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGuardarActionPerformed
        procesar(2);
        habilitarGuardar();
        listaOrdenTrabajo(filtro, txtFiltro.getText());
    }//GEN-LAST:event_buttonGuardarActionPerformed

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_UP)) {
            limpiar();
            tabla = jTable1.getSelectedRow();
            idOrdenTrabajo = Integer.parseInt(jTable1.getValueAt(tabla, 0).toString());
            fechaEmision = jTable1.getValueAt(tabla, 5).toString();
            try {
                anio = anioActual(fechaEmision);
            } catch (ParseException ex) {
                Logger.getLogger(OrdenTrabajoVista.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                consultarOrdenTrabajo(idOrdenTrabajo);
            } catch (Exception ex) {
                Logger.getLogger(OrdenTrabajoVista.class.getName()).log(Level.SEVERE, null, ex);
            }
            habilitarBuscar();
            listaDetalleOrdenTrabajo(idOrdenTrabajo);
        }
    }//GEN-LAST:event_jTable1KeyReleased

    private void buttonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarActionPerformed
        habilitarModificar();
    }//GEN-LAST:event_buttonModificarActionPerformed

    private void buttonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLimpiarActionPerformed
        limpiar();
        habilitarInicio();
    }//GEN-LAST:event_buttonLimpiarActionPerformed

    private void buttonImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonImprimirActionPerformed
         GenerarReporte ordT = new GenerarReporte();
        try {
            ordT.ImprimirOrdenTrabajo(idOrdenTrabajo);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(Rotulaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonImprimirActionPerformed

    private void buttonExportarExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExportarExcelActionPerformed
        clsExportarExcel obj = new clsExportarExcel();
        try {
            obj.exportarExcel(jTable1);
        } catch (IOException ex) {
            Logger.getLogger(CajaChicaRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonExportarExcelActionPerformed

    private void buttonListarOrdenFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonListarOrdenFechaActionPerformed
        listaOrdenTrabajoFecha();
    }//GEN-LAST:event_buttonListarOrdenFechaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCerrar;
    private javax.swing.JButton buttonExportarExcel;
    private javax.swing.JButton buttonGuardar;
    private javax.swing.JButton buttonImprimir;
    private javax.swing.JButton buttonLimpiar;
    private javax.swing.JButton buttonListarOrdenFecha;
    private javax.swing.JButton buttonModificar;
    private javax.swing.JButton buttonModificarEnOT;
    private javax.swing.JButton buttonPDF;
    private javax.swing.JComboBox<String> comboBoxEstado;
    private javax.swing.JComboBox<String> comboBoxFiltro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel label1;
    private javax.swing.JLabel label10;
    private javax.swing.JLabel label11;
    private javax.swing.JLabel label12;
    private javax.swing.JLabel label13;
    private javax.swing.JLabel label14;
    private javax.swing.JLabel label15;
    private javax.swing.JLabel label16;
    private javax.swing.JLabel label17;
    private javax.swing.JLabel label18;
    private javax.swing.JLabel label19;
    private javax.swing.JLabel label2;
    private javax.swing.JLabel label20;
    private javax.swing.JLabel label21;
    private javax.swing.JLabel label22;
    private javax.swing.JLabel label23;
    private javax.swing.JLabel label24;
    private javax.swing.JLabel label25;
    private javax.swing.JLabel label26;
    private javax.swing.JLabel label27;
    private javax.swing.JLabel label28;
    private javax.swing.JLabel label29;
    private javax.swing.JLabel label3;
    private javax.swing.JLabel label30;
    private javax.swing.JLabel label31;
    private javax.swing.JLabel label32;
    private javax.swing.JLabel label33;
    private javax.swing.JLabel label34;
    private javax.swing.JLabel label35;
    private javax.swing.JLabel label36;
    private javax.swing.JLabel label37;
    private javax.swing.JLabel label38;
    private javax.swing.JLabel label39;
    private javax.swing.JLabel label4;
    private javax.swing.JLabel label40;
    private javax.swing.JLabel label41;
    private javax.swing.JLabel label42;
    private javax.swing.JLabel label43;
    private javax.swing.JLabel label44;
    private javax.swing.JLabel label45;
    private javax.swing.JLabel label46;
    private javax.swing.JLabel label47;
    private javax.swing.JLabel label48;
    private javax.swing.JLabel label49;
    private javax.swing.JLabel label5;
    private javax.swing.JLabel label6;
    private javax.swing.JLabel label7;
    private javax.swing.JLabel label8;
    private javax.swing.JLabel label9;
    private javax.swing.JLabel labelN1;
    private javax.swing.JLabel labelN10;
    private javax.swing.JLabel labelN11;
    private javax.swing.JLabel labelN12;
    private javax.swing.JLabel labelN13;
    private javax.swing.JLabel labelN14;
    private javax.swing.JLabel labelN15;
    private javax.swing.JLabel labelN16;
    private javax.swing.JLabel labelN17;
    private javax.swing.JLabel labelN18;
    private javax.swing.JLabel labelN19;
    private javax.swing.JLabel labelN2;
    private javax.swing.JLabel labelN20;
    private javax.swing.JLabel labelN21;
    private javax.swing.JLabel labelN22;
    private javax.swing.JLabel labelN23;
    private javax.swing.JLabel labelN24;
    private javax.swing.JLabel labelN25;
    private javax.swing.JLabel labelN26;
    private javax.swing.JLabel labelN27;
    private javax.swing.JLabel labelN28;
    private javax.swing.JLabel labelN29;
    private javax.swing.JLabel labelN3;
    private javax.swing.JLabel labelN30;
    private javax.swing.JLabel labelN31;
    private javax.swing.JLabel labelN32;
    private javax.swing.JLabel labelN33;
    private javax.swing.JLabel labelN34;
    private javax.swing.JLabel labelN35;
    private javax.swing.JLabel labelN36;
    private javax.swing.JLabel labelN37;
    private javax.swing.JLabel labelN38;
    private javax.swing.JLabel labelN39;
    private javax.swing.JLabel labelN4;
    private javax.swing.JLabel labelN40;
    private javax.swing.JLabel labelN41;
    private javax.swing.JLabel labelN42;
    private javax.swing.JLabel labelN43;
    private javax.swing.JLabel labelN44;
    private javax.swing.JLabel labelN45;
    private javax.swing.JLabel labelN46;
    private javax.swing.JLabel labelN47;
    private javax.swing.JLabel labelN48;
    private javax.swing.JLabel labelN49;
    private javax.swing.JLabel labelN5;
    private javax.swing.JLabel labelN6;
    private javax.swing.JLabel labelN7;
    private javax.swing.JLabel labelN8;
    private javax.swing.JLabel labelN9;
    private javax.swing.JTextField txtDiasHabiles;
    private javax.swing.JTextField txtFechaEmision;
    private javax.swing.JTextField txtFechaEntrega;
    private javax.swing.JTextField txtFechaFinal;
    private javax.swing.JTextField txtFechaInicio;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JTextField txtNumCot;
    private javax.swing.JTextField txtNumOT;
    private javax.swing.JTextField txtNumPed;
    private javax.swing.JTextField txtObservacion;
    private javax.swing.JTextField txtRazSocial;
    private javax.swing.JTextField txtRecepcion;
    private javax.swing.JTextField txtServicio;
    private javax.swing.JTextField txtSevicioPara;
    // End of variables declaration//GEN-END:variables
    
    OrdenTrabajoController ordentrabajocontroler = new OrdenTrabajoController();
    OrdenTrabajo ordentrabajo;

    DetalleOrdenTrabajoController detalleordentrabajocontroler = new DetalleOrdenTrabajoController();
    DetalleOrdenTrabajo detalleordentrabajo;

    ClienteController clientecontroler = new ClienteController();
    Cliente cliente;

    PedidoController pedidocontroler = new PedidoController();
    Pedido pedido;

    ProformaController proformacontroler = new ProformaController();
    Proforma proforma;
    
    
//----------------------------------- Lista Ordenes Trabajo ------------------------------------
    void listaOrdenTrabajo(String nombre,String valor) {
        List<OrdenTrabajo> lista;
        try {
            lista = ordentrabajocontroler.OrdenTrabajoFiltrar(nombre, valor);
            verOrdenTrabajo(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

     private void verOrdenTrabajo(List<OrdenTrabajo> lista) {

        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        tabla.setRowCount(0);
        for (OrdenTrabajo ordTr : lista) {

            Object[] fila = {ordTr.getIdOrdenTrabajo(), ordTr.getNumOrdenTrabajo(), ordTr.getRazSocial(),
                String.format("%06d",ordTr.getNumPed()), ordTr.getNumCot(), ordTr.getFechaEmision(), ordTr.getFechaInicio(),
                ordTr.getFechaFin(), ordTr.getFechaEntrega(), ordTr.getEstado(), ordTr.getObservacion()};

            tabla.addRow(fila);
        }
    }
     
    void listaOrdenTrabajoFecha() {
        List<OrdenTrabajo> lista;
        try {
            lista = ordentrabajocontroler.OrdenTrabajoListarFecha();
            verOrdenTrabajo(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }
     
//------------------------------------- Buscar Orden de Trabajo --------------------------------------------
     private void consultarPedidoOrdenT(int ip) throws Exception {
        pedido = pedidocontroler.PedidoBuscar(ip);
        if (pedido != null) {

            idPedido = pedido.getIdPedido();
            numPedido=pedido.getNumPedido();
            txtNumPed.setText(String.format("%06d", pedido.getNumPedido()));
            idCotizacion=pedido.getIdProforma();
            consultarCodigoProforma(idCotizacion);
            idCliente = pedido.getIdCliente();
            consultarCliente(idCliente);
            dia1=pedido.getDia1();
            dia2=pedido.getDia2();
            
            txtDiasHabiles.setText(pedido.getDia1()+" A "+pedido.getDia2()+" DIAS HABILES");
            
            
        } else {
            JOptionPane.showMessageDialog(null, "Pedido no registrado");
            //System.out.println("Error");
        }
    }
     
     private void consultarCodigoProforma(int idP) throws Exception {

        proforma = proformacontroler.ProformaBuscar1(idP);
        if (proforma != null) {

            numeroCotizacion = proforma.getCodProforma();
            txtNumCot.setText(proforma.getCodProforma());

        } else {
//            JOptionPane.showMessageDialog(null, "Proforma no registrado");
//            System.out.println("Error");
        }
    }

    private void consultarCliente(int idCli) throws Exception {
        cliente = clientecontroler.ClienteBuscar1(idCli);
        if (cliente != null) {

            idCliente = cliente.getIdCliente();
            txtRazSocial.setText(cliente.getRazonSocial());

        } else {
            JOptionPane.showMessageDialog(null, "Cliente no registrado");
            //System.out.println("Error");
        }
    }

    private void consultarOrdenTrabajo(int id) throws Exception {
        ordentrabajo = ordentrabajocontroler.OrdenTrabajoBuscar(id);
        
        if (ordentrabajo != null) {

            idOrdenTrabajo=ordentrabajo.getIdOrdenTrabajo();
            idPedido=ordentrabajo.getIdPedido();
            consultarPedidoOrdenT(idPedido);
            idCotizacion=ordentrabajo.getIdProforma();
            numOrdenTrabajo=ordentrabajo.getNumOrdenTrabajo();
            numOrdTrabParaModificar=ordentrabajo.getNumOrdenTrabajo();
            txtNumOT.setText(ordentrabajo.getNumOrdenTrabajo());
            servicio=ordentrabajo.getTipoServicio();
            txtServicio.setText(ordentrabajo.getTipoServicio());
            
            recepcion = ordentrabajo.getRecepcion();
            txtRecepcion.setText(ordentrabajo.getRecepcion());
            
            destino=ordentrabajo.getDestino();
            txtSevicioPara.setText(destino=ordentrabajo.getDestino());
            
            fechaEmision=ordentrabajo.getFechaEmision();
            txtFechaEmision.setText(ordentrabajo.getFechaEmision());
            fechaInicio=ordentrabajo.getFechaInicio();
            txtFechaInicio.setText(ordentrabajo.getFechaInicio());
            fechaFinal=ordentrabajo.getFechaFin();
            txtFechaFinal.setText(ordentrabajo.getFechaFin());
            fechaEntrega=ordentrabajo.getFechaEntrega();
            txtFechaEntrega.setText(ordentrabajo.getFechaEntrega());
            agregarDias(identificarfechaLunes(ordentrabajo.getFechaInicio()));
            estado=ordentrabajo.getEstado();
            String testValue2 =estado;
            for (int j = 0; j < comboBoxEstado.getModel().getSize(); j++) {
                if (comboBoxEstado.getItemAt(j).equals(testValue2)) {
                    System.out.println(j);
                    comboBoxEstado.setSelectedIndex(j);
                    break;
                }
            }
            observacion=ordentrabajo.getObservacion();
            txtObservacion.setText(ordentrabajo.getObservacion());
            
            medidaIngreso=ordentrabajo.getMedidaIngreso();
            medidaFinaliza=ordentrabajo.getMedidaFinaliza();
            

        } else {
            JOptionPane.showMessageDialog(null, "Pedido no registrado");
            //System.out.println("Error");
        }
    }
   
//----------------------------------- Procesar (Modficar Estado)-----------------------------
private void procesar(int op) {
        ordentrabajo = leerDatos();
        try {
            System.out.println("11111111111");
            String msg = ordentrabajocontroler.OrdenTrabajoProcesar(ordentrabajo, op);
            JOptionPane.showMessageDialog(null, msg);
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("Error" + e.getMessage());
        }
    }

    private OrdenTrabajo leerDatos() {
        OrdenTrabajo ordenTrab = new OrdenTrabajo();

        ordenTrab.setIdOrdenTrabajo(idOrdenTrabajo);
        ordenTrab.setIdPedido(idPedido);
        ordenTrab.setIdProforma(idCotizacion);
        ordenTrab.setNumOrdenTrabajo(numOrdenTrabajo);
        ordenTrab.setTipoServicio(servicio);
        ordenTrab.setRecepcion(recepcion);
        ordenTrab.setDestino(destino);
        fechaEmision = txtFechaEmision.getText();
        ordenTrab.setFechaEmision(fechaEmision);
        fechaInicio = txtFechaInicio.getText();
        ordenTrab.setFechaInicio(fechaInicio);
        fechaFinal = txtFechaFinal.getText();
        ordenTrab.setFechaFin(fechaFinal);
        fechaEntrega = txtFechaEntrega.getText();
        ordenTrab.setFechaEntrega(fechaEntrega);
        ordenTrab.setEstado(estadoCombo);
        observacion = txtObservacion.getText();
        ordenTrab.setObservacion(observacion);
        ordenTrab.setMedidaIngreso(medidaIngreso);
        ordenTrab.setMedidaFinaliza(medidaFinaliza);

        return ordenTrab;
    }

//------------------------- Listar detalle orden trabajo -----------------------------------------
    void listaDetalleOrdenTrabajo(int idd) {
        List<DetalleOrdenTrabajo> lista;
        try {
            lista = detalleordentrabajocontroler.DetalleOrdenTrabajoFiltrar(idd);
            verDetalleOrdenTrabajo(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    void verDetalleOrdenTrabajo(List<DetalleOrdenTrabajo> lista) {
        
        DefaultTableModel tabla = (DefaultTableModel) jTable2.getModel();
        tabla.setRowCount(0);
        for (DetalleOrdenTrabajo detOrdT : lista) {
            
            Object[] fila = {detOrdT.getIdDetalleOrdenTrabajo(), detOrdT.getItem(), detOrdT.getCant(), 
                             detOrdT.getDescripcion(), detOrdT.getTolerancia()};
            tabla.addRow(fila);
        }
    }  
    
//-------------------------------------- Extraer año a fecha -----------------------------------------
    public String anioActual(String f) throws ParseException {
        Calendar fecha = Calendar.getInstance();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        Date fechaDate = null;

        fechaDate = formato.parse(f);

        SimpleDateFormat formatofecha = new SimpleDateFormat("yyyy");
        return formatofecha.format(fechaDate);
       
    }
   
//-------------------------------------------- Limpiar --------------------------------------------------
  
    void limpiar() {

        txtNumOT.setText("");
        txtNumPed.setText("");
        txtNumCot.setText("");
        txtRazSocial.setText("");
        txtFechaEmision.setText("");
        txtFechaInicio.setText("");
        txtFechaFinal.setText("");
        txtFechaEntrega.setText("");
        txtServicio.setText("");
        txtDiasHabiles.setText("");
        txtRecepcion.setText("");
        txtSevicioPara.setText("");
        comboBoxEstado.setSelectedIndex(0);
        txtObservacion.setText("");
    }
 
//------------------------------------------ Habilitar -------------------------------------------
    void habilitarInicio() {
        txtNumOT.setEnabled(false);
        txtNumPed.setEnabled(false);
        txtNumCot.setEnabled(false);
        txtRazSocial.setEnabled(false);
        txtFechaEmision.setEnabled(false);
        txtFechaInicio.setEnabled(false);
        txtFechaFinal.setEnabled(false);
        txtFechaEntrega.setEnabled(false);
        txtServicio.setEnabled(false);
        txtDiasHabiles.setEnabled(false);
        txtRecepcion.setEnabled(false);
        txtSevicioPara.setEnabled(false);
        comboBoxEstado.setEnabled(false);
        txtObservacion.setEnabled(false);

        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(false);
        buttonPDF.setEnabled(false);
        buttonImprimir.setEnabled(false);
        buttonModificarEnOT.setEnabled(false);
    }

    void habilitarBuscar() {
        txtNumOT.setEnabled(true);
        txtNumPed.setEnabled(true);
        txtNumCot.setEnabled(true);
        txtRazSocial.setEnabled(true);
        txtFechaEmision.setEnabled(true);
        txtFechaInicio.setEnabled(true);
        txtFechaFinal.setEnabled(true);
        txtFechaEntrega.setEnabled(true);
        txtServicio.setEnabled(true);
        txtDiasHabiles.setEnabled(true);
        txtRecepcion.setEnabled(true);
        txtSevicioPara.setEnabled(true);
        comboBoxEstado.setEnabled(false);
        txtObservacion.setEnabled(false);

        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonPDF.setEnabled(true);
        buttonImprimir.setEnabled(true);
        buttonModificarEnOT.setEnabled(true);
    }

    void habilitarModificar() {
        txtNumOT.setEnabled(true);
        txtNumPed.setEnabled(true);
        txtNumCot.setEnabled(true);
        txtRazSocial.setEnabled(true);
        txtFechaEmision.setEnabled(true);
        txtFechaInicio.setEnabled(true);
        txtFechaFinal.setEnabled(true);
        txtFechaEntrega.setEnabled(true);
        txtServicio.setEnabled(true);
        txtDiasHabiles.setEnabled(true);
        txtRecepcion.setEnabled(true);
        txtSevicioPara.setEnabled(true);
        comboBoxEstado.setEnabled(true);
        txtObservacion.setEnabled(true);

        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(true);
        buttonPDF.setEnabled(true);
        buttonImprimir.setEnabled(true);
        buttonModificarEnOT.setEnabled(true);
    }

    void habilitarGuardar() {
        txtNumOT.setEnabled(true);
        txtNumPed.setEnabled(true);
        txtNumCot.setEnabled(true);
        txtRazSocial.setEnabled(true);
        txtFechaEmision.setEnabled(true);
        txtFechaInicio.setEnabled(true);
        txtFechaFinal.setEnabled(true);
        txtFechaEntrega.setEnabled(true);
        txtServicio.setEnabled(true);
        txtDiasHabiles.setEnabled(true);
        txtRecepcion.setEnabled(true);
        txtSevicioPara.setEnabled(true);
        comboBoxEstado.setEnabled(false);
        txtObservacion.setEnabled(false);

        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonPDF.setEnabled(true);
        buttonImprimir.setEnabled(true);
        buttonModificarEnOT.setEnabled(true);
    }
//------------------------------------------- FECHA --------------------------------------------------

    String sumarRestarDiasFecha(String ah, int dias) throws ParseException {

        Calendar calendar = Calendar.getInstance();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        Date fechaDate = null;
        fechaDate = formato.parse(ah);
        calendar.setTime(fechaDate); // Configuramos la fecha que se recibe
        calendar.add(Calendar.DAY_OF_YEAR, dias);  // numero de días a añadir, o restar en caso de días<0

        return formato.format(calendar.getTime()); // Devuelve el objeto date String  con los nuevos días añadidos

    }
    
    public String diaFecha(String f) throws ParseException {
        Calendar fecha = Calendar.getInstance();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        Date fechaDate = null;

        fechaDate = formato.parse(f);

        SimpleDateFormat formatofecha = new SimpleDateFormat("dd");
        return formatofecha.format(fechaDate);
    }
    
    String diaSemana(String ah) throws ParseException {
        Calendar fecha = Calendar.getInstance();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        Date fechaDate = null;

        fechaDate=formato.parse(ah);

        fecha.setTime(fechaDate);

        int diaSemana = fecha.get(Calendar.DAY_OF_WEEK);
        switch (diaSemana) {
            case 1:
                valorDia = "Domingo";
                break;
            case 2:
                valorDia = "Lunes";
                break;
            case 3:
                valorDia = "Martes";
                break;
            case 4:
                valorDia = "Miercoles";
                break;
            case 5:
                valorDia = "Jueves";
                break;
            case 6:
                valorDia = "Viernes";
                break;
            case 7:
                valorDia = "Sabado";
                break;
            default:
                break;
        }
        return valorDia;
    }
    
    String identificarfechaLunes(String fl) throws ParseException {
       
            if ("Domingo".equals(diaSemana(fl))) {
                fl = sumarRestarDiasFecha(fl, -6);
            } else if ("Lunes".equals(diaSemana(fl))) {
                fl = fl;
            } else if ("Martes".equals(diaSemana(fl))) {
                fl = sumarRestarDiasFecha(fl, -1);
            } else if ("Miercoles".equals(diaSemana(fl))) {
                fl =sumarRestarDiasFecha(fl, -2);
            } else if ("Jueves".equals(diaSemana(fl))) {
                fl = sumarRestarDiasFecha(fl, -3);
            } else if ("Viernes".equals(diaSemana(fl))) {
                fl = sumarRestarDiasFecha(fl, -4);
            } else if ("Sabado".equals(diaSemana(fl))) {
                fl = sumarRestarDiasFecha(fl, -5);
            }
       return fl;
    }
    
     void agregarDias(String fh) throws ParseException {

        
        labelN1.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label1.setText("I");
                label1.setForeground(Color.decode("#009900"));
                label1.setFont(label1.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label1.setText("F");
                label1.setForeground(Color.RED);
                label1.setFont(label1.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label1.setText("E");
                label1.setForeground(Color.decode("#FE4B0C"));
                label1.setFont(label1.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label1.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN2.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label2.setText("I");
                label2.setForeground(Color.decode("#009900"));
                label2.setFont(label2.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label2.setText("F");
                label2.setForeground(Color.RED);
                label2.setFont(label2.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label2.setText("E");
                label2.setForeground(Color.decode("#FE4B0C"));
                label2.setFont(label2.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label2.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN3.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label3.setText("I");
                label3.setForeground(Color.decode("#009900"));
                label3.setFont(label3.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label3.setText("F");
                label3.setForeground(Color.RED);
                label3.setFont(label3.getFont().deriveFont(Font.BOLD));
            }
            if (fechaEntrega.equals(fh)) {
                label3.setText("E");
                label3.setForeground(Color.decode("#FE4B0C"));
                label3.setFont(label3.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label3.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN4.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label4.setText("I");
                label4.setForeground(Color.decode("#009900"));
                label4.setFont(label4.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label4.setText("F");
                label4.setForeground(Color.RED);
                label4.setFont(label4.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label4.setText("E");
                label4.setForeground(Color.decode("#FE4B0C"));
                label4.setFont(label4.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label4.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN5.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label5.setText("I");
                label5.setForeground(Color.decode("#009900"));
                label5.setFont(label5.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label5.setText("F");
                label5.setForeground(Color.RED);
                label5.setFont(label5.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label5.setText("E");
                label5.setForeground(Color.decode("#FE4B0C"));
                label5.setFont(label5.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label5.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN6.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label6.setText("I");
                label6.setForeground(Color.decode("#009900"));
                label6.setFont(label6.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label6.setText("F");
                label6.setForeground(Color.RED);
                label6.setFont(label6.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label6.setText("E");
                label6.setForeground(Color.decode("#FE4B0C"));
                label6.setFont(label6.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label6.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN7.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label7.setText("I");
                label7.setForeground(Color.decode("#009900"));
                label7.setFont(label7.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label7.setText("F");
                label7.setForeground(Color.RED);
                label7.setFont(label7.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label7.setText("E");
                label7.setForeground(Color.decode("#FE4B0C"));
                label7.setFont(label7.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label7.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN8.setText(String.format("%02d",Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label8.setText("I");
                label8.setForeground(Color.decode("#009900"));
                label8.setFont(label8.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label8.setText("F");
                label8.setForeground(Color.RED);
                label8.setFont(label8.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label8.setText("E");
                label8.setForeground(Color.decode("#FE4B0C"));
                label8.setFont(label8.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label8.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN9.setText(String.format("%02d",Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label9.setText("I");
                label9.setForeground(Color.decode("#009900"));
                label9.setFont(label9.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh) ) {
                label9.setText("F");
                label9.setForeground(Color.RED);
                label9.setFont(label9.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label9.setText("E");
                label9.setForeground(Color.decode("#FE4B0C"));
                label9.setFont(label9.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label9.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN10.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label10.setText("I");
                label10.setForeground(Color.decode("#009900 "));
                label10.setFont(label10.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label10.setText("F");
                label10.setForeground(Color.RED);
                label10.setFont(label10.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label10.setText("E");
                label10.setForeground(Color.decode("#FE4B0C"));
                label10.setFont(label10.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label10.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN11.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label11.setText("I");
                label11.setForeground(Color.decode("#009900"));
                label11.setFont(label11.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label11.setText("F");
                label11.setForeground(Color.RED);
                label11.setFont(label11.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label11.setText("E");
                label11.setForeground(Color.decode("#FE4B0C"));
                label11.setFont(label11.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label11.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN12.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label12.setText("I");
                label12.setForeground(Color.decode("#009900"));
                label12.setFont(label12.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label12.setText("F");
                label12.setForeground(Color.RED);
                label12.setFont(label12.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label12.setText("E");
                label12.setForeground(Color.decode("#FE4B0C"));
                label12.setFont(label12.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label12.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN13.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label13.setText("I");
                label13.setForeground(Color.decode("#009900"));
                label13.setFont(label13.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label13.setText("F");
                label13.setForeground(Color.RED);
                label13.setFont(label13.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label13.setText("E");
                label13.setForeground(Color.decode("#FE4B0C"));
                label13.setFont(label13.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label13.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN14.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) { //|| diaf1==dia || diaent1==dia ) {
                label14.setText("I");
                label14.setForeground(Color.decode("#009900"));
                label14.setFont(label14.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label14.setText("F");
                label14.setForeground(Color.RED);
                label14.setFont(label14.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label14.setText("E");
                label14.setForeground(Color.decode("#FE4B0C"));
                label14.setFont(label14.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label14.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN15.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) { //|| diaf1==dia || diaent1==dia ) {
                label15.setText("I");
                label15.setForeground(Color.decode("#009900"));
                label15.setFont(label15.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label15.setText("F");
                label15.setForeground(Color.RED);
                label15.setFont(label15.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label15.setText("E");
                label15.setForeground(Color.decode("#FE4B0C"));
                label15.setFont(label15.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label15.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN16.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label16.setText("I");
                label16.setForeground(Color.decode("#009900"));
                label16.setFont(label16.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label16.setText("F");
                label16.setForeground(Color.RED);
                label16.setFont(label16.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label16.setText("E");
                label16.setForeground(Color.decode("#FE4B0C"));
                label16.setFont(label16.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label16.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN17.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label17.setText("I");
                label17.setForeground(Color.decode("#009900"));
                label17.setFont(label17.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label17.setText("F");
                label17.setForeground(Color.RED);
                label17.setFont(label17.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label17.setText("E");
                label17.setForeground(Color.decode("#FE4B0C"));
                label17.setFont(label17.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label17.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN18.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label18.setText("I");
                label18.setForeground(Color.decode("#009900"));
                label18.setFont(label18.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label18.setText("F");
                label18.setForeground(Color.RED);
                label18.setFont(label18.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label18.setText("E");
                label18.setForeground(Color.decode("#FE4B0C"));
                label18.setFont(label18.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label18.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN19.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label19.setText("I");
                label19.setForeground(Color.decode("#009900"));
                label19.setFont(label19.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label19.setText("F");
                label19.setForeground(Color.RED);
                label19.setFont(label19.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label19.setText("E");
                label19.setForeground(Color.decode("#FE4B0C"));
                label19.setFont(label19.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label19.setText("");
        }

        fh = sumarRestarDiasFecha(fh,1);
        labelN20.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label20.setText("I");
                label20.setForeground(Color.decode("#009900"));
                label20.setFont(label20.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label20.setText("F");
                label20.setForeground(Color.RED);
                label20.setFont(label20.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label20.setText("E");
                label20.setForeground(Color.decode("#FE4B0C"));
                label20.setFont(label20.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label20.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN21.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label21.setText("I");
                label21.setForeground(Color.decode("#009900"));
                label21.setFont(label21.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label21.setText("F");
                label21.setForeground(Color.RED);
                label21.setFont(label21.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label21.setText("E");
                label21.setForeground(Color.decode("#FE4B0C"));
                label21.setFont(label21.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label21.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN22.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label22.setText("I");
                label22.setForeground(Color.decode("#009900"));
                label22.setFont(label22.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label22.setText("F");
                label22.setForeground(Color.RED);
                label22.setFont(label22.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label22.setText("E");
                label22.setForeground(Color.decode("#FE4B0C"));
                label22.setFont(label22.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label22.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN23.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label23.setText("I");
                label23.setForeground(Color.decode("#009900"));
                label23.setFont(label23.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label23.setText("F");
                label23.setForeground(Color.RED);
                label23.setFont(label23.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label23.setText("E");
                label23.setForeground(Color.decode("#FE4B0C"));
                label23.setFont(label23.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label23.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN24.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label24.setText("I");
                label24.setForeground(Color.decode("#009900"));
                label24.setFont(label24.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label24.setText("F");
                label24.setForeground(Color.RED);
                label24.setFont(label24.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label24.setText("E");
                label24.setForeground(Color.decode("#FE4B0C"));
                label24.setFont(label24.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label24.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN25.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label25.setText("I");
                label25.setForeground(Color.decode("#009900"));
                label25.setFont(label25.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label25.setText("F");
                label25.setForeground(Color.RED);
                label25.setFont(label25.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label25.setText("E");
                label25.setForeground(Color.decode("#FE4B0C"));
                label25.setFont(label25.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label25.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN26.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label26.setText("I");
                label26.setForeground(Color.decode("#009900"));
                label26.setFont(label26.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label26.setText("F");
                label26.setForeground(Color.RED);
                label26.setFont(label26.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label26.setText("E");
                label26.setForeground(Color.decode("#FE4B0C"));
                label26.setFont(label26.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label26.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN27.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label27.setText("I");
                label27.setForeground(Color.decode("#009900"));
                label27.setFont(label27.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label27.setText("F");
                label27.setForeground(Color.RED);
                label27.setFont(label27.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label27.setText("E");
                label27.setForeground(Color.decode("#FE4B0C"));
                label27.setFont(label27.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label27.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN28.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label28.setText("I");
                label28.setForeground(Color.decode("#009900"));
                label28.setFont(label28.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label28.setText("F");
                label28.setForeground(Color.RED);
                label28.setFont(label28.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label28.setText("E");
                label28.setForeground(Color.decode("#FE4B0C"));
                label28.setFont(label28.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label28.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN29.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label29.setText("I");
                label29.setForeground(Color.decode("#009900"));
                label29.setFont(label29.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label29.setText("F");
                label29.setForeground(Color.RED);
                label29.setFont(label29.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label29.setText("E");
                label29.setForeground(Color.decode("#FE4B0C"));
                label29.setFont(label29.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label29.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN30.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label30.setText("I");
                label30.setForeground(Color.decode("#009900"));
                label30.setFont(label30.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label30.setText("F");
                label30.setForeground(Color.RED);
                label30.setFont(label30.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label30.setText("E");
                label30.setForeground(Color.decode("#FE4B0C"));
                label30.setFont(label30.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label30.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN31.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label31.setText("I");
                label31.setForeground(Color.decode("#009900"));
                label31.setFont(label31.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label31.setText("F");
                label31.setForeground(Color.RED);
                label31.setFont(label31.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label31.setText("E");
                label31.setForeground(Color.decode("#FE4B0C"));
                label31.setFont(label31.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label31.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN32.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label32.setText("I");
                label32.setForeground(Color.decode("#009900"));
                label32.setFont(label32.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label32.setText("F");
                label32.setForeground(Color.RED);
                label32.setFont(label32.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label32.setText("E");
                label32.setForeground(Color.decode("#FE4B0C"));
                label32.setFont(label32.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label32.setText("");
        }
        
         fh = sumarRestarDiasFecha(fh, 1);
         labelN33.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
         if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
             if (fechaInicio.equals(fh)) {
                 label33.setText("I");
                 label33.setForeground(Color.decode("#009900"));
                 label33.setFont(label33.getFont().deriveFont(Font.BOLD));
             } else if (fechaFinal.equals(fh)) {
                 label33.setText("F");
                 label33.setForeground(Color.RED);
                 label33.setFont(label33.getFont().deriveFont(Font.BOLD));
             } else if (fechaEntrega.equals(fh)) {
                 label33.setText("E");
                 label33.setForeground(Color.decode("#FE4B0C"));
                 label33.setFont(label33.getFont().deriveFont(Font.BOLD));
             }
         } else {
             label33.setText("");
         }
         
         fh = sumarRestarDiasFecha(fh, 1);
         labelN34.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
         if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
             if (fechaInicio.equals(fh)) {
                 label34.setText("I");
                 label34.setForeground(Color.decode("#009900"));
                 label34.setFont(label34.getFont().deriveFont(Font.BOLD));
             } else if (fechaFinal.equals(fh)) {
                 label34.setText("F");
                 label34.setForeground(Color.RED);
                 label34.setFont(label34.getFont().deriveFont(Font.BOLD));
             } else if (fechaEntrega.equals(fh)) {
                 label34.setText("E");
                 label34.setForeground(Color.decode("#FE4B0C"));
                 label34.setFont(label34.getFont().deriveFont(Font.BOLD));
             }
         } else {
             label34.setText("");
         }
         
         fh = sumarRestarDiasFecha(fh, 1);
         labelN35.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
         if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
             if (fechaInicio.equals(fh)) {
                 label35.setText("I");
                 label35.setForeground(Color.decode("#009900"));
                 label35.setFont(label35.getFont().deriveFont(Font.BOLD));
             } else if (fechaFinal.equals(fh)) {
                 label35.setText("F");
                 label35.setForeground(Color.RED);
                 label35.setFont(label35.getFont().deriveFont(Font.BOLD));
             } else if (fechaEntrega.equals(fh)) {
                 label35.setText("E");
                 label35.setForeground(Color.decode("#FE4B0C"));
                 label35.setFont(label35.getFont().deriveFont(Font.BOLD));
             }
         } else {
             label35.setText("");
         }
         
        fh = sumarRestarDiasFecha(fh,1);
        labelN36.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label36.setText("I");
                label36.setForeground(Color.decode("#009900"));
                label36.setFont(label36.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label36.setText("F");
                label36.setForeground(Color.RED);
                label36.setFont(label36.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label36.setText("E");
                label36.setForeground(Color.decode("#FE4B0C"));
                label36.setFont(label36.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label36.setText("");
        }
        fh = sumarRestarDiasFecha(fh,1);
        labelN37.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label37.setText("I");
                label37.setForeground(Color.decode("#009900"));
                label37.setFont(label37.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label37.setText("F");
                label37.setForeground(Color.RED);
                label37.setFont(label37.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label37.setText("E");
                label37.setForeground(Color.decode("#FE4B0C"));
                label37.setFont(label37.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label37.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN38.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label38.setText("I");
                label38.setForeground(Color.decode("#009900"));
                label38.setFont(label38.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label38.setText("F");
                label38.setForeground(Color.RED);
                label38.setFont(label38.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label38.setText("E");
                label38.setForeground(Color.decode("#FE4B0C"));
                label38.setFont(label38.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label38.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN39.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label39.setText("I");
                label39.setForeground(Color.decode("#009900"));
                label39.setFont(label39.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label39.setText("F");
                label39.setForeground(Color.RED);
                label39.setFont(label39.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label39.setText("E");
                label39.setForeground(Color.decode("#FE4B0C"));
                label39.setFont(label39.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label39.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN40.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label40.setText("I");
                label40.setForeground(Color.decode("#009900"));
                label40.setFont(label40.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label40.setText("F");
                label40.setForeground(Color.RED);
                label40.setFont(label40.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label40.setText("E");
                label40.setForeground(Color.decode("#FE4B0C"));
                label40.setFont(label40.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label40.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN41.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label41.setText("I");
                label41.setForeground(Color.decode("#009900"));
                label41.setFont(label41.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label41.setText("F");
                label41.setForeground(Color.RED);
                label41.setFont(label41.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label41.setText("E");
                label41.setForeground(Color.decode("#FE4B0C"));
                label41.setFont(label41.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label41.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN42.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label42.setText("I");
                label42.setForeground(Color.decode("#009900"));
                label42.setFont(label42.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label42.setText("F");
                label42.setForeground(Color.RED);
                label42.setFont(label42.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label42.setText("E");
                label42.setForeground(Color.decode("#FE4B0C"));
                label42.setFont(label42.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label42.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN43.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label43.setText("I");
                label43.setForeground(Color.decode("#009900"));
                label43.setFont(label43.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label43.setText("F");
                label43.setForeground(Color.RED);
                label43.setFont(label43.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label43.setText("E");
                label43.setForeground(Color.decode("#FE4B0C"));
                label43.setFont(label43.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label43.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN44.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label44.setText("I");
                label44.setForeground(Color.decode("#009900"));
                label44.setFont(label44.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label44.setText("F");
                label44.setForeground(Color.RED);
                label44.setFont(label44.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label44.setText("E");
                label44.setForeground(Color.decode("#FE4B0C"));
                label44.setFont(label44.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label44.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN45.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label45.setText("I");
                label45.setForeground(Color.decode("#009900"));
                label45.setFont(label45.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label45.setText("F");
                label45.setForeground(Color.RED);
                label45.setFont(label45.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label45.setText("E");
                label45.setForeground(Color.decode("#FE4B0C"));
                label45.setFont(label45.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label45.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN46.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label46.setText("I");
                label46.setForeground(Color.decode("#009900"));
                label46.setFont(label46.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label46.setText("F");
                label46.setForeground(Color.RED);
                label46.setFont(label46.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label46.setText("E");
                label46.setForeground(Color.decode("#FE4B0C"));
                label46.setFont(label46.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label46.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN47.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label47.setText("I");
                label47.setForeground(Color.decode("#009900"));
                label47.setFont(label47.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label47.setText("F");
                label47.setForeground(Color.RED);
                label47.setFont(label47.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label47.setText("E");
                label47.setForeground(Color.decode("#FE4B0C"));
                label47.setFont(label47.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label47.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN48.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label48.setText("I");
                label48.setForeground(Color.decode("#009900"));
                label48.setFont(label48.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label48.setText("F");
                label48.setForeground(Color.RED);
                label48.setFont(label48.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label48.setText("E");
                label48.setForeground(Color.decode("#FE4B0C"));
                label48.setFont(label48.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label48.setText("");
        }
        
        fh = sumarRestarDiasFecha(fh,1);
        labelN49.setText(String.format("%02d", Integer.parseInt(diaFecha(fh))));
        if (fechaInicio.equals(fh) || fechaFinal.equals(fh) || fechaEntrega.equals(fh)) {
            if (fechaInicio.equals(fh)) {
                label49.setText("I");
                label49.setForeground(Color.decode("#009900"));
                label49.setFont(label49.getFont().deriveFont(Font.BOLD));
            } else if (fechaFinal.equals(fh)) {
                label49.setText("F");
                label49.setForeground(Color.RED);
                label49.setFont(label49.getFont().deriveFont(Font.BOLD));
            } else if (fechaEntrega.equals(fh)) {
                label49.setText("E");
                label49.setForeground(Color.decode("#FE4B0C"));
                label49.setFont(label49.getFont().deriveFont(Font.BOLD));
            }
        } else {
            label49.setText("");
        }
        
    }

}
