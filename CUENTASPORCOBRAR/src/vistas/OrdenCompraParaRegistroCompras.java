/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controller.ContactoProveedorController;
import controller.DetalleOrdenCompraController;
import controller.OrdenCompraController;
import controller.ProveedorController;
import controller.UsuarioController;
import entity.ContactoProveedor;
import entity.DetalleOrdenCompra;
import entity.OrdenCompra;
import entity.Proveedor;
import entity.Usuario;
import exportarexcel.clsExportarExcel;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import reportes.GenerarReporte;

/**
 *
 * @author ARCRODINPC-05
 */


public class OrdenCompraParaRegistroCompras extends javax.swing.JInternalFrame {

    /**
     * Creates new form OrdenCompraVista
     */
    private int idOrdenCompra;
    static String anio;
    private int numOrdenCompra;
    static int numOrdenCompraParaModificar;
    private int idProveedor;
    private int idContactoProveedor;
    private String fechaEmision;
    private String moneda;
    private String formaPago;
    private String tiempoEntrega;
    private String fechaEntrega;
    private int idUsuario;
    private String lugarEntrega;
    private String observacion;
    private String docExterno;
    private String campo2="";
    
    private String comboEstadoOrdenCompra;
    
    private String filtro ="p.razonSocial";
    
    private int tabla;


    public OrdenCompraParaRegistroCompras() {
        initComponents();
        listaOrdenCompra(filtro,txtFiltro.getText());
        habilitarInicio();
        jTable1.setDefaultRenderer (Object.class, new RowsRenderer());
    }
    
    public class RowsRenderer extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable jTable1, Object value, boolean selected, boolean focused, int row, int column) {
//            jTable1.setBackground(Color.white);
//            jTable1.setForeground(Color.black);
            super.getTableCellRendererComponent(jTable1, value, selected, focused, row, column);
            if ("APROBADO".equals((jTable1.getValueAt(row, column)))) {
                this.setOpaque(true);
                this.setForeground(Color.decode("#009900"));//verde
                
            } else if ("ANULADO".equals((jTable1.getValueAt(row, column)))) {
                this.setOpaque(true);
                this.setForeground(Color.RED);
                
            } else if ((!"APROBADO".equals((jTable1.getValueAt(row, column)))) && 
                       (!"ANULADO".equals((jTable1.getValueAt(row, column))))) {
                this.setOpaque(true);
                this.setForeground(Color.BLACK);
            }
            
            if (selected) {
                setBackground(Color.decode("#39698a"));
                setForeground(Color.decode("#FFFFFF"));
            } else{
                setBackground(Color.WHITE);
            }
            
            return this;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboBoxFiltro = new javax.swing.JComboBox<>();
        txtFiltro = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtNumOrdCompra = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtFechaEmision = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtProveedor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtContactoProveedor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtMoneda = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtFormaPago = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTiempoEntrega = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtFechaEntrega = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtLugarEntrega = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        labelIgv = new javax.swing.JLabel();
        labelTotal = new javax.swing.JLabel();
        buttonCerrar = new javax.swing.JButton();
        labelSubtotal = new javax.swing.JLabel();
        buttonExportExcel = new javax.swing.JButton();
        buttonRegistrarCompra = new javax.swing.JButton();
        comboBoxEstadoOrdenCompra = new javax.swing.JComboBox<>();
        txtObs = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Vista de Ordenes de Compra");

        comboBoxFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "PROVEEDOR", "NUM. ORDEN COMPRA", "CONTACTO PROVEEDOR", "FECHA EMISIÓN", "LUGAR ENTREGA ", "FECHA ENTREGA", "ESTADO" }));
        comboBoxFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxFiltroItemStateChanged(evt);
            }
        });

        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroKeyReleased(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idOC", "N°OrdComp.", "Proveedor ", "Contacto Prov.", "Fecha Emisión", "Forma Pago", "Tiempo Entrega", "Fecha Entrega", "Lugar Entrega", "Estado", "Observación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(10).setPreferredWidth(100);
        }

        jLabel1.setText("N° Ord. Comp.:");

        jLabel2.setText("Fecha Emisión:");

        jLabel3.setText("Proveedor:");

        jLabel4.setText("Contacto Proveedor:");

        jLabel5.setText("Moneda:");

        jLabel6.setText("Forma de Pago:");

        jLabel7.setText("Tiempo de Entrega:");

        jLabel8.setText("Fecha Entrega:");

        jLabel9.setText("Lugar Entrega:");

        jLabel10.setText("Elaborado por:");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idDoc", "Item", "Cant.", "Descripción", "Precio Unit.", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(40);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(40);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(470);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(150);
            jTable2.getColumnModel().getColumn(5).setPreferredWidth(150);
        }

        jLabel12.setText("Subtotal:");

        jLabel13.setText("I.G.V.:");

        jLabel14.setText("Total:");

        labelIgv.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelIgv.setText("000000.00");

        labelTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelTotal.setText("000000.00");

        buttonCerrar.setText("Cerrar");
        buttonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCerrarActionPerformed(evt);
            }
        });

        labelSubtotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelSubtotal.setText("000000.00");

        buttonExportExcel.setText("ExportExcel");
        buttonExportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExportExcelActionPerformed(evt);
            }
        });

        buttonRegistrarCompra.setText("Registrar Compra");
        buttonRegistrarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegistrarCompraActionPerformed(evt);
            }
        });

        comboBoxEstadoOrdenCompra.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "APROBADO", "ANULADO" }));
        comboBoxEstadoOrdenCompra.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxEstadoOrdenCompraItemStateChanged(evt);
            }
        });

        jLabel11.setText("Estado:");

        jLabel18.setText("Obs:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelIgv, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(285, 285, 285)
                                .addComponent(buttonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(comboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(470, 470, 470)
                                .addComponent(buttonExportExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 873, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(buttonRegistrarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNumOrdCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFechaEmision, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTiempoEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFechaEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel9))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtLugarEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboBoxEstadoOrdenCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtContactoProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtObs, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 19, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonExportExcel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNumOrdCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtFechaEmision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtContactoProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtTiempoEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(txtFechaEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(comboBoxEstadoOrdenCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(jLabel18)
                        .addComponent(txtObs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtLugarEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonRegistrarCompra))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(labelSubtotal))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(labelIgv))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(labelTotal))
                        .addGap(19, 30, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(buttonCerrar)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_buttonCerrarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        tabla = jTable1.getSelectedRow();
        idOrdenCompra= Integer.parseInt(jTable1.getValueAt(tabla, 0).toString());
        try {
            consultarOrdenCompra(idOrdenCompra);
        } catch (Exception ex) {
            Logger.getLogger(OrdenCompraParaRegistroCompras.class.getName()).log(Level.SEVERE, null, ex);
        }
        listaDetalleOrdenCompra(idOrdenCompra);
        try {
            consultarPago(idOrdenCompra);
        } catch (Exception ex) {
            Logger.getLogger(OrdenCompraParaRegistroCompras.class.getName()).log(Level.SEVERE, null, ex);
        }
        habilitarBuscar();
    }//GEN-LAST:event_jTable1MouseClicked

    private void comboBoxFiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxFiltroItemStateChanged
         if (comboBoxFiltro.getSelectedItem() == "PROVEEDOR") {
            filtro = "p.razonSocial";
            listaOrdenCompra(filtro,txtFiltro.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "NUM. ORDEN COMPRA") {
            filtro = "o.oc_num";
            listaOrdenCompra(filtro,txtFiltro.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "CONTACTO PROVEEDOR") {
            filtro = "concat(c.nombres,' ',c.apellidos)";
            listaOrdenCompra(filtro,txtFiltro.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "FECHA EMISIÓN") {
            filtro = "o.oc_fecha";
            listaOrdenCompra(filtro,txtFiltro.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "LUGAR ENTREGA") {
            filtro = "o.oc_lugarEntrega";
            listaOrdenCompra(filtro,txtFiltro.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "FECHA ENTREGA") {
            filtro = "o.oc_fechaEntrega";
            listaOrdenCompra(filtro,txtFiltro.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "ESTADO") {
            filtro = "o.oc_estado";
            listaOrdenCompra(filtro,txtFiltro.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "SELECCIONAR") {
            filtro = "p.razonSocial";
            listaOrdenCompra(filtro,txtFiltro.getText());
            System.out.println(filtro);
        }
    }//GEN-LAST:event_comboBoxFiltroItemStateChanged

    private void txtFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyReleased
        listaOrdenCompra(filtro,txtFiltro.getText());
    }//GEN-LAST:event_txtFiltroKeyReleased

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_UP)) {
            tabla = jTable1.getSelectedRow();
            idOrdenCompra = Integer.parseInt(jTable1.getValueAt(tabla, 0).toString());
            try {
                consultarOrdenCompra(idOrdenCompra);
            } catch (Exception ex) {
                Logger.getLogger(OrdenCompraParaRegistroCompras.class.getName()).log(Level.SEVERE, null, ex);
            }
            listaDetalleOrdenCompra(idOrdenCompra);
            try {
                consultarPago(idOrdenCompra);
            } catch (Exception ex) {
                Logger.getLogger(OrdenCompraParaRegistroCompras.class.getName()).log(Level.SEVERE, null, ex);
            }
            habilitarBuscar();
        }
    }//GEN-LAST:event_jTable1KeyReleased

    private void buttonExportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExportExcelActionPerformed
        clsExportarExcel objeto = new clsExportarExcel();
        try {
            objeto.exportarExcel(jTable1);
        } catch (IOException ex) {
            Logger.getLogger(CajaChicaRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonExportExcelActionPerformed

    private void buttonRegistrarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegistrarCompraActionPerformed
        RegistrarCompras.numOrdenCompraYAnioParaRegistro();
        dispose();
    }//GEN-LAST:event_buttonRegistrarCompraActionPerformed

    private void comboBoxEstadoOrdenCompraItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxEstadoOrdenCompraItemStateChanged
        if (comboBoxEstadoOrdenCompra.getSelectedIndex() != 0) {
            comboEstadoOrdenCompra = comboBoxEstadoOrdenCompra.getSelectedItem().toString();
            System.out.println(comboEstadoOrdenCompra);
        } else {
            comboEstadoOrdenCompra = "";
        }
    }//GEN-LAST:event_comboBoxEstadoOrdenCompraItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCerrar;
    private javax.swing.JButton buttonExportExcel;
    private javax.swing.JButton buttonRegistrarCompra;
    private javax.swing.JComboBox<String> comboBoxEstadoOrdenCompra;
    private javax.swing.JComboBox<String> comboBoxFiltro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel labelIgv;
    private javax.swing.JLabel labelSubtotal;
    private javax.swing.JLabel labelTotal;
    private javax.swing.JTextField txtContactoProveedor;
    private javax.swing.JTextField txtFechaEmision;
    private javax.swing.JTextField txtFechaEntrega;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JTextField txtFormaPago;
    private javax.swing.JTextField txtLugarEntrega;
    private javax.swing.JTextField txtMoneda;
    private javax.swing.JTextField txtNumOrdCompra;
    private javax.swing.JTextField txtObs;
    private javax.swing.JTextField txtProveedor;
    private javax.swing.JTextField txtTiempoEntrega;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
    
    OrdenCompraController ordencompracontroler=new OrdenCompraController();
    OrdenCompra ordencompra;
    
    DetalleOrdenCompraController detalleordencompracontroler= new DetalleOrdenCompraController();
    DetalleOrdenCompra detalleordencompra;
    
    ProveedorController proveedorcontroler= new ProveedorController();
    Proveedor proveedor;
    
    ContactoProveedorController contactoproveedorcontroler= new ContactoProveedorController();
    ContactoProveedor contactoproveedor;
    
    UsuarioController usuariocontroler=new UsuarioController();
    Usuario usuario;
    
//------------------------ Procesar -------------------------------------
 void procesar(int op) {
        ordencompra = leerDatos();
        try {
                 String msg = ordencompracontroler.OrdenCompraProcesar(ordencompra, op);
            JOptionPane.showMessageDialog(null, msg);
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("Error" + e.getMessage());
        }
    } 
 
 //----------------------- Leer Datos ----------------------------------------
 
     OrdenCompra leerDatos() {
        OrdenCompra ordcom = new OrdenCompra();
        
        System.out.println("entrando a leer datos");
        
        ordcom.setOc_id(idOrdenCompra);
        ordcom.setOc_num(numOrdenCompra);
        ordcom.setOc_fecha(fechaEmision);
        ordcom.setOc_idProveedor_fk(idProveedor);
        ordcom.setOc_idContactoProv_fk(idContactoProveedor);
        ordcom.setOc_moneda(moneda);
        ordcom.setOc_formaPago(formaPago);
        ordcom.setOc_tiempoEntrega(tiempoEntrega);
        ordcom.setOc_fechaEntrega(fechaEntrega);
        ordcom.setOc_docExterno(docExterno);
        ordcom.setOc_idUsuario_fk(idUsuario);
        ordcom.setOc_lugarEntrega(lugarEntrega);
        ordcom.setOc_estado(comboEstadoOrdenCompra);
        ordcom.setOc_observacion(txtObs.getText());
        ordcom.setOc_campoAdd2(campo2);
            
        return ordcom;
    }
    
//--------------------------- Consultar Orden Compra ---------------------------
  private void consultarProveedor(int idP) throws Exception {
        proveedor = proveedorcontroler.ProveedorBuscarId(idP);
        if (proveedor != null) {
            
            idProveedor = proveedor.getIdProveedor();
            txtProveedor.setText(proveedor.getRazonSocial());

            System.out.println("Proveedor información: " + proveedor.getIdProveedor() + ", " + proveedor.getRazonSocial()
                    + ", " + proveedor.getRuc() + ", " + proveedor.getDireccion());

        } else {
            JOptionPane.showMessageDialog(null, "Proveedor no esta registrado");
            //System.out.println("Error");
        }
    }
  
   private void consultarContactoProveedorId(int idCP) throws Exception {

        contactoproveedor = contactoproveedorcontroler.ContactoProveedorBuscar(idCP);
        if (contactoproveedor != null) {
            idContactoProveedor = contactoproveedor.getIdContactoProveedor();
            txtContactoProveedor.setText(contactoproveedor.getNombres()+" "+contactoproveedor.getApellidos());
            
        } else {
            JOptionPane.showMessageDialog(null, "EL Proveedor no tiene contactos, Registre un contacto!!!!");
            //System.out.println("Error");
        }
    }
 
    private void consultarUsuario(int idUs) throws Exception {
        usuario = usuariocontroler.UsuarioBuscar2(idUs);
        if (usuario != null) {
            txtUsuario.setText( usuario.getNombres()+ " " +usuario.getApellidos());
        } else {
            JOptionPane.showMessageDialog(null, "Usuario no registrado");
            //System.out.println("Error");
        }
    }
    private void consultarOrdenCompra(int id) throws Exception {
        ordencompra = ordencompracontroler.OrdenCompraBuscar(id);
        if (ordencompra != null) {
            
            idOrdenCompra = ordencompra.getOc_id();
            numOrdenCompra = ordencompra.getOc_num();
            numOrdenCompraParaModificar= ordencompra.getOc_num();
            txtNumOrdCompra.setText(String.format("%06d", ordencompra.getOc_num()));
            fechaEmision = ordencompra.getOc_fecha();
            anio=anioFecha(ordencompra.getOc_fecha());
            txtFechaEmision.setText(ordencompra.getOc_fecha());
            idProveedor = ordencompra.getOc_idProveedor_fk();
            consultarProveedor(idProveedor);
            
            idContactoProveedor = ordencompra.getOc_idContactoProv_fk();
            consultarContactoProveedorId(idContactoProveedor);
            
            moneda = ordencompra.getOc_moneda();
            txtMoneda.setText(ordencompra.getOc_moneda());
            
            formaPago = ordencompra.getOc_formaPago();
            txtFormaPago.setText(ordencompra.getOc_formaPago());
            
            fechaEntrega= ordencompra.getOc_fechaEntrega();
            txtFechaEntrega.setText(ordencompra.getOc_fechaEntrega());
            
            tiempoEntrega=ordencompra.getOc_tiempoEntrega();
            txtTiempoEntrega.setText(ordencompra.getOc_tiempoEntrega());
           
            idUsuario=ordencompra.getOc_idUsuario_fk();
            consultarUsuario(idUsuario);
            
            lugarEntrega=ordencompra.getOc_lugarEntrega();
            txtLugarEntrega.setText(ordencompra.getOc_lugarEntrega());
            
            comboEstadoOrdenCompra=ordencompra.getOc_estado();
            System.out.println("Estado de orden de compra" +comboEstadoOrdenCompra);

            String testValue4 = comboEstadoOrdenCompra;
            
            for (int i = 0; i < comboBoxEstadoOrdenCompra.getModel().getSize(); i++) {
                if (comboBoxEstadoOrdenCompra.getItemAt(i).equals(testValue4)) {
                    System.out.println(i);
                    comboBoxEstadoOrdenCompra.setSelectedIndex(i);
                    break;
                }else {
                    comboBoxEstadoOrdenCompra.setSelectedIndex(0);
                }
            }
            docExterno=ordencompra.getOc_docExterno();
            txtObs.setText(ordencompra.getOc_observacion());
            observacion=ordencompra.getOc_observacion();
        } else {
            JOptionPane.showMessageDialog(null, "Orden de Compra no registrado");
            System.out.println("Orden de Compra no registrado");
        }
    }
    
    //--------------------------- Consultar Pago ---------------------------------
    
  void consultarPago(int idoc) throws Exception {
        detalleordencompra = detalleordencompracontroler.DetalleOrdenCompraTotal(idoc);

        if (detalleordencompra != null) {
            if (detalleordencompra.getSubtotal() != null) {
                labelSubtotal.setText(detalleordencompra.getSubtotal());
            } else {
                labelSubtotal.setText("000000.00");
            }
            if (detalleordencompra.getIgv() != null) {
                labelIgv.setText(detalleordencompra.getIgv());
            } else {
                labelIgv.setText("000000.00");
            }
            if (detalleordencompra.getTotal() != null) {
                labelTotal.setText(detalleordencompra.getTotal());
            } else {
                labelTotal.setText("000000.00");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Cuentas no registradas");
            //System.out.println("Error");
        }
    }
//------------------------------ Tabla ------------------------------------------------------
 void listaOrdenCompra(String valorFiltro,String filtrolike) {
        List<OrdenCompra> lista;
        try {
            lista = ordencompracontroler.OrdenCompraFiltrar(valorFiltro, filtrolike);
            verPedido(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    void verPedido(List<OrdenCompra> lista) {
        String numeroorden;
        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        tabla.setRowCount(0);
        for (OrdenCompra ordc : lista) {
            numeroorden=String.format("%06d",ordc.getOc_num());
            Object[] fila = {ordc.getOc_id(),numeroorden, ordc.getProveedor(), ordc.getContacto(), ordc.getOc_fecha(),
                             ordc.getOc_formaPago(), ordc.getOc_tiempoEntrega(), ordc.getOc_fechaEntrega(),
                             ordc.getOc_lugarEntrega(), ordc.getOc_estado(), ordc.getOc_observacion()};
            tabla.addRow(fila);
        }
    }
    
//------------------------- Lista detalle Pedido ---------------------------
    void listaDetalleOrdenCompra(int id) {
        List<DetalleOrdenCompra> lista;
        try {
            lista = detalleordencompracontroler.DetalleOrdenCompraFiltrar(id);
            verDetalleOrdenCompra(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    private void verDetalleOrdenCompra(List<DetalleOrdenCompra> lista) {
        String it, f;
        DefaultTableModel tabla = (DefaultTableModel) jTable2.getModel();
        tabla.setRowCount(0);
        for (DetalleOrdenCompra detoc : lista) {
            if (!"".equals(detoc.getDoc_precioUnit())) {
                it = detoc.getDoc_total();
            } else {
                it = "";
            }

            Object[] fila = {detoc.getDoc_id(), detoc.getDoc_item(), detoc.getDoc_cantidad(),
                detoc.getDoc_desc(), detoc.getDoc_precioUnit(), it};
            tabla.addRow(fila);
        }

    }
//--------------------------- Limpiar --------------------------------------
    
    void limpiar(){
    
        txtFechaEmision.setText("");
        txtProveedor.setText("");
        txtContactoProveedor.setText("");
        txtMoneda.setText("");
        txtFormaPago.setText("");
        txtTiempoEntrega.setText("");
        txtFechaEntrega.setText("");
        txtObs.setText("");
        txtLugarEntrega.setText("");
        txtUsuario.setText("");
        comboBoxEstadoOrdenCompra.setSelectedIndex(0);
        labelSubtotal.setText("000000.00");
        labelIgv.setText("000000.00");
        labelTotal.setText("000000.00");
        idOrdenCompra = 0;
    }
    
//------------------------- Habilitar -----------------------------------------
    
    void habilitarInicio(){

        txtNumOrdCompra.setEnabled(false);
        txtFechaEmision.setEnabled(false);
        txtProveedor.setEnabled(false);
        txtContactoProveedor.setEnabled(false);
        txtMoneda.setEnabled(false);
        txtFormaPago.setEnabled(false);
        txtTiempoEntrega.setEnabled(false);
        txtFechaEntrega.setEnabled(false);
        txtObs.setEnabled(false);
        txtLugarEntrega.setEnabled(false);
        txtUsuario.setEnabled(false);
        comboBoxEstadoOrdenCompra.setEnabled(false);
       
    }
    
    void habilitarBuscar(){
        
        txtNumOrdCompra.setEnabled(true);
        txtFechaEmision.setEnabled(true);
        txtProveedor.setEnabled(true);
        txtContactoProveedor.setEnabled(true);
        txtMoneda.setEnabled(true);
        txtFormaPago.setEnabled(true);
        txtTiempoEntrega.setEnabled(true);
        txtFechaEntrega.setEnabled(true);
        txtObs.setEnabled(false);
        txtLugarEntrega.setEnabled(true);
        txtUsuario.setEnabled(true);
        comboBoxEstadoOrdenCompra.setEnabled(false);
        
    }
    
    void habilitarModificar(){
    
        txtNumOrdCompra.setEnabled(false);
        txtFechaEmision.setEnabled(false);
        txtProveedor.setEnabled(false);
        txtContactoProveedor.setEnabled(false);
        txtMoneda.setEnabled(false);
        txtFormaPago.setEnabled(false);
        txtTiempoEntrega.setEnabled(false);
        txtFechaEntrega.setEnabled(false);
        txtObs.setEnabled(true);
        txtLugarEntrega.setEnabled(false);
        txtUsuario.setEnabled(false);
        comboBoxEstadoOrdenCompra.setEnabled(true);
        
    }
    
    void habilitarGuardar(){
        
        txtNumOrdCompra.setEnabled(true);
        txtFechaEmision.setEnabled(true);
        txtProveedor.setEnabled(true);
        txtContactoProveedor.setEnabled(true);
        txtMoneda.setEnabled(true);
        txtFormaPago.setEnabled(true);
        txtTiempoEntrega.setEnabled(true);
        txtFechaEntrega.setEnabled(true);
        txtObs.setEnabled(false);
        txtLugarEntrega.setEnabled(true);
        txtUsuario.setEnabled(true);
        comboBoxEstadoOrdenCompra.setEnabled(false);
      
    }
    
    
 //------------------------------ Fecha Anio ------------------------------------
    public String anioFecha(String f) throws ParseException {
        Calendar fecha = Calendar.getInstance();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        Date fechaDate = null;

        fechaDate = formato.parse(f);

        SimpleDateFormat formatofecha = new SimpleDateFormat("yyyy");
        return formatofecha.format(fechaDate);
    }
}
