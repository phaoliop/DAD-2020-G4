/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controller.ClienteController;
import controller.ContactoClienteController;
import controller.DetalleGuiaDeRemisionController;
import controller.DetalleProformaController;
import controller.ProformaController;
import entity.Cliente;
import entity.ContactoCliente;
import entity.DetalleGuiaDeRemision;
import entity.DetalleProforma;
import entity.Proforma;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static vistas.Clientes.x;

/**
 *
 * @author ARCRODINPC-06
 */
public class ProformaAGuiaRemision extends javax.swing.JInternalFrame {

    /**
     * Creates new form ProformaAGuiaRemision
     */
    int idProforma;
    int idCliente;
    int idConCli;
    int idDetGuia;
    String comboContacto;
    String nombre;
    String apellido;
    String dni;
    String atencion;
    String categoria;
    String cant;
    String descripcion;
    int tabla;
    
    public ProformaAGuiaRemision() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCodProf = new javax.swing.JTextField();
        buttonBuscarProf = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        comboBoxContactoCli = new javax.swing.JComboBox<>();
        buttonJalarConCli = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCant = new javax.swing.JTextField();
        txtCod = new javax.swing.JTextField();
        txtDescrip = new javax.swing.JTextField();
        txtUniMed = new javax.swing.JTextField();
        buttonRegistrar = new javax.swing.JButton();
        buttonCerrar = new javax.swing.JButton();
        buttonLimpiarProf = new javax.swing.JButton();
        buttonAgregarContacto = new javax.swing.JButton();

        setClosable(true);
        setTitle("Información del detalle de la Cotización para la Guia de Remisión ");

        jLabel1.setText("N° de Cotización: ");

        buttonBuscarProf.setText("Buscar");
        buttonBuscarProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarProfActionPerformed(evt);
            }
        });

        jLabel2.setText("Cliente:");

        jLabel3.setText("Contacto:");

        comboBoxContactoCli.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        comboBoxContactoCli.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxContactoCliItemStateChanged(evt);
            }
        });

        buttonJalarConCli.setText("Jalar Datos");
        buttonJalarConCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonJalarConCliActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Cantidad", "Descripcion", "Precio Unitario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(400);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(90);
        }

        jLabel4.setText("Cantidad");

        jLabel5.setText("Código");

        jLabel6.setText("Descripcion");

        jLabel7.setText("Unidad de Medida");

        buttonRegistrar.setText("Registrar");
        buttonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegistrarActionPerformed(evt);
            }
        });

        buttonCerrar.setText("Cerrar");
        buttonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCerrarActionPerformed(evt);
            }
        });

        buttonLimpiarProf.setText("Limpiar");
        buttonLimpiarProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLimpiarProfActionPerformed(evt);
            }
        });

        buttonAgregarContacto.setText("Agregar Contacto");
        buttonAgregarContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAgregarContactoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCodProf, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonBuscarProf)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(buttonLimpiarProf)
                                        .addGap(92, 92, 92)
                                        .addComponent(jLabel3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(buttonAgregarContacto)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(buttonJalarConCli))
                                    .addComponent(comboBoxContactoCli, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 55, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel4)
                                .addGap(38, 38, 38)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtDescrip, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtUniMed))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(311, 311, 311)
                        .addComponent(buttonRegistrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonCerrar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBuscarProf)
                    .addComponent(jLabel3)
                    .addComponent(comboBoxContactoCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonLimpiarProf))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonJalarConCli)
                    .addComponent(buttonAgregarContacto))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescrip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUniMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonRegistrar)
                    .addComponent(buttonCerrar))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_buttonCerrarActionPerformed

    private void buttonBuscarProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarProfActionPerformed
        int numa=(Integer.parseInt(txtCodProf.getText()));
        String numeroProforma= String.format("%06d",numa );
        try {
            consultarProforma(numeroProforma);
        } catch (Exception ex) {
            Logger.getLogger(ProformaAGuiaRemision.class.getName()).log(Level.SEVERE, null, ex);
        }
       listaDetalleProforma();
    }//GEN-LAST:event_buttonBuscarProfActionPerformed

    private void buttonLimpiarProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLimpiarProfActionPerformed
        System.out.println("11111111111111111111");
        limpiarProf();
        System.out.println("99999999999999999999");
        
    }//GEN-LAST:event_buttonLimpiarProfActionPerformed

    private void buttonJalarConCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonJalarConCliActionPerformed
        try {
//            consultarContactoCliente(comboContacto);
        } catch (Exception ex) {
            Logger.getLogger(ProformaAGuiaRemision.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtDescrip.setText(atencion);
    }//GEN-LAST:event_buttonJalarConCliActionPerformed

    private void buttonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegistrarActionPerformed
        procesar(1);
        limpiarDatos();
        GuiaRemision.listaDetalleGuiaDeRemision();
        
    }//GEN-LAST:event_buttonRegistrarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        limpiarDatos(); 
        tabla = jTable1.getSelectedRow();
        cant=jTable1.getValueAt(tabla, 1).toString();
        descripcion=jTable1.getValueAt(tabla, 2).toString();
        txtCant.setText(cant);
        txtDescrip.setText(descripcion);
    }//GEN-LAST:event_jTable1MouseClicked

    private void comboBoxContactoCliItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxContactoCliItemStateChanged
        comboContacto=comboBoxContactoCli.getSelectedItem().toString();
        System.out.println(comboContacto);
     
    }//GEN-LAST:event_comboBoxContactoCliItemStateChanged

    private void buttonAgregarContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAgregarContactoActionPerformed
         x=idCliente;
        if (x!= 0) {
            ContactosClientes conCliente = null;
             try {
                 conCliente = new ContactosClientes();
             } catch (Exception ex) {
                 Logger.getLogger(ProformaAGuiaRemision.class.getName()).log(Level.SEVERE, null, ex);
             }
            Principal.jDesktopPane1.add(conCliente);
            conCliente.toFront();
            conCliente.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Agregar Cliente");

        }
    }//GEN-LAST:event_buttonAgregarContactoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAgregarContacto;
    private javax.swing.JButton buttonBuscarProf;
    private javax.swing.JButton buttonCerrar;
    private javax.swing.JButton buttonJalarConCli;
    private javax.swing.JButton buttonLimpiarProf;
    private javax.swing.JButton buttonRegistrar;
    private javax.swing.JComboBox<String> comboBoxContactoCli;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCant;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtCod;
    private javax.swing.JTextField txtCodProf;
    private javax.swing.JTextField txtDescrip;
    private javax.swing.JTextField txtUniMed;
    // End of variables declaration//GEN-END:variables

    ProformaController proformacontroler = new ProformaController();
    Proforma proforma;
   
    DetalleGuiaDeRemisionController detGuiaController = new DetalleGuiaDeRemisionController();
    DetalleGuiaDeRemision detGuia;
    
    DetalleProformaController detalleproformacontroler = new DetalleProformaController();
    DetalleProforma detalleproforma;
    
    ClienteController clientecontroler = new ClienteController();
    Cliente cliente;

    ContactoClienteController contactoclientecontroler = new ContactoClienteController();
    ContactoCliente contactocliente;

    
    //----------------------------- Consultar ------------------------------------
    
//    private void consultarContactoCliente(String nombre, int y) throws Exception {
//
//        contactocliente = contactoclientecontroler.ContactoClienteBuscarDni(nombre);
//        if (contactocliente != null) {
//            idConCli = contactocliente.getIdContactoCliente();
//            System.out.println("idCliente"+idConCli);
//            dni=contactocliente.getDni();
//            atencion="ATENCION: "+nombre+" DNI:"+dni;
//            System.out.println(atencion);
//
//        } else {
//            JOptionPane.showMessageDialog(null, "EL Cliente no tiene contactos, Registre un contacto!!!!");
//            //System.out.println("Error");
//        }
//    } 
    
    private void consultarContactoCliente1(int idContacto) throws Exception {

        contactocliente = contactoclientecontroler.ContactoClienteBuscar2(idContacto);
        if (contactocliente != null) {

            nombre = contactocliente.getNombres();
            apellido = contactocliente.getApellidos();
            categoria = nombre + " " + apellido;
            System.out.println(categoria);

        } else {
            JOptionPane.showMessageDialog(null, "Contacto no registrado");
            //System.out.println("Error");
        }
    } 
    
    private void consultarClientePorId(int iddecliente) throws Exception {
        cliente = clientecontroler.ClienteBuscar1(iddecliente);
        if (cliente != null) {

            //txtRazonSocial.setText(pro.getRazonSocial());
            txtCliente.setText(cliente.getRazonSocial());
       

        } else {
            JOptionPane.showMessageDialog(null, "Cliente no registrado por ahora");
            //System.out.println("Error");
        }
    }
    
    
    
    private void consultarProforma(String codigo) throws Exception {
        proforma = proformacontroler.ProformaBuscar(codigo);
        if (proforma != null) {

           idProforma=proforma.getIdProforma();
           txtCodProf.setText(proforma.getCodProforma());
           
           idCliente = proforma.getIdCliente();
           consultarClientePorId(idCliente);
            
           comboBoxContactoCli.setModel(proformacontroler.ListarCombodeContacto(txtCliente.getText(),idCliente));

            idConCli = proforma.getIdContactoCliente();
            System.out.println("idCCli:" + idConCli);
            consultarContactoCliente1(idConCli);
            //consultar contacto asigna a categoria1 su nombre concatenado
            String testValue1 = categoria;
            System.out.println("proforma contacto cliente:"+categoria);
            
            for (int i = 0; i < comboBoxContactoCli.getModel().getSize(); i++) {
                System.out.println("for 1111");
                if (comboBoxContactoCli.getItemAt(i).equals(testValue1)) {
                    System.out.println("for222222222");
                    System.out.println("for "+i);
                    comboBoxContactoCli.setSelectedIndex(i);
                    System.out.println("for 3333333333");
                    break;
                }
            }

//            consultarContactoCliente(categoria);

          
        } else {
            JOptionPane.showMessageDialog(null, "Proforma no registrada");
            //System.out.println("Error");
        }
    }
    
    //---------------------------- Procesar -------------------------------------
    
      void procesar(int op) {
        detGuia = leerDatos();
        try {
            String msg = detGuiaController.DetalleGuiaDeRemisionProcesar(detGuia, op);
            JOptionPane.showMessageDialog(null, msg);
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("Error" + e.getMessage());
        }
    }

// ----------------------------- leer datos ---------------------------------------

        DetalleGuiaDeRemision leerDatos() {
        DetalleGuiaDeRemision detGuia = new DetalleGuiaDeRemision();
        
        detGuia.setIdDetalleGuia(idDetGuia);
        detGuia.setIdGuiaRem(GuiaRemision.idGuiaRem);
        detGuia.setCant(txtCant.getText());
        detGuia.setCod(txtCod.getText());
        detGuia.setDescrip(txtDescrip.getText());
        detGuia.setUniMed(txtUniMed.getText());
        
        return detGuia;
    }
    //----------------------------- Tabla ----------------------------------------
     void listaDetalleProforma() {
        List<DetalleProforma> lista;
        try {
            lista = detalleproformacontroler.DetalleProformaFiltrar(idProforma);
            verDetalleProforma(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    private void verDetalleProforma(List<DetalleProforma> lista) {
        String it,vu,f;
        float uv;
        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        tabla.setRowCount(0);
        for (DetalleProforma detProf : lista) {
            if(!"".equals(detProf.getPrecioUnitario())){
                it=detProf.getImporte();
            }else{
                it="";
          }
            if(!"".equals(detProf.getPrecioUnitario())){
                f=detProf.getItem1();
            }else{
                f="";
          }
           
                Object[] fila = {detProf.getItem(), detProf.getCantidad(), detProf.getDescripcion(), detProf.getPrecioUnitario()};
                tabla.addRow(fila);
            }
        
    }
    
//------------------ Limpiar ------------------
    
 void limpiarProf(){
     System.out.println("222222222222222222222");
   txtCliente.setText("");
     System.out.println("333333333333333333333");
     txtCodProf.setText("");
     System.out.println("4444444444444444444444");
   idProforma=0;
     System.out.println("5555555555555555555555");
   listaDetalleProforma();
     System.out.println("66666666666666666666666");
   comboBoxContactoCli.setModel(new javax.swing.DefaultComboBoxModel(new String[]{}));
     System.out.println("77777777777777777777777");
   categoria="";
     System.out.println("88888888888888888888888");
  
 
 }
    void limpiarDatos() {
        
        txtCant.setText("");
        txtCod.setText("");
        txtDescrip.setText("");
        txtUniMed.setText("");
        
    }
    
   
}
