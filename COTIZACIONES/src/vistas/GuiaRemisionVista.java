/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controller.ClienteController;
import controller.DetalleGuiaDeRemisionController;
import controller.GuiaDeRemisionController;
import controller.MotivoGuiaController;
import entity.Cliente;
import entity.DetalleGuiaDeRemision;
import entity.GuiaDeRemision;
import entity.MotivoGuia;
import exportarexcel.clsExportarExcel;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ARCRODINPC-06
 */
public class GuiaRemisionVista extends javax.swing.JInternalFrame {

    /**
     * Creates new form GuiaRemisionVista
     */
    int tabla;
    static int anio;
    
    int idGuia;
    static String serie;
    static String num;
    String fech;
    
    String fechTras;
    String dirPar;
    String dirLle;
    int idCli;
    String tipoDoc;
    int idMotivo;
    String conclusion;
    String nombTrans;
    String rucTrans;
    String tipoCom;
    String numCom;
    String marca;
    String cert;
    String lic;
    String estado;
    String numPedido;
    
    String estadoCombo;
    String tipo;
    String motivo;
    
    String filtro="c.razonSocial";
    
    MotivoGuiaController motivoguiacontroler = new MotivoGuiaController();
    MotivoGuia motivoguia;
    
    
    public GuiaRemisionVista() throws Exception {
        initComponents();
        listaGuiaDeRemision(filtro,txtLike.getText());
        comboBoxEstado.setEnabled(false);
        txtObser.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false); 
        jTable1.setDefaultRenderer (Object.class, new RowsRenderer());
        comboBoxTipo.setModel(motivoguiacontroler.ListarComboMotivoGuia());
       
    }

    public class RowsRenderer extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable jTable1, Object value, boolean selected, boolean focused, int row, int column) {
//            jTable1.setBackground(Color.white);
//            jTable1.setForeground(Color.black);
            super.getTableCellRendererComponent(jTable1, value, selected, focused, row, column);
            if ("EMITIDO".equals((jTable1.getValueAt(row, column)))) {
                this.setOpaque(true);
                this.setForeground(Color.decode("#009900"));//verde
//                this.setFont(this.getFont().deriveFont( Font.BOLD));
            } else if ("PENDIENTE".equals((jTable1.getValueAt(row, column)))) {
                this.setOpaque(true);
                this.setForeground(Color.decode("#CCCC00"));
//                this.setFont(this.getFont().deriveFont( Font.BOLD));
            } else if ("ANULADO".equals((jTable1.getValueAt(row, column)))) {
                this.setOpaque(true);
                this.setForeground(Color.RED);
//               this.setFont(this.getFont().deriveFont( Font.BOLD));
            } else if ((!"ANULADO".equals((jTable1.getValueAt(row, column)))) && 
                       (!"PENDIENTE".equals((jTable1.getValueAt(row, column))) && 
                       (!"EMITIDO".equals((jTable1.getValueAt(row, column)))))) {
                this.setOpaque(true);
                this.setForeground(Color.BLACK);
            }
            
            if (selected) {
                setBackground(Color.decode("#39698a"));
                setForeground(Color.decode("#FFFFFF"));
            } else{
                setBackground(Color.WHITE);
            }
            
            return this;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonCerrar = new javax.swing.JButton();
        comboBoxFiltro = new javax.swing.JComboBox<>();
        txtLike = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtSerie = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNum = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtRazSocial = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtFechEmi = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTipoComp = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtNumComp = new javax.swing.JTextField();
        buttonEditarGuia = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        txtDirPart = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtDirLleg = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtFechaLlegada = new javax.swing.JTextField();
        comboBoxTipo = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        txtConclusion = new javax.swing.JTextField();
        buttonExportExcel = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        comboBoxEstado = new javax.swing.JComboBox<>();
        txtObser = new javax.swing.JTextField();
        buttonModificar = new javax.swing.JButton();
        buttonGuardar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Vista de las Guias de Remisiones");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serie Guia", "Num. Guia", "Cliente", "Tipo Comprobante", "Num Comprobante", "Fecha Emisión", "Fecha Taslado", "Estado", "Observación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(340);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(130);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(130);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(100);
        }

        buttonCerrar.setText("Cerrar");
        buttonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCerrarActionPerformed(evt);
            }
        });

        comboBoxFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "SERIE DE GUIA", "NÚMERO DE GUIA", "CLIENTE", "FECHA EMISIÓN", "NÚMERO DE COMPROBANTE", "FECHA TRASLADO" }));
        comboBoxFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxFiltroItemStateChanged(evt);
            }
        });

        txtLike.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLikeKeyReleased(evt);
            }
        });

        jLabel1.setText("Serie Guia:");

        jLabel2.setText("Núm. Guia:");

        jLabel3.setText("Cliente:");

        jLabel4.setText("Fecha Emisión:");

        jLabel5.setText("Tipo de Comprobante:");

        jLabel6.setText("Número de Comprobante:");

        buttonEditarGuia.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        buttonEditarGuia.setText("Editar Guia");
        buttonEditarGuia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditarGuiaActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idDetalleGuia", "Cant.", "Código", "Descripción", "Unidad de Medida"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(15);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(550);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(150);
        }

        jLabel9.setText("Dirección Partida:");

        jLabel10.setText("Dirección Llegada:");

        jLabel11.setText("Fecha Llegada:");

        jLabel13.setText("Conclusión:");

        buttonExportExcel.setText("EXportExcel");
        buttonExportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExportExcelActionPerformed(evt);
            }
        });

        jLabel14.setText("Tipo:");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Estado:");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Observación:");

        comboBoxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "EMITIDO", "PENDIENTE", "ANULADO" }));
        comboBoxEstado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxEstadoItemStateChanged(evt);
            }
        });

        buttonModificar.setText("Modificar");
        buttonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarActionPerformed(evt);
            }
        });

        buttonGuardar.setText("Guardar");
        buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtObser, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonModificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonGuardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(comboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonModificar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtObser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonGuardar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel10)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtDirPart, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboBoxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtConclusion, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtDirLleg, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtRazSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFechEmi, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFechaLlegada, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtTipoComp, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNumComp, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLike, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonExportExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 887, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buttonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(buttonEditarGuia, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLike, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonExportExcel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtRazSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtFechEmi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtFechaLlegada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtDirPart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(txtConclusion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDirLleg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNumComp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(txtTipoComp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(buttonEditarGuia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonCerrar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCerrarActionPerformed
      dispose();
    }//GEN-LAST:event_buttonCerrarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        limpiarTabla();
        comboBoxEstado.setEnabled(false);
        txtObser.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        tabla = jTable1.getSelectedRow();
        serie = jTable1.getValueAt(tabla, 0).toString();
        num = jTable1.getValueAt(tabla, 1).toString();
        fech = jTable1.getValueAt(tabla, 5).toString();
        
        System.out.println("prueba de tabla :"+serie+num+fech);
        try {
            consultarAnioGuiaRemision(fech, serie, num);
            System.out.println("idGuia tabal"+idGuia);
        } catch (Exception ex) {
            Logger.getLogger(GuiaRemisionVista.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            consultarGuiaRemision(idGuia);
        } catch (Exception ex) {
            Logger.getLogger(GuiaRemisionVista.class.getName()).log(Level.SEVERE, null, ex);
        }
        listaDetalleGuiaDeRemision(idGuia);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        limpiarTabla();
        comboBoxEstado.setEnabled(false);
        txtObser.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_UP)) {
            tabla = jTable1.getSelectedRow();
            serie = jTable1.getValueAt(tabla, 0).toString();
            num = jTable1.getValueAt(tabla, 1).toString();
            fech = jTable1.getValueAt(tabla, 5).toString();
            try {
                consultarAnioGuiaRemision(fech, serie, num);
            } catch (Exception ex) {
                Logger.getLogger(GuiaRemisionVista.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                consultarGuiaRemision(idGuia);
            } catch (Exception ex) {
                Logger.getLogger(GuiaRemisionVista.class.getName()).log(Level.SEVERE, null, ex);
            }

            listaDetalleGuiaDeRemision(idGuia);

        }
    }//GEN-LAST:event_jTable1KeyReleased

    private void comboBoxFiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxFiltroItemStateChanged
         if (comboBoxFiltro.getSelectedItem() == "SERIE DE GUIA") {
            filtro = "g.serieGuia";
            listaGuiaDeRemision(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "NÚMERO DE GUIA") {
            filtro = "g.numGuia";
            listaGuiaDeRemision(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "CLIENTE") {
            filtro = "c.razonSocial";
            listaGuiaDeRemision(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "FECHA EMISIÓN") {
            filtro = "g.fechaEmision";
            listaGuiaDeRemision(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "NÚMERO DE COMPROBANTE ") {
            filtro = "g.numComprobante";
            listaGuiaDeRemision(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "FECHA TRASLADO") {
            filtro = "g.fechaTraslado";
            listaGuiaDeRemision(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "SELECCIONAR") {
            filtro = "c.razonSocial";
            listaGuiaDeRemision(filtro, txtLike.getText());
            System.out.println(filtro);
        }
    }//GEN-LAST:event_comboBoxFiltroItemStateChanged

    private void txtLikeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLikeKeyReleased
            listaGuiaDeRemision(filtro, txtLike.getText());
    }//GEN-LAST:event_txtLikeKeyReleased

    private void buttonEditarGuiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditarGuiaActionPerformed
        GuiaRemision guia = null;
        try {
            guia = new GuiaRemision();
        } catch (Exception ex) {
            Logger.getLogger(GuiaRemisionVista.class.getName()).log(Level.SEVERE, null, ex);
        }
        Principal.jDesktopPane1.add(guia);
        guia.toFront();
        guia.setVisible(true);
        GuiaRemision.pasarGuiaRemision();
    }//GEN-LAST:event_buttonEditarGuiaActionPerformed

    private void comboBoxEstadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxEstadoItemStateChanged
         if (comboBoxEstado.getSelectedIndex() != 0) {
            estadoCombo = comboBoxEstado.getSelectedItem().toString();
        } else{
            estadoCombo="";
        }
    }//GEN-LAST:event_comboBoxEstadoItemStateChanged

    private void buttonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarActionPerformed
        comboBoxEstado.setEnabled(true);
        txtObser.setEnabled(true);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(true);
    }//GEN-LAST:event_buttonModificarActionPerformed

    private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGuardarActionPerformed
        procesar(2);
        listaGuiaDeRemision(filtro, txtLike.getText());
        comboBoxEstado.setEnabled(false);
        txtObser.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
    }//GEN-LAST:event_buttonGuardarActionPerformed

    private void buttonExportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExportExcelActionPerformed
        clsExportarExcel objeto = new clsExportarExcel();
        try {
            objeto.exportarExcel(jTable1);
        } catch (IOException ex) {
            Logger.getLogger(CajaChicaRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonExportExcelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCerrar;
    private javax.swing.JButton buttonEditarGuia;
    private javax.swing.JButton buttonExportExcel;
    private javax.swing.JButton buttonGuardar;
    private javax.swing.JButton buttonModificar;
    private javax.swing.JComboBox<String> comboBoxEstado;
    private javax.swing.JComboBox<String> comboBoxFiltro;
    private javax.swing.JComboBox<String> comboBoxTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField txtConclusion;
    private javax.swing.JTextField txtDirLleg;
    private javax.swing.JTextField txtDirPart;
    private javax.swing.JTextField txtFechEmi;
    private javax.swing.JTextField txtFechaLlegada;
    private javax.swing.JTextField txtLike;
    private javax.swing.JTextField txtNum;
    private javax.swing.JTextField txtNumComp;
    private javax.swing.JTextField txtObser;
    private javax.swing.JTextField txtRazSocial;
    private javax.swing.JTextField txtSerie;
    private javax.swing.JTextField txtTipoComp;
    // End of variables declaration//GEN-END:variables


GuiaDeRemisionController guiacontroler=new GuiaDeRemisionController();
GuiaDeRemision guia; 

ClienteController clientecontroler= new ClienteController();
Cliente cliente;

DetalleGuiaDeRemisionController detGuiaController = new DetalleGuiaDeRemisionController();
DetalleGuiaDeRemision detGuia;


    
    
 void listaGuiaDeRemision(String valor,String nombre) {
        List<GuiaDeRemision> lista;
        try {
            lista = guiacontroler.GuiaDeRemisionFiltrar(valor,nombre);
            verGuiaDeRemision(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

     private void verGuiaDeRemision(List<GuiaDeRemision> lista) {
        
        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        tabla.setRowCount(0);
        for (GuiaDeRemision guiaRemi : lista) {
           
           
                Object[] fila = {guiaRemi.getSerieGuia(), guiaRemi.getNumGuia(), guiaRemi.getCliente(),guiaRemi.getTipoComprobante(), 
                                 guiaRemi.getNumComprobante(), guiaRemi.getFechEmi(), guiaRemi.getFechaTraslado(),
                                 guiaRemi.getEstado(), guiaRemi.getObservacion()};
                
                tabla.addRow(fila);
            }
        
    }
     
//-------------------------------- Consultas ---------------------------------------------------

private void consultarAnioGuiaRemision(String f, String s, String n) throws Exception {
        guia = guiacontroler.GuiaDeRemisionBuscarAnio(f, s, n);
        if (guia != null) {
            idGuia=guia.getIdGuiaRemi();
            System.out.println("iddeGuia:"+idGuia);
            anio=Integer.parseInt(guia.getAnio());
            System.out.println("año:"+anio);
        }
  
    }

 private void consultarClientePorId(int iddecliente) throws Exception {
        cliente = clientecontroler.ClienteBuscar1(iddecliente);
        if (cliente != null) {

            txtRazSocial.setText(cliente.getRazonSocial());
        } else {
            JOptionPane.showMessageDialog(null, "Cliente no registrado por ahora");
            //System.out.println("Error");
        }
 }
 
 private void consultarMotivo(int im) throws Exception {
        motivoguia = motivoguiacontroler.MotivoGuiaBuscarId(im);
        if (motivoguia != null) {

            idMotivo=motivoguia.getIdMotivoGuia();
            motivo=motivoguia.getMotivo();
            tipo=motivoguia.getIdMotivoGuia()+".- "+motivoguia.getMotivo();

        } else {
            JOptionPane.showMessageDialog(null, "Motivo no registrado");
            //System.out.println("Error");
        }
 
 }

private void consultarGuiaRemision(int idguia) throws Exception {
        guia= guiacontroler.GuiaDeRemisionBuscar(idguia);
        if (guia != null) {

            idGuia = guia.getIdGuiaRemi();
            System.out.println(idGuia);
            serie=guia.getSerieGuia();
            txtSerie.setText(guia.getSerieGuia());
            txtNum.setText(guia.getNumGuia());
            num=guia.getNumGuia();
            txtFechEmi.setText(guia.getFechEmi());
            fech=guia.getFechEmi();
            fechTras=guia.getFechaTraslado();
            txtFechaLlegada.setText(guia.getFechaTraslado());
            dirPar = guia.getDirecPart();
            txtDirPart.setText(guia.getDirecPart());
            System.out.println("direccion de partida:"+dirPar);
            dirLle=guia.getDirecLleg();
            txtDirLleg.setText(guia.getDirecLleg());
            System.out.println("direccion de llegada: "+dirLle);
            idCli=guia.getIdCliente();
            consultarClientePorId(idCli);
            tipoDoc=guia.getTipoDocCli();
            conclusion=guia.getMotivoDescripcion();
            txtConclusion.setText(guia.getMotivoDescripcion());
            idMotivo=guia.getIdMotivoGuia();
            consultarMotivo(idMotivo);
            String testValueM = tipo;
            for (int i = 0; i < comboBoxTipo.getModel().getSize(); i++) {
                if (comboBoxTipo.getItemAt(i).equals(testValueM)) {
                    System.out.println(i);
                    comboBoxTipo.setSelectedIndex(i);
                    break;
                }
            }
            nombTrans=guia.getNomTransp();
            rucTrans=guia.getRucTransp();
            txtTipoComp.setText(guia.getTipoComprobante());
            tipoCom=guia.getTipoComprobante();
            txtNumComp.setText(guia.getNumComprobante());
            numCom=guia.getNumComprobante();
            marca=guia.getVehMarca();
            cert=guia.getVehCertif();
            lic=guia.getVehLic();
            estado=guia.getEstado();
            String testValue1 = estado;
            for (int i = 0; i < comboBoxEstado.getModel().getSize(); i++) {
                if (comboBoxEstado.getItemAt(i).equals(testValue1)) {
                    System.out.println(i);
                    comboBoxEstado.setSelectedIndex(i);
                    break;
                }
            }
            txtObser.setText(guia.getObservacion());
            numPedido=guia.getNumPedi();

        } else {
            JOptionPane.showMessageDialog(null, "Guia de Remision no registrada");
                     //System.out.println("Error");
                     
        }
    } 

//--------------------------------- Tabla ---------------------------------------
void listaDetalleGuiaDeRemision(int id) {
        List<DetalleGuiaDeRemision> lista;
        try {
            lista = detGuiaController.DetalleGuiaDeRemisionFiltrar(id);
            verDetalleGuiaDeRemision(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

private void verDetalleGuiaDeRemision(List<DetalleGuiaDeRemision> lista) {
        
        DefaultTableModel tabla = (DefaultTableModel) jTable2.getModel();
        tabla.setRowCount(0);
        for (DetalleGuiaDeRemision detGuia : lista) {
           
           
                Object[] fila = {detGuia.getIdDetalleGuia(),detGuia.getCant(), detGuia.getCod(), detGuia.getDescrip(), detGuia.getUniMed()};
                tabla.addRow(fila);
            }
        
    }

//------------------------------------- Procesar ----------------------------------
    private void procesar(int op) {
        guia= leerDatos();
        try {
            System.out.println("11111111111");
            String msg = guiacontroler.GuiaDeRemisionProcesar(guia, op);
            JOptionPane.showMessageDialog(null, msg);
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("Error" + e.getMessage());
        }
    }
    
 //------------------------------------- Leer Datos --------------------------------
    
private GuiaDeRemision leerDatos() {
        GuiaDeRemision guiaRem = new GuiaDeRemision();
        
        guiaRem.setIdGuiaRemi(idGuia);
        guiaRem.setNumGuia(num);
        guiaRem.setSerieGuia(serie);
        guiaRem.setFechEmi(fech);
        guiaRem.setFechaTraslado(fechTras);
        guiaRem.setDirecPart(dirPar);
        guiaRem.setDirecLleg(dirLle);
        guiaRem.setIdCliente(idCli);
        guiaRem.setTipoDocCli(tipoDoc);
        guiaRem.setIdMotivoGuia(idMotivo);
        guiaRem.setMotivoDescripcion(conclusion);
        guiaRem.setVehMarca(marca);
        guiaRem.setVehCertif(cert);
        guiaRem.setVehLic(lic);
        guiaRem.setNomTransp(nombTrans);
        guiaRem.setRucTransp(rucTrans);
        guiaRem.setTipoComprobante(tipoCom);
        guiaRem.setNumComprobante(numCom);
        guiaRem.setEstado(estadoCombo);
        guiaRem.setObservacion(txtObser.getText());
        guiaRem.setNumPedi(numPedido);
        
        return guiaRem;
    }

    void limpiarTabla() {
        comboBoxEstado.setSelectedIndex(0);
        txtSerie.setText("");
        txtNum.setText("");
        txtRazSocial.setText("");
        txtFechEmi.setText("");
        txtTipoComp.setText("");
        txtNumComp.setText("");
        txtObser.setText("");
        txtFechaLlegada.setText("");
        txtConclusion.setText("");
        comboBoxTipo.setSelectedIndex(0);
        txtDirPart.setText("");
        txtDirLleg.setText("");
    }
}

