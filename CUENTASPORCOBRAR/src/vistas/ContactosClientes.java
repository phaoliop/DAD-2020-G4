package vistas;

import controller.ClienteController;
import controller.ContactoClienteController;
import controller.SucursalController;
import entity.Cliente;
import entity.ContactoCliente;
import entity.Sucursal;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author ARCRODINPC-02
 */
public final class ContactosClientes extends javax.swing.JInternalFrame {

    /**
     * Creates new form ContactosClientes
     */
    int idCliente;
    int idContCli;
    int tabla;
    String sucursalNombre;
    String razSocial;
    
    public ContactosClientes() throws Exception {
        initComponents();
        txtRazSocial.setText(Clientes.cliente);
        System.out.println(Clientes.x);
        idCliente=Clientes.x;
        consultarRazCliente(idCliente);
        habilitarInicio();
        listaContactoCliente();
        txtRazSocial.setEnabled(false);
    
     comboBoxSucursal.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {

         @Override
         public void keyReleased(KeyEvent evt) {
                // aca falta validar que me ejecute el campo
                String cadenaEscrita = comboBoxSucursal.getEditor().getItem().toString();
                if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                    try {
                     consultarSucursalNombre(comboBoxSucursal.getItemAt(0));
                    } catch (Exception ex) {
                        Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    comboBoxSucursal.setSelectedIndex(0);
                   
                    if (comparar(cadenaEscrita)) {
                        try {
                            // compara si el texto escrito se ecuentra en la lista
                            // busca el texto escrito en la base de datos, solo pasa si es identico
                           consultarSucursalNombre(cadenaEscrita);

                                                      
                        } catch (Exception ex) {
                            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    

                    } else {
                        try {
                            for (int i = 0; i <comboBoxSucursal.getModel().getSize(); i++) {
                                if (comboBoxSucursal.getItemAt(i).equals(cadenaEscrita)) {
                                    consultarSucursalNombre(comboBoxSucursal.getItemAt(i));
                                    comboBoxSucursal.setSelectedIndex(i);
                                }
                            }
                            
                            } catch (Exception ex) {
                            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }

                if (evt.getKeyCode() >= 65 && evt.getKeyCode() <= 90 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105 || evt.getKeyCode() == 8) {
                    try {
                        comboBoxSucursal.setModel(sucursalcontroler.SucursalListarCombo(cadenaEscrita));
                    } catch (Exception ex) {
                        Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (comboBoxSucursal.getItemCount() > 0) {
                        comboBoxSucursal.getEditor().setItem(cadenaEscrita);
                        comboBoxSucursal.showPopup();
                    } else {
                        comboBoxSucursal.addItem(cadenaEscrita);
                    }
                }
            }
        });
    }
    private boolean comparar(String cadena) {
        Object[] lista = comboBoxSucursal.getComponents();
        boolean encontrado = false;
        for (Object object : lista) {
            if (cadena.equals(object)) {
                encontrado = true;
                break;
            }

        }
        return encontrado;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonRegistrar = new javax.swing.JButton();
        buttonModificar = new javax.swing.JButton();
        buttonEliminar = new javax.swing.JButton();
        buttonCerrar = new javax.swing.JButton();
        buttonGuardar = new javax.swing.JButton();
        buttonNuevo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        labelIdContactoCliente = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textDni = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textApellidos = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        textCargo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        textTlf1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        textTlf2 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        textCorreo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        buttonLimpiar = new javax.swing.JButton();
        textNombres = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtRazSocial = new javax.swing.JTextField();
        textObservacion = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonRegistroSucursales = new javax.swing.JButton();
        comboBoxSucursal = new javax.swing.JComboBox<>();

        setClosable(true);
        setTitle("Clientes - Contactos");

        buttonRegistrar.setText("Registrar");
        buttonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegistrarActionPerformed(evt);
            }
        });

        buttonModificar.setText("Modificar");
        buttonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarActionPerformed(evt);
            }
        });

        buttonEliminar.setText("Eliminar");
        buttonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminarActionPerformed(evt);
            }
        });

        buttonCerrar.setText("Cerrar");
        buttonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCerrarActionPerformed(evt);
            }
        });

        buttonGuardar.setText("Guardar");
        buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGuardarActionPerformed(evt);
            }
        });

        buttonNuevo.setText("Nuevo");
        buttonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNuevoActionPerformed(evt);
            }
        });

        jLabel1.setText("N°:");

        labelIdContactoCliente.setText("0000");

        jLabel3.setText("D.N.I.:");

        jLabel4.setText("Nombres:");

        jLabel5.setText("Apellidos:");

        textApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textApellidosKeyTyped(evt);
            }
        });

        jLabel6.setText("Cargo:");

        jLabel7.setText("Telefono 1:");

        textTlf1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textTlf1KeyTyped(evt);
            }
        });

        jLabel8.setText("Telefono 2:");

        jLabel9.setText("Correo:");

        textCorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textCorreoKeyTyped(evt);
            }
        });

        jLabel11.setText("Observacion:");

        buttonLimpiar.setText("Limpiar");
        buttonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLimpiarActionPerformed(evt);
            }
        });

        textNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textNombresKeyTyped(evt);
            }
        });

        jLabel2.setText("Cliente:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idConCli", "Nombre", "Correo", "Telefono1", "Cargo", "Observación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(15);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(180);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(150);
        }

        buttonRegistroSucursales.setText("Sucursal:");
        buttonRegistroSucursales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegistroSucursalesActionPerformed(evt);
            }
        });

        comboBoxSucursal.setEditable(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(labelIdContactoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(textCargo))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(textDni, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtRazSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(42, 42, 42)
                                        .addComponent(buttonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(2, 2, 2)
                                                .addComponent(buttonRegistroSucursales))
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(textNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                                                .addComponent(jLabel5))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(textTlf1)
                                                    .addComponent(comboBoxSucursal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(textApellidos)
                                            .addComponent(textObservacion, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                            .addComponent(textTlf2)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonRegistrar)
                                .addGap(18, 18, 18)
                                .addComponent(buttonModificar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(buttonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(labelIdContactoCliente)
                    .addComponent(jLabel2)
                    .addComponent(txtRazSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonLimpiar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(textNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(textApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(textCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(textTlf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textTlf2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(textObservacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonRegistroSucursales)
                    .addComponent(comboBoxSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonGuardar)
                    .addComponent(buttonNuevo)
                    .addComponent(buttonRegistrar)
                    .addComponent(buttonModificar)
                    .addComponent(buttonEliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(buttonCerrar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCerrarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_buttonCerrarActionPerformed

    private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGuardarActionPerformed
        procesar2(2);
        listaContactoCliente();
        try {
            consultar(idContCli);
        } catch (Exception ex) {
            Logger.getLogger(ContactosClientes.class.getName()).log(Level.SEVERE, null, ex);
        }
        habilitarGuardar();
    }//GEN-LAST:event_buttonGuardarActionPerformed

    private void buttonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegistrarActionPerformed
        String texto = textNombres.getText();
        texto = texto.replaceAll(" ", "");
        if (texto.length()==0) {
            JOptionPane.showMessageDialog(null, "Llenar el nombre del contacto (dato obligatorio)");
        } else {
            procesar(1);
            listaContactoCliente();
            limpiarCampos();
            habilitarRegistrar();
        }
    }//GEN-LAST:event_buttonRegistrarActionPerformed

    private void buttonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminarActionPerformed
        procesar2(3);
        listaContactoCliente();
        limpiarCampos();
        habilitarEliminar();
        
    }//GEN-LAST:event_buttonEliminarActionPerformed

    private void buttonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNuevoActionPerformed
        habilitarNuevo();
    }//GEN-LAST:event_buttonNuevoActionPerformed

    private void buttonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLimpiarActionPerformed
      limpiarCampos();
      habilitarInicio();
    }//GEN-LAST:event_buttonLimpiarActionPerformed

    private void buttonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarActionPerformed
        habilitarModificar();    
    }//GEN-LAST:event_buttonModificarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        limpiarCampos();
        tabla = jTable1.getSelectedRow();
       idContCli= Integer.parseInt(jTable1.getValueAt(tabla, 0).toString());
        try {
            consultar(idContCli);
        } catch (Exception ex) {
            Logger.getLogger(ContactosClientes.class.getName()).log(Level.SEVERE, null, ex);
        }
        habilitarBuscar();
    }//GEN-LAST:event_jTable1MouseClicked

    private void buttonRegistroSucursalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegistroSucursalesActionPerformed
        SucursalRegistro sucuRe= new SucursalRegistro();
        Principal.jDesktopPane1.add(sucuRe);
        sucuRe.toFront();
        sucuRe.setVisible(true);
    }//GEN-LAST:event_buttonRegistroSucursalesActionPerformed

    private void textCorreoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textCorreoKeyTyped
         String Caracteres = textCorreo.getText();
        if (Caracteres.length() >= 70) {
            JOptionPane.showMessageDialog(null, "Ya no puede ingresar más letras.");
            evt.consume();
        }
    }//GEN-LAST:event_textCorreoKeyTyped

    private void textNombresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNombresKeyTyped
        String Caracteres = textNombres.getText();
        if (Caracteres.length() >= 70) {
            JOptionPane.showMessageDialog(null, "Ya no puede ingresar más letras.");
            evt.consume();
        }
    }//GEN-LAST:event_textNombresKeyTyped

    private void textApellidosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textApellidosKeyTyped
        String Caracteres = textApellidos.getText();
        if (Caracteres.length() >= 80) {
            JOptionPane.showMessageDialog(null, "Ya no puede ingresar más letras.");
            evt.consume();
        }
    }//GEN-LAST:event_textApellidosKeyTyped

    private void textTlf1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textTlf1KeyTyped
        String Caracteres = textTlf1.getText();
        if (Caracteres.length() >= 15) {
            JOptionPane.showMessageDialog(null, "Ya no puede ingresar más letras.");
            evt.consume();
        }
    }//GEN-LAST:event_textTlf1KeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCerrar;
    private javax.swing.JButton buttonEliminar;
    private javax.swing.JButton buttonGuardar;
    private javax.swing.JButton buttonLimpiar;
    private javax.swing.JButton buttonModificar;
    private javax.swing.JButton buttonNuevo;
    private javax.swing.JButton buttonRegistrar;
    private javax.swing.JButton buttonRegistroSucursales;
    private javax.swing.JComboBox<String> comboBoxSucursal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelIdContactoCliente;
    private javax.swing.JTextField textApellidos;
    private javax.swing.JTextField textCargo;
    private javax.swing.JTextField textCorreo;
    private javax.swing.JTextField textDni;
    private javax.swing.JTextField textNombres;
    private javax.swing.JTextField textObservacion;
    private javax.swing.JTextField textTlf1;
    private javax.swing.JTextField textTlf2;
    private javax.swing.JTextField txtRazSocial;
    // End of variables declaration//GEN-END:variables

    ContactoClienteController obj = new ContactoClienteController();
    ContactoCliente pro, pro2;
    
    SucursalController sucursalcontroler= new SucursalController();
    Sucursal sucursal;

    ClienteController clientecontroler= new ClienteController();
    Cliente cliente;
    
    private void procesar(int op) {
        pro = leerDatos();
        try {
            String msg = obj.ContactoClienteProcesar(pro, op);
            JOptionPane.showMessageDialog(null, msg);
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("Error" + e.getMessage());
        }
    }

    private void procesar2(int op) {

        pro2 = leerDatos2();

        try {

            String msg = obj.ContactoClienteProcesar(pro2, op);
            JOptionPane.showMessageDialog(null, msg);
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("Error" + e.getMessage());
        }
    }

    private void consultar(int idConCli) throws Exception {
        pro = obj.ContactoClienteBuscar(idConCli);
        if (pro != null) {

            labelIdContactoCliente.setText(pro.getIdContactoCliente() + "");
            idContCli=pro.getIdContactoCliente();
            textNombres.setText(pro.getNombres());
            textDni.setText(pro.getDni());
            textApellidos.setText(pro.getApellidos());
            textCargo.setText(pro.getCargo());
            textTlf1.setText(pro.getTlf1());
            textTlf2.setText(pro.getTlf2());
            textCorreo.setText(pro.getCorreo());
            comboBoxSucursal.setSelectedItem(pro.getSucursal());
            textObservacion.setText(pro.getObservacion());

        } else {
            JOptionPane.showMessageDialog(null, "Usuario no registrado");
            //System.out.println("Error");
        }
    }

     private void consultarSucursalNombre(String cadena) throws Exception {
        sucursal = sucursalcontroler.SucursalBuscarNombre(cadena);
        if (sucursal != null) {

            sucursalNombre=sucursal.getSucursal();
            System.out.println("la sucursal es: "+sucursalNombre);
            

        } else {
            JOptionPane.showMessageDialog(null, "sucursal no registrado");
            //System.out.println("Error");
        }
    }
     
    private void consultarRazCliente(int c) throws Exception {
        cliente = clientecontroler.ClienteBuscar1(c);
        if (cliente != null) {

            idCliente= cliente.getIdCliente();
            razSocial=cliente.getRazonSocial();
            txtRazSocial.setText(cliente.getRazonSocial());
        } else {
            JOptionPane.showMessageDialog(null, "Cliente no registrado");
            //System.out.println("Error");
        }
    }
    
     
    private ContactoCliente leerDatos() {
        ContactoCliente conCli = new ContactoCliente();

        conCli.setIdCliente(Clientes.x);
        conCli.setDni(textDni.getText());
        conCli.setNombres(textNombres.getText());
        conCli.setApellidos(textApellidos.getText());
        conCli.setCargo(textCargo.getText());
        conCli.setTlf1(textTlf1.getText());
        conCli.setTlf2(textTlf2.getText());
        conCli.setCorreo(textCorreo.getText());
        conCli.setSucursal(comboBoxSucursal.getEditor().getItem().toString());
        conCli.setObservacion(textObservacion.getText());

        return conCli;
    }

    private ContactoCliente leerDatos2() {
        ContactoCliente conCli = new ContactoCliente();

        conCli.setIdContactoCliente(Integer.parseInt(labelIdContactoCliente.getText()));
        conCli.setDni(textDni.getText());
        conCli.setNombres(textNombres.getText());
        conCli.setApellidos(textApellidos.getText());
        conCli.setCargo(textCargo.getText());
        conCli.setTlf1(textTlf1.getText());
        conCli.setTlf2(textTlf2.getText());
        conCli.setCorreo(textCorreo.getText());
        conCli.setSucursal(comboBoxSucursal.getEditor().getItem().toString());
        conCli.setObservacion(textObservacion.getText());

        return conCli;
    }

    public void limpiarCampos(){
        textDni.setText("");
        textNombres.setText("");
        textApellidos.setText("");
        textCargo.setText("");
        textTlf1.setText("");
        textTlf2.setText("");
        textCorreo.setText("");
        comboBoxSucursal.setSelectedItem("");
        textObservacion.setText("");
        labelIdContactoCliente.setText("0000");
        
    }
    
    public void habilitarInicio() {

        buttonLimpiar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonModificar.setEnabled(false);
        buttonNuevo.setEnabled(true);
        buttonRegistrar.setEnabled(false);
        buttonEliminar.setEnabled(false);
        buttonRegistroSucursales.setEnabled(false);
       
        textDni.setEnabled(false);
        textNombres.setEnabled(false);
        textApellidos.setEnabled(false);
        textCargo.setEnabled(false);
        textTlf1.setEnabled(false);
        textTlf2.setEnabled(false);
        textCorreo.setEnabled(false);
        comboBoxSucursal.setEnabled(false);
        textObservacion.setEnabled(false);

    }

    public void habilitarNuevo() {
        
        buttonLimpiar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonModificar.setEnabled(false);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(true);
        buttonEliminar.setEnabled(false);
        buttonRegistroSucursales.setEnabled(true);

        textDni.setEnabled(true);
        textNombres.setEnabled(true);
        textApellidos.setEnabled(true);
        textCargo.setEnabled(true);
        textTlf1.setEnabled(true);
        textTlf2.setEnabled(true);
        textCorreo.setEnabled(true);
        comboBoxSucursal.setEnabled(true);
        textObservacion.setEnabled(true);
    }
    
    public void habilitarRegistrar() {
        
        buttonLimpiar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonModificar.setEnabled(false);
        buttonNuevo.setEnabled(true);
        buttonRegistrar.setEnabled(false);
        buttonEliminar.setEnabled(false);
        buttonRegistroSucursales.setEnabled(false);

        textDni.setEnabled(false);
        textNombres.setEnabled(false);
        textApellidos.setEnabled(false);
        textCargo.setEnabled(false);
        textTlf1.setEnabled(false);
        textTlf2.setEnabled(false);
        textCorreo.setEnabled(false);
        comboBoxSucursal.setEnabled(false);
        textObservacion.setEnabled(false);
 
    }
        public void habilitarEliminar(){
        
        buttonLimpiar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonModificar.setEnabled(false);
        buttonNuevo.setEnabled(true);
        buttonRegistrar.setEnabled(false);
        buttonEliminar.setEnabled(false);
        buttonRegistroSucursales.setEnabled(false);

        textDni.setEnabled(false);
        textNombres.setEnabled(true);
        textApellidos.setEnabled(false);
        textCargo.setEnabled(false);
        textTlf1.setEnabled(false);
        textTlf2.setEnabled(false);
        textCorreo.setEnabled(false);
        comboBoxSucursal.setEnabled(false);
        textObservacion.setEnabled(false);
 }
        
        public void habilitarGuardar(){
        
        buttonLimpiar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonEliminar.setEnabled(true);
        buttonRegistroSucursales.setEnabled(false);

        textDni.setEnabled(false);
        textNombres.setEnabled(false);
        textApellidos.setEnabled(false);
        textCargo.setEnabled(false);
        textTlf1.setEnabled(false);
        textTlf2.setEnabled(false);
        textCorreo.setEnabled(false);
        comboBoxSucursal.setEnabled(false);
        textObservacion.setEnabled(false);
 }
        
         public void habilitarBuscar(){
        
        buttonLimpiar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonEliminar.setEnabled(true);
        buttonRegistroSucursales.setEnabled(false);

        textDni.setEnabled(false);
        textNombres.setEnabled(false);
        textApellidos.setEnabled(false);
        textCargo.setEnabled(false);
        textTlf1.setEnabled(false);
        textTlf2.setEnabled(false);
        textCorreo.setEnabled(false);
        comboBoxSucursal.setEnabled(false);
        textObservacion.setEnabled(false);
 }
      public void habilitarModificar(){
        
        buttonLimpiar.setEnabled(true);
        buttonGuardar.setEnabled(true);
        buttonModificar.setEnabled(false);
        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonEliminar.setEnabled(false);
        buttonRegistroSucursales.setEnabled(true);

        textDni.setEnabled(true);
        textNombres.setEnabled(true);
        textApellidos.setEnabled(true);
        textCargo.setEnabled(true);
        textTlf1.setEnabled(true);
        textTlf2.setEnabled(true);
        textCorreo.setEnabled(true);
        comboBoxSucursal.setEnabled(true);
        textObservacion.setEnabled(true);
 }

      private void listaContactoCliente() {
        List<ContactoCliente> lista;
        try {
            
            lista = obj.ContactoClienteListar1(Clientes.x);
            verContactoCliente(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    private void verContactoCliente(List<ContactoCliente> lista) {

        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        tabla.setRowCount(0);
        for (ContactoCliente conCli : lista) {
            Object[] fila = {conCli.getIdContactoCliente(), conCli.getNombres()+" "+conCli.getApellidos(),conCli.getCorreo(),conCli.getTlf1(),conCli.getCargo(),conCli.getObservacion()};
            tabla.addRow(fila);
        }
    }

}
