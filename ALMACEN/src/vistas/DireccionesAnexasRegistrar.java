/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controller.ClienteController;
import controller.DireccionAnexaController;
import entity.Cliente;
import entity.DireccionAnexa;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ARCRODINPC-06
 */
public class DireccionesAnexasRegistrar extends javax.swing.JInternalFrame {

    /**
     * Creates new form DireccionesAnexasRegistrar
     */
    String campo1="", campo2="";
   static int idDireccion;
   int ultimoId;
   int idCliente;
   int tabla;
    
    public DireccionesAnexasRegistrar() throws Exception {
        initComponents();
        idCliente=Clientes.x;
        listaDireccionAnexa(idCliente);
        consultarClientePorId(Clientes.x);
        txtRazSocial.setEnabled(false);
        habilitarInicio();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        labelIdDIreccion = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtRazSocial = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDirecAnexa = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObser = new javax.swing.JTextArea();
        buttonCerrar = new javax.swing.JButton();
        buttonRegistrar = new javax.swing.JButton();
        buttonNuevo = new javax.swing.JButton();
        buttonModificar = new javax.swing.JButton();
        buttonGuardar = new javax.swing.JButton();
        buttonEliminar = new javax.swing.JButton();
        buttonLimpiar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jLabel1.setText("N°:");

        labelIdDIreccion.setText("000000");

        jLabel3.setText("Cliente:");

        jLabel4.setText("Dirección Anexa:");

        jLabel5.setText("Observación:");

        txtObser.setColumns(20);
        txtObser.setRows(5);
        jScrollPane1.setViewportView(txtObser);

        buttonCerrar.setText("Cerrar");
        buttonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCerrarActionPerformed(evt);
            }
        });

        buttonRegistrar.setText("Registrar");
        buttonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegistrarActionPerformed(evt);
            }
        });

        buttonNuevo.setText("Nuevo");
        buttonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNuevoActionPerformed(evt);
            }
        });

        buttonModificar.setText("Modificar");
        buttonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarActionPerformed(evt);
            }
        });

        buttonGuardar.setText("Guardar");
        buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGuardarActionPerformed(evt);
            }
        });

        buttonEliminar.setText("Eliminar");
        buttonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminarActionPerformed(evt);
            }
        });

        buttonLimpiar.setText("Limpiar");
        buttonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLimpiarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idDirAnexa", "Dirección", "Observación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(15);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(370);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(200);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelIdDIreccion)
                                .addGap(25, 25, 25)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtRazSocial))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDirecAnexa)
                                .addGap(2, 2, 2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(11, 11, 11)
                                        .addComponent(jScrollPane1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(buttonNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(buttonRegistrar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 72, Short.MAX_VALUE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtRazSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelIdDIreccion)
                    .addComponent(jLabel1))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDirecAnexa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonLimpiar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonNuevo)
                    .addComponent(buttonRegistrar)
                    .addComponent(buttonModificar)
                    .addComponent(buttonGuardar)
                    .addComponent(buttonEliminar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonCerrar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_buttonCerrarActionPerformed

    private void buttonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegistrarActionPerformed
        procesar(1);
        listaDireccionAnexa(idCliente);
        limpiar();
        habilitarRegistrar();
       
    }//GEN-LAST:event_buttonRegistrarActionPerformed

    private void buttonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarActionPerformed
        habilitarModificar();
    }//GEN-LAST:event_buttonModificarActionPerformed

    private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGuardarActionPerformed
        procesar(2);
        listaDireccionAnexa(idCliente);
        habilitarGuardar();
        DireccionesAnexasVista.listaDireccionAnexa(Clientes.x);
    }//GEN-LAST:event_buttonGuardarActionPerformed

    private void buttonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminarActionPerformed
        procesar(3);
        listaDireccionAnexa(idCliente);
        limpiar();
        habilitarEliminar();
        DireccionesAnexasVista.listaDireccionAnexa(Clientes.x);
    }//GEN-LAST:event_buttonEliminarActionPerformed

    private void buttonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNuevoActionPerformed
        limpiar();
        habilitarNuevo();
       
    }//GEN-LAST:event_buttonNuevoActionPerformed

    private void buttonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLimpiarActionPerformed
        limpiar();
        habilitarInicio();
    }//GEN-LAST:event_buttonLimpiarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
      limpiar();
        tabla = jTable1.getSelectedRow();
       idDireccion = Integer.parseInt(jTable1.getValueAt(tabla, 0).toString());
        try {
            consultar(idDireccion);
        } catch (Exception ex) {
            Logger.getLogger(DireccionesAnexasRegistrar.class.getName()).log(Level.SEVERE, null, ex);
        }
        habilitarBuscar();
    }//GEN-LAST:event_jTable1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCerrar;
    public static javax.swing.JButton buttonEliminar;
    public static javax.swing.JButton buttonGuardar;
    private javax.swing.JButton buttonLimpiar;
    public static javax.swing.JButton buttonModificar;
    public static javax.swing.JButton buttonNuevo;
    public static javax.swing.JButton buttonRegistrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelIdDIreccion;
    public static javax.swing.JTextField txtDirecAnexa;
    public static javax.swing.JTextArea txtObser;
    public static javax.swing.JTextField txtRazSocial;
    // End of variables declaration//GEN-END:variables

    static DireccionAnexaController direccioncontroler= new DireccionAnexaController();
    static DireccionAnexa direccion;
    
    ClienteController clientecontroler = new ClienteController();
    Cliente cliente;
    
    //---------------------------- Procesar ----------------------------------------
    
    private void procesar(int op) {
        direccion = leerDatos();
        try {
            String msg = direccioncontroler.DireccionAnexaProcesar(direccion, op);
            JOptionPane.showMessageDialog(null, msg);
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("Error" + e.getMessage());
        }
    }

//----------------------- Leer Datos -------------------------------------------
    private DireccionAnexa leerDatos() {
        DireccionAnexa direc = new DireccionAnexa();

        direc.setIdDireccion(idDireccion);
        direc.setIdCliente(idCliente);
        direc.setDireccion(txtDirecAnexa.getText());
        direc.setObser(txtObser.getText());
        direc.setCampo1(campo1);
        direc.setCampo2(campo2);
        
        
        return direc;
    }
    
   
    
//---------------------------- Consultas ---------------------------------------
     private void consultarClientePorId(int iddecliente) throws Exception {
        cliente = clientecontroler.ClienteBuscar1(iddecliente);
        if (cliente != null) {

            //txtRazonSocial.setText(pro.getRazonSocial());
            txtRazSocial.setText(cliente.getRazonSocial());
                        
        } else {
            JOptionPane.showMessageDialog(null, "Cliente no registrado por ahora");
            //System.out.println("Error");
        }
    }
     
    private void consultarUltimoId(int idCli) throws Exception {
        direccion= direccioncontroler.DireccionAnexaBuscarUltimoId(idCli);
        if (direccion != null) {
            ultimoId = direccion.getIdDireccion();
            System.out.println("ultimoId : "+ultimoId);
        }else{
            
        }
  
    }
    
       void consultar(int idDi) throws Exception {
        direccion=direccioncontroler.DireccionAnexaBuscar(idDi);
        if (direccion!=null) {
            
            idDireccion=direccion.getIdDireccion();
            labelIdDIreccion.setText(Integer.toString(direccion.getIdDireccion()));
            System.out.println("idireccion: "+idDireccion);
            Clientes.x=direccion.getIdCliente();
            idCliente=direccion.getIdCliente();
            System.out.println("idCliente: "+Clientes.x);
            txtDirecAnexa.setText(direccion.getDireccion());
            txtObser.setText(direccion.getObser());
          
                   
          }else{
          JOptionPane.showMessageDialog(null, "Articulo no registrado");
          //System.out.println("Error");
        }
    }
   //-------------------------- Habilitar --------------------------------------
     void habilitarInicio(){
     
         buttonNuevo.setEnabled(true);
         buttonRegistrar.setEnabled(false);
         buttonModificar.setEnabled(false);
         buttonGuardar.setEnabled(false);
         buttonEliminar.setEnabled(false);
                 
         txtDirecAnexa.setEnabled(false);
         txtObser.setEnabled(false);
         
     }
     
     void habilitarNuevo(){
     
         buttonNuevo.setEnabled(false);
         buttonRegistrar.setEnabled(true);
         buttonModificar.setEnabled(false);
         buttonGuardar.setEnabled(false);
         buttonEliminar.setEnabled(false);
                 
         txtDirecAnexa.setEnabled(true);
         txtObser.setEnabled(true);
         
     }
     
     void habilitarRegistrar(){
     
         buttonNuevo.setEnabled(true);
         buttonRegistrar.setEnabled(false);
         buttonModificar.setEnabled(false);
         buttonGuardar.setEnabled(false);
         buttonEliminar.setEnabled(false);
                 
         txtDirecAnexa.setEnabled(false);
         txtObser.setEnabled(false);
         
     }
     
     void habilitarModificar(){
     
         buttonNuevo.setEnabled(false);
         buttonRegistrar.setEnabled(false);
         buttonModificar.setEnabled(false);
         buttonGuardar.setEnabled(true);
         buttonEliminar.setEnabled(false);
                 
         txtDirecAnexa.setEnabled(true);
         txtObser.setEnabled(true);
         
     }
     
     void habilitarGuardar(){
     
         buttonNuevo.setEnabled(false);
         buttonRegistrar.setEnabled(false);
         buttonModificar.setEnabled(true);
         buttonGuardar.setEnabled(false);
         buttonEliminar.setEnabled(true);
                 
         txtDirecAnexa.setEnabled(false);
         txtObser.setEnabled(false);
         
     }
     
        void habilitarEliminar(){
     
         buttonNuevo.setEnabled(true);
         buttonRegistrar.setEnabled(false);
         buttonModificar.setEnabled(false);
         buttonGuardar.setEnabled(false);
         buttonEliminar.setEnabled(false);
                 
         txtDirecAnexa.setEnabled(false);
         txtObser.setEnabled(false);
         
     }

    void habilitarBuscar() {

        buttonNuevo.setEnabled(false);
        buttonRegistrar.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonEliminar.setEnabled(true);

        txtDirecAnexa.setEnabled(false);
        txtObser.setEnabled(false);

    }
        
   void limpiar(){
       txtDirecAnexa.setText("");
       txtObser.setText("");
       idDireccion=0;
       labelIdDIreccion.setText("0000");

   }
   
   void listaDireccionAnexa(int idClie) {
        List<DireccionAnexa> lista;
        try {
            
            lista = direccioncontroler.DireccionAnexaListar(idClie); 
            verDireccion(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    void verDireccion(List<DireccionAnexa> lista) {

        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        tabla.setRowCount(0);
        for (DireccionAnexa dir : lista) {
            Object[] fila = {dir.getIdDireccion(),dir.getDireccion(),dir.getObser()};
            tabla.addRow(fila);
        }
    }
}
