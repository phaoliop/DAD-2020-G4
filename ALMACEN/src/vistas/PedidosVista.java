/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controller.ClienteController;
import controller.DetallePedidoController;
import controller.DetalleProformaController;
import controller.PedidoController;
import controller.UsuarioController;
import entity.Cliente;
import entity.DetallePedido;
import entity.DetalleProforma;
import entity.Pedido;
import entity.Usuario;
import exportarexcel.clsExportarExcel;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.Destination;
import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.MessageConsumer;
import javax.jms.Session;
import javax.jms.TextMessage;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.apache.activemq.ActiveMQConnectionFactory;
import org.apache.log4j.BasicConfigurator;

/**
 *
 * @author ARCRODINPC-06
 */
public class PedidosVista extends javax.swing.JInternalFrame {

    private static String url = "tcp://192.168.0.103:61616";
    private static String subject = "ALMACEN";
    
    
    
    
    /**
     * Creates new form PedidosVista
     */
    
    int idPedido;
    int numPedido;
    int idProf;
    int idCliente;
    int idContactCli;
    int idUsuario;
    String moneda;
    String formPago;
    String tipo;
    String fechaEmision;
    int dia1;
    int dia2;
    String ordenCompra;
    String estado;
    String observacion;
    String observacionInterna;
    String campo2;
    String campo3;
    
    String nombreUs;
    String apellidoUs;
    String nombreUsuario;
    
    String filtro="cli.razonSocial";
    int tabla;
    
    String anioCadena;
    int anio;
    
    static String numero;
    static String anioPe;
    
    static String numCot;
        
    
    
    public PedidosVista() {
        initComponents();
        listaPedido(filtro,txtLike.getText());
        habilitarInicio();
        jTable1.setDefaultRenderer (Object.class, new RowsRenderer());
    }

    public class RowsRenderer extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable jTable1, Object value, boolean selected, boolean focused, int row, int column) {
//            jTable1.setBackground(Color.white);
//            jTable1.setForeground(Color.black);
            super.getTableCellRendererComponent(jTable1, value, selected, focused, row, column);

            if ("EN PROCESO".equals((jTable1.getValueAt(row, column)))) {
                this.setOpaque(true);
                this.setForeground(Color.decode("#CCCC00"));//amarillo/anaranjado

            } else if ("FINALIZADO".equals((jTable1.getValueAt(row, column)))) {
                this.setOpaque(true);
                this.setForeground(Color.decode("#009900"));//verde

            } else if ("ANULADO".equals((jTable1.getValueAt(row, column)))) {
                this.setOpaque(true);
                this.setForeground(Color.RED);

            } else if ((!"ANULADO".equals((jTable1.getValueAt(row, column))))
                    && (!"FINALIZADO".equals((jTable1.getValueAt(row, column)))
                    && (!"EN PROCESO".equals((jTable1.getValueAt(row, column)))))) {
                this.setOpaque(true);
                this.setForeground(Color.BLACK);
            }

            if (selected) {
                setBackground(Color.decode("#39698a"));
                setForeground(Color.decode("#FFFFFF"));
            } else{
                setBackground(Color.WHITE);
            }

            return this;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboBoxFiltro = new javax.swing.JComboBox<>();
        txtLike = new javax.swing.JTextField();
        buttonLimpiar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtNumPedido = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtRazSocial = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTipo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMoneda = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtFormPago = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTiempoEntrega = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        buttonCerrar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        labelSubtotal = new javax.swing.JLabel();
        labelIgv = new javax.swing.JLabel();
        labelTotal = new javax.swing.JLabel();
        buttonGenerarOrden = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtNumCot = new javax.swing.JTextField();
        buttonVerCotizacion = new javax.swing.JButton();
        buttonExportExcel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        comboBoxEstado = new javax.swing.JComboBox<>();
        buttonGuardar = new javax.swing.JButton();
        buttonModificar = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtObsInterna = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtOrdenCompra = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Vista de Pedidos");

        comboBoxFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "NUM. PEDIDO", "NUM. COTIZACIÓN", "RAZON SOCIAL", "CONTACTO", "ESTADO", "FECHA", "ELABORADO POR" }));
        comboBoxFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxFiltroItemStateChanged(evt);
            }
        });

        txtLike.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLikeActionPerformed(evt);
            }
        });
        txtLike.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLikeKeyReleased(evt);
            }
        });

        buttonLimpiar.setText("Limpiar");
        buttonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLimpiarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num. Pedido", "Num. Cotización", "Razón Social", "Contacto", "Fecha", "Tipo", "Estado", "Elaborado por", "Obs. Interna"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(250);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(95);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(105);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(187);
        }

        jLabel1.setText("Pedido N°:");

        jLabel2.setText("Cliente:");

        jLabel3.setText("Tipo:");

        jLabel4.setText("Moneda:");

        jLabel5.setText("Forma de Pago:");

        jLabel6.setText("Tiempo de Entrega:");

        jLabel8.setText("Elaborado Por:");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idDetPed", "Item", "Cant.", "Descripción", "Valor Unitario", "Precio Unitario", "Importe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(25);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(45);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(45);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(550);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTable2.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable2.getColumnModel().getColumn(6).setPreferredWidth(100);
        }

        buttonCerrar.setText("Cerrar");
        buttonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCerrarActionPerformed(evt);
            }
        });

        jLabel9.setText("Subtotal:");

        jLabel10.setText("I.G.V.(18%):");

        jLabel11.setText("Total:");

        labelSubtotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelSubtotal.setText("000000.00");

        labelIgv.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelIgv.setText("000000.00");

        labelTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelTotal.setText("000000.00");

        buttonGenerarOrden.setText("Generar Orden Corte");
        buttonGenerarOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGenerarOrdenActionPerformed(evt);
            }
        });

        jLabel12.setText("Cotización N°:");

        buttonVerCotizacion.setText("Recibir Cotizacion");
        buttonVerCotizacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonVerCotizacionActionPerformed(evt);
            }
        });

        buttonExportExcel.setText("ExportExcel");
        buttonExportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExportExcelActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setText("Estado: ");

        comboBoxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "EN PROCESO", "FINALIZADO", "ANULADO" }));
        comboBoxEstado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxEstadoItemStateChanged(evt);
            }
        });

        buttonGuardar.setText("Guardar");
        buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGuardarActionPerformed(evt);
            }
        });

        buttonModificar.setText("Modificar");
        buttonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarActionPerformed(evt);
            }
        });

        jLabel15.setText("Obs. Interna:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15))
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(comboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtObsInterna))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(comboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonModificar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonGuardar)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(txtObsInterna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel13.setText("Orden Compra:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLike, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(buttonLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonExportExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFormPago, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTiempoEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(jLabel8))
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNumCot, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtOrdenCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 983, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buttonVerCotizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buttonGenerarOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(895, 895, 895)
                                .addComponent(labelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(111, 111, 111)
                                .addComponent(buttonCerrar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtRazSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelIgv, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(184, 184, 184))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLike, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonLimpiar)
                    .addComponent(buttonExportExcel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNumPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtRazSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtFormPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(txtTiempoEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNumCot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtOrdenCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(buttonGenerarOrden)
                        .addGap(57, 57, 57)
                        .addComponent(buttonVerCotizacion))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(labelSubtotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelIgv, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonCerrar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTotal))))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxEstadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxEstadoItemStateChanged
        if (comboBoxEstado.getSelectedIndex() != 0) {
            estado = comboBoxEstado.getSelectedItem().toString();
            System.out.println(estado);
        } else {
            estado="";
        }
    }//GEN-LAST:event_comboBoxEstadoItemStateChanged

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        tabla=jTable1.getSelectedRow();
        numPedido=Integer.parseInt(jTable1.getValueAt(tabla,0).toString());
        fechaEmision=jTable1.getValueAt(tabla,4).toString();
        numCot=jTable1.getValueAt(tabla,1).toString();
        txtNumCot.setText(numCot);
        System.out.println("numeroPedido y fecha:"+numPedido+" y "+fechaEmision);
        
          try {
                anioPe=anioActual(fechaEmision);
            } catch (ParseException ex) {
                Logger.getLogger(PedidosVista.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        try {
            consultarAnioPedido(fechaEmision, numPedido);
            System.out.println("año: "+ anio);
        } catch (Exception ex) {
            Logger.getLogger(PedidosVista.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            consultarPedido(numPedido, anio);
        } catch (Exception ex) {
            Logger.getLogger(PedidosVista.class.getName()).log(Level.SEVERE, null, ex);
        }
        listaDetalleProforma(idProf);
        try {
            consultarCalculoProforma(idProf);
        } catch (Exception ex) {
            Logger.getLogger(PedidosVista.class.getName()).log(Level.SEVERE, null, ex);
        }
        habilitarGuardar();
    }//GEN-LAST:event_jTable1MouseClicked

    private void buttonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCerrarActionPerformed
       dispose();
    }//GEN-LAST:event_buttonCerrarActionPerformed

    private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGuardarActionPerformed
      procesar(2);
      listaPedido(filtro,txtLike.getText());
      habilitarGuardar();
    }//GEN-LAST:event_buttonGuardarActionPerformed

    private void txtLikeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLikeKeyReleased
        listaPedido(filtro,txtLike.getText());
    }//GEN-LAST:event_txtLikeKeyReleased

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_UP)) {
            tabla = jTable1.getSelectedRow();
            numPedido = Integer.parseInt(jTable1.getValueAt(tabla, 0).toString());
            System.out.println(numPedido);
            fechaEmision = jTable1.getValueAt(tabla, 4).toString();
            System.out.println("numeroPedido y fecha:" + numPedido + " y " + fechaEmision);
            
            try {
                anioPe=anioActual(fechaEmision);
            } catch (ParseException ex) {
                Logger.getLogger(PedidosVista.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                consultarAnioPedido(fechaEmision, numPedido);
                System.out.println("año: " + anio);
            } catch (Exception ex) {
                Logger.getLogger(PedidosVista.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                consultarPedido(numPedido, anio);
            } catch (Exception ex) {
                Logger.getLogger(PedidosVista.class.getName()).log(Level.SEVERE, null, ex);
            }
            listaDetalleProforma(idProf);
            try {
                consultarCalculoProforma(idProf);
            } catch (Exception ex) {
                Logger.getLogger(PedidosVista.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
     habilitarGuardar();
    }//GEN-LAST:event_jTable1KeyReleased

    private void buttonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarActionPerformed
        habilitarModificar();
    }//GEN-LAST:event_buttonModificarActionPerformed

    private void comboBoxFiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxFiltroItemStateChanged
        if (comboBoxFiltro.getSelectedItem() == "NUM. PEDIDO") {
            filtro = "ped.numPedido";
            listaPedido(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "NUM. COTIZACIÓN") {
            filtro = "prof.codProforma";
            listaPedido(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "RAZON SOCIAL") {
            filtro = "cli.razonSocial";
            listaPedido(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "CONTACTO") {
            filtro = "concat(concli.nombres,' ',concli.apellidos)";
            listaPedido(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "ESTADO") {
            filtro = "ped.estado";
            listaPedido(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "FECHA") {
            filtro = "ped.fechaPedido";
            listaPedido(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "ELABORADO POR") {
            filtro = "concat(u.nombres,' ',u.apellidos)";
            listaPedido(filtro, txtLike.getText());
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "SELECCIONAR") {
            filtro = "razonSocial";
            listaPedido(filtro, txtLike.getText());
            System.out.println(filtro);
        }
    }//GEN-LAST:event_comboBoxFiltroItemStateChanged

    private void buttonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLimpiarActionPerformed
        limpiar();
        idProf=0;
        listaDetalleProforma(idProf);
        habilitarInicio();
    }//GEN-LAST:event_buttonLimpiarActionPerformed

    private void txtLikeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLikeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLikeActionPerformed

    private void buttonGenerarOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGenerarOrdenActionPerformed
        OrdenesCorte ped = new OrdenesCorte();
        Principal.jDesktopPane1.add(ped);
        ped.toFront();
        ped.setVisible(true);
        OrdenesCorte.numPedidoOrden();
    }//GEN-LAST:event_buttonGenerarOrdenActionPerformed

    private void buttonExportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExportExcelActionPerformed
        clsExportarExcel objeto = new clsExportarExcel();
        try {
            objeto.exportarExcel(jTable1);
        } catch (IOException ex) {
            Logger.getLogger(CajaChicaRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonExportExcelActionPerformed

    private void buttonVerCotizacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonVerCotizacionActionPerformed





//        Proformas ped = null;
//        try {
//            ped = new Proformas();
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(PedidosVista.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (Exception ex) {
//            Logger.getLogger(PedidosVista.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        Principal.jDesktopPane1.add(ped);
//        ped.toFront();
//        ped.setVisible(true);
//        Proformas.NumProformaPedido();
        
        
    }//GEN-LAST:event_buttonVerCotizacionActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCerrar;
    private javax.swing.JButton buttonExportExcel;
    private javax.swing.JButton buttonGenerarOrden;
    private javax.swing.JButton buttonGuardar;
    private javax.swing.JButton buttonLimpiar;
    private javax.swing.JButton buttonModificar;
    private javax.swing.JButton buttonVerCotizacion;
    private javax.swing.JComboBox<String> comboBoxEstado;
    private javax.swing.JComboBox<String> comboBoxFiltro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel labelIgv;
    private javax.swing.JLabel labelSubtotal;
    private javax.swing.JLabel labelTotal;
    private javax.swing.JTextField txtFormPago;
    private javax.swing.JTextField txtLike;
    private javax.swing.JTextField txtMoneda;
    private javax.swing.JTextField txtNumCot;
    private javax.swing.JTextField txtNumPedido;
    private javax.swing.JTextField txtObsInterna;
    private javax.swing.JTextField txtOrdenCompra;
    private javax.swing.JTextField txtRazSocial;
    private javax.swing.JTextField txtTiempoEntrega;
    private javax.swing.JTextField txtTipo;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

    PedidoController pedidocontroler = new PedidoController();
    Pedido pedido;
    
    ClienteController clientecontroler = new ClienteController();
    Cliente cliente;

    UsuarioController usuariocontroler = new UsuarioController();
    Usuario usuario;

    DetallePedidoController detallepedidocontroler = new DetallePedidoController();
    DetallePedido detallepedido;
    
    DetalleProformaController detalleproformacontroler = new DetalleProformaController();
    DetalleProforma detalleproforma;
    
   // ProformaController

//------------------------ Procesar -------------------------------------
 void procesar(int op) {
        pedido = leerDatos();
        try {
                 String msg = pedidocontroler.PedidoProcesar(pedido, op);
            JOptionPane.showMessageDialog(null, msg);
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("Error" + e.getMessage());
        }
    } 
 
 //----------------------- Leer Datos ----------------------------------------
 
    Pedido leerDatos() {
        Pedido ped = new Pedido();
        
        ped.setIdPedido(idPedido);
        ped.setNumPedido(numPedido);
        ped.setIdProforma(idProf);
        ped.setIdCliente(idCliente);
        ped.setIdContactoCliente(idContactCli);
        ped.setIdUsuario(idUsuario);
        ped.setMoneda(moneda);
        ped.setFormPago(formPago);
        ped.setTipo(tipo);
        ped.setFechaEmision(fechaEmision);
        ped.setDia1(dia1);
        ped.setDia2(dia2);
        ped.setOrdenCompra(ordenCompra);
        ped.setEstado(estado);
        ped.setObservacion(observacion);
        ped.setObservacionInterna(txtObsInterna.getText());
        ped.setCampo2(campo2);
        ped.setCampo3(campo3);
            
        return ped;
    }
    
//------------------------ Consultar --------------------------------------
    
    private void consultarClientePorId(int iddecliente) throws Exception {
        cliente = clientecontroler.ClienteBuscar1(iddecliente);
        if (cliente != null) {

            txtRazSocial.setText(cliente.getRazonSocial());
                        
        } else {
            JOptionPane.showMessageDialog(null, "Cliente no registrado por ahora");
            //System.out.println("Error");
        }
    }
    
    private void consultarUsuario1() throws Exception {
        usuario = usuariocontroler.UsuarioBuscar2(idUsuario);
        if (usuario != null) {
            nombreUs = usuario.getNombres();
            apellidoUs = usuario.getApellidos();
            nombreUsuario = nombreUs + " " + apellidoUs;
            txtUsuario.setText(nombreUsuario);
        } else {
            JOptionPane.showMessageDialog(null, "Usuario no registrado");
            //System.out.println("Error");
        }
    }
    
    
    private void consultarPedido(int numeroPedido, int anio) throws Exception {
        pedido = pedidocontroler.PedidoBuscar(numeroPedido, anio);
        if (pedido != null) {
            
            idPedido=pedido.getIdPedido();
            txtNumPedido.setText(String.format("%06d",pedido.getNumPedido()));
            numero=txtNumPedido.getText();
            System.out.println("numero de pedido:"+numero);
            numPedido=pedido.getNumPedido();
            idProf=pedido.getIdProforma();
            
            idCliente = pedido.getIdCliente();
            consultarClientePorId(idCliente);
            
            idContactCli = pedido.getIdContactoCliente();
               
            idUsuario = pedido.getIdUsuario();
            consultarUsuario1();
            
            moneda = pedido.getMoneda();
            txtMoneda.setText(pedido.getMoneda());
            formPago=pedido.getFormPago();
            txtFormPago.setText(pedido.getFormPago());

            tipo = pedido.getTipo();
            txtTipo.setText(pedido.getTipo());
                        
            fechaEmision=pedido.getFechaEmision();
            
            dia1=pedido.getDia1();
            dia2=pedido.getDia2();
            ordenCompra=pedido.getOrdenCompra();
            txtOrdenCompra.setText(pedido.getOrdenCompra());
            txtTiempoEntrega.setText(dia1+" A "+dia2+" HABILES");
           
            
            estado=pedido.getEstado();
            System.out.println("Estado de pedido: " + estado);

            String testValue5 = estado;
            for (int i = 0; i < comboBoxEstado.getModel().getSize(); i++) {
                if (comboBoxEstado.getItemAt(i).equals(testValue5)) {
                    System.out.println(i);
                    comboBoxEstado.setSelectedIndex(i);
                    break;
                }
            }
            
            observacion=pedido.getObservacion();
            
            observacionInterna=pedido.getObservacionInterna();
            txtObsInterna.setText(pedido.getObservacionInterna());

        } else {
            JOptionPane.showMessageDialog(null, "Pedido no registrado");
           
            System.out.println("Pedido no registrado");
        }
    }
    
    private void consultarAnioPedido(String fech, int num) throws Exception {
        pedido = pedidocontroler.PedidoBuscarAnio(fech, num);
        if (pedido != null) {
            anioCadena = pedido.getAnio();
            anio = Integer.parseInt(anioCadena);
        }
    }
//------------------------------ Tabla ------------------------------------------------------
 void listaPedido(String valorFiltro,String filtrolike) {
        List<Pedido> lista;
        try {
            lista = pedidocontroler.PedidoFiltrar(valorFiltro, filtrolike);
            verPedido(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    void verPedido(List<Pedido> lista) {
        String numeropedido;
        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        tabla.setRowCount(0);
        for (Pedido ped : lista) {
            numeropedido=String.format("%06d",ped.getNumPedido());
            Object[] fila = {numeropedido, ped.getCodCotiz(), ped.getRazSocial(), ped.getContacto(), ped.getFechaEmision(), 
                ped.getTipo(),ped.getEstado(), ped.getUsuario(), ped.getObservacionInterna()};
            tabla.addRow(fila);
        }
    }
    
// ------------------------------------ TABLA  DETALLE PROFORMA ---------------------------------------
    void listaDetalleProforma(int idpro) {
        List<DetalleProforma> lista;
        try {
            lista = detalleproformacontroler.DetalleProformaFiltrar(idpro);
            verDetalleProforma(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    private void verDetalleProforma(List<DetalleProforma> lista) {
        String it, vu, f;
        float uv;
        DefaultTableModel tabla = (DefaultTableModel) jTable2.getModel();
        tabla.setRowCount(0);
        for (DetalleProforma detProf : lista) {
            if (!"".equals(detProf.getPrecioUnitario())) {
                it = detProf.getImporte();
            } else {
                it = "";
            }
            if (!"".equals(detProf.getPrecioUnitario())) {
                f = detProf.getItem1();
            } else {
                f = "";
            }

            Object[] fila = {detProf.getIdDetalleProforma(), detProf.getItem(), detProf.getCantidad(), detProf.getDescripcion(), detProf.getPrecioUnitario(), f, it};
            tabla.addRow(fila);
        }
    }
    
    void consultarCalculoProforma(int iddp) throws Exception {
        detalleproforma =detalleproformacontroler.DetalleProformaBuscar1(iddp) ;

        if (detalleproforma != null) {
           
            labelIgv.setText(detalleproforma.getIgv());
            labelSubtotal.setText(detalleproforma.getSubtotal());
            labelTotal.setText(detalleproforma.getTotal());
        } else {
            System.out.println("Error");
        }
    }
  //----------------------------------- Habilitar ----------------------------------
  void habilitarModificar(){
        comboBoxEstado.setEnabled(true);
        txtObsInterna.setEnabled(true);
        txtNumPedido.setEnabled(false);
        txtRazSocial.setEnabled(false);
        txtTipo.setEnabled(false);
        txtMoneda.setEnabled(false);
        txtFormPago.setEnabled(false);
        txtTiempoEntrega.setEnabled(false);
        txtUsuario.setEnabled(false);
        txtNumCot.setEnabled(false);
        txtOrdenCompra.setEnabled(false);
        
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(true);
        buttonVerCotizacion.setEnabled(false);
//        buttonModificarPedido.setEnabled(false);
        buttonGenerarOrden.setEnabled(false);
    }

     void habilitarInicio(){
        comboBoxEstado.setEnabled(false);
        txtObsInterna.setEnabled(false);
        txtRazSocial.setEnabled(false);
        txtNumPedido.setEnabled(false);
        txtFormPago.setEnabled(false);
        txtMoneda.setEnabled(false);
        txtTiempoEntrega.setEnabled(false);
        txtTipo.setEnabled(false);
        txtUsuario.setEnabled(false);
        txtNumCot.setEnabled(false);
        txtOrdenCompra.setEnabled(false);
        
        
         buttonModificar.setEnabled(false);
         buttonGuardar.setEnabled(false);
         buttonVerCotizacion.setEnabled(false);
//         buttonModificarPedido.setEnabled(false);
         buttonGenerarOrden.setEnabled(false);
     }
    
    void habilitarGuardar() {
        comboBoxEstado.setEnabled(false);
        txtObsInterna.setEnabled(false);
        txtRazSocial.setEnabled(false);
        txtNumPedido.setEnabled(false);
        txtFormPago.setEnabled(false);
        txtMoneda.setEnabled(false);
        txtTiempoEntrega.setEnabled(false);
        txtTipo.setEnabled(false);
        txtUsuario.setEnabled(false);
        txtNumCot.setEnabled(false);
        txtOrdenCompra.setEnabled(false);

        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
        buttonVerCotizacion.setEnabled(true);
//        buttonModificarPedido.setEnabled(true);
        buttonGenerarOrden.setEnabled(true);
    }
    
//------------------------ Limpiar ---------------------------------------------
    void limpiar() {

        comboBoxEstado.setSelectedIndex(0);
        txtObsInterna.setText("");
        labelIgv.setText("000000.00");
        labelSubtotal.setText("000000.00");
        labelTotal.setText("000000.00");
        txtNumPedido.setText("");
        txtRazSocial.setText("");
        txtFormPago.setText("");
        txtMoneda.setText("");
        txtTiempoEntrega.setText("");
        txtTipo.setText("");
        txtUsuario.setText("");
        txtNumCot.setText("");
        txtOrdenCompra.setText("");
    }
    
    //-------------------------------------- Extraer año a fecha -----------------------------------------
    public String anioActual(String f) throws ParseException {
        Calendar fecha = Calendar.getInstance();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        Date fechaDate = null;

        fechaDate = formato.parse(f);

        SimpleDateFormat formatofecha = new SimpleDateFormat("yyyy");
        return formatofecha.format(fechaDate);

    }

}
