/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controller.ArticuloController;
import controller.InventarioController;
import database.AccesoDB;
import entity.Articulo;
import entity.Inventario;
import exportarexcel.clsExportarExcel;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ARCRODINPC-06
 */
public class ArticulosVista extends javax.swing.JInternalFrame {

    /**
     * Creates new form ArticulosVista
     */
    
    Connection conexion;
    CallableStatement cs = null;
    ResultSet rs = null;
    Statement s = null;
    PreparedStatement ps = null;
    String q;
    
    int ultimoId;
    String idInvCombo;
    
    String filtro="concat(articulo.diametro,' ',articulo.unidadMedidaDiam)";
    int tabla;
    String codArt;
    String codUb;
    String LonReal;
    
    int idInventario;
    int idArticulo;
    String codArti;
    String codUbicacion;
    String nombre;
    String dia;
    String diaPulg;
    String longReal; //diametroInterno
    String unidadDia;
    String longi;
    String unidadLong;
    int cant;
    String Proce;
    String obs;
    
   float num, res,nume,deno, resFra;
    
    public ArticulosVista() throws SQLException, ClassNotFoundException, Exception {
        initComponents();
        listaArticulo(filtro, txtFiltro.getText(), idInventario);
        habilitarInicio();
        CargarInventarios();
        consultarUltimoId();
        txtNum.setText("0");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonCerrar = new javax.swing.JButton();
        txtFiltro = new javax.swing.JTextField();
        comboBoxFiltro = new javax.swing.JComboBox<>();
        buttonActualizar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtCodArt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNomArt = new javax.swing.JTextField();
        buttonLimpiar = new javax.swing.JButton();
        comboBoxInventario = new javax.swing.JComboBox<>();
        txtFechInventario = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtEncargado = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtNum = new javax.swing.JTextField();
        txtNumerador = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtDenominador = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtNumMm = new javax.swing.JTextField();
        buttonExportExcel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCodUbi = new javax.swing.JTextField();
        txtLongReal = new javax.swing.JTextField();
        txtObser = new javax.swing.JTextField();
        buttonModificar = new javax.swing.JButton();
        buttonGuardar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Vista de Articulos");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idArt.", "Inv.", "Codigo Articulo", "Codigo Ubicacion", "Diametro (MM)", "Diametro(Pulg)", "Procedencia", "Stock Inicial (MM)", "Stock Fisico (MM)", "Stock Real (MM)", "Observacion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(30);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(105);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(125);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(105);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(105);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(10).setPreferredWidth(242);
        }

        buttonCerrar.setText("Cerrar");
        buttonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCerrarActionPerformed(evt);
            }
        });

        txtFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFiltroActionPerformed(evt);
            }
        });
        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroKeyReleased(evt);
            }
        });

        comboBoxFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "COD. ARTICULO", "COD. UBICACION", "DIAMETRO", "PROCEDENCIA", "BARRAS", "TUBOS" }));
        comboBoxFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxFiltroItemStateChanged(evt);
            }
        });

        buttonActualizar.setText("Actualizar");
        buttonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActualizarActionPerformed(evt);
            }
        });

        jLabel4.setText("Cod. Articulo:");

        jLabel5.setText("Nombre del Articulo:");

        buttonLimpiar.setText("limpiar");
        buttonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLimpiarActionPerformed(evt);
            }
        });

        comboBoxInventario.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxInventarioItemStateChanged(evt);
            }
        });

        jLabel6.setText("Fecha de Registro:");

        jLabel7.setText("Encargado:");

        jLabel8.setText("Estado:");

        jLabel9.setText("Inventario:");

        jLabel10.setText("Ingrese en (in):");

        jLabel11.setText("/");

        jButton1.setText("Convertir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel12.setText("Salida en (mm):");

        buttonExportExcel.setText("ExportExcel");
        buttonExportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExportExcelActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Cod. Ubicación:");

        jLabel2.setText("Longitud Real:");

        jLabel3.setText("Observación:");

        buttonModificar.setText("Modificar");
        buttonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarActionPerformed(evt);
            }
        });

        buttonGuardar.setText("Guardar");
        buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtCodUbi, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLongReal, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtObser, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtCodUbi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(txtLongReal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(buttonModificar))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtObser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonGuardar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboBoxInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFechInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEncargado, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNumerador, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDenominador, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNumMm, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                        .addComponent(buttonExportExcel)
                        .addGap(19, 19, 19))))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCodArt, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNomArt, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFechInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(txtEncargado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonLimpiar)
                    .addComponent(jLabel10)
                    .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumerador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtDenominador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel12)
                    .addComponent(txtNumMm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonExportExcel))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCodArt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(txtNomArt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonActualizar)
                            .addComponent(buttonCerrar)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCerrarActionPerformed
        dispose();
        
    }//GEN-LAST:event_buttonCerrarActionPerformed

    private void txtFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyReleased
       listaArticulo(filtro,txtFiltro.getText(), idInventario);
    }//GEN-LAST:event_txtFiltroKeyReleased

    private void comboBoxFiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxFiltroItemStateChanged
        if (comboBoxFiltro.getSelectedItem() == "COD. ARTICULO") {
            filtro = "articulo.codigoArticulo";
            listaArticulo(filtro, txtFiltro.getText(), idInventario);
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "COD. UBICACION") {
            filtro = "articulo.codigoUbicacion";
            listaArticulo(filtro, txtFiltro.getText(), idInventario);
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "DIAMETRO") {
            filtro = "concat(articulo.diametro,' ',articulo.unidadMedidaDiam)";
            listaArticulo(filtro, txtFiltro.getText(), idInventario);
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "PROCEDENCIA") {
            filtro = "articulo.procedencia";
            listaArticulo(filtro, txtFiltro.getText(), idInventario);
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "BARRAS") {
            filtro = "articulo.nombre";
            listaArticulo(filtro, "BARRA", idInventario);
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "TUBOS") {
            filtro = "articulo.nombre";
            listaArticulo(filtro,"TUBO", idInventario);
            System.out.println(filtro);
        } else if (comboBoxFiltro.getSelectedItem() == "SELECCIONAR") {
            filtro = "concat(articulo.diametro,' ',articulo.unidadMedidaDiam)";
            listaArticulo(filtro, txtFiltro.getText(), idInventario);
            System.out.println(filtro);
        }
    }//GEN-LAST:event_comboBoxFiltroItemStateChanged

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        limpiarTabla();
        habilitarInicio();
        
        tabla=jTable1.getSelectedRow();
        idArticulo=Integer.parseInt(jTable1.getValueAt(tabla,0).toString());
        idInventario=Integer.parseInt( jTable1.getValueAt(tabla,1).toString());
        codArt = jTable1.getValueAt(tabla,2).toString();
        codUb = jTable1.getValueAt(tabla, 3).toString();
        LonReal = jTable1.getValueAt(tabla, 9).toString();
        
        try {
            consultarArticulo(codArt,idInventario);
        } catch (Exception ex) {
            Logger.getLogger(ArticulosVista.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void buttonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActualizarActionPerformed
        listaArticulo(filtro, txtFiltro.getText(), idInventario);
    }//GEN-LAST:event_buttonActualizarActionPerformed

    private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGuardarActionPerformed
        procesar(2);
        listaArticulo(filtro, txtFiltro.getText(), idInventario);
        habilitarInicio();
    }//GEN-LAST:event_buttonGuardarActionPerformed

    private void buttonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarActionPerformed
        habilitarModificar();
    }//GEN-LAST:event_buttonModificarActionPerformed

    private void buttonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLimpiarActionPerformed
        limpiarConvertir();
    }//GEN-LAST:event_buttonLimpiarActionPerformed

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_UP)) {
            limpiarTabla();
            habilitarInicio();
            tabla = jTable1.getSelectedRow();
            idInventario = Integer.parseInt(jTable1.getValueAt(tabla, 1).toString());
            codArt = jTable1.getValueAt(tabla, 2).toString();
            codUb = jTable1.getValueAt(tabla, 3).toString();
            LonReal = jTable1.getValueAt(tabla, 9).toString();
//            ArticuloLongitudReal artLonReal = null;
            try {
                consultarArticulo(codArt, idInventario);
            } catch (Exception ex) {
                Logger.getLogger(ArticulosVista.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jTable1KeyReleased

    private void comboBoxInventarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxInventarioItemStateChanged
        if (comboBoxInventario.getSelectedIndex() != 0) {
            idInvCombo = comboBoxInventario.getSelectedItem().toString();
            idInventario = Integer.parseInt(idInvCombo);

            System.out.println(idInvCombo);

            try {
                consultar(idInventario);
           } catch (Exception ex) {
                Logger.getLogger(ArticulosDeInventario.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            listaArticulo(filtro,txtFiltro.getText(), idInventario);

        } else {

        }
    }//GEN-LAST:event_comboBoxInventarioItemStateChanged

    private void txtFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFiltroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFiltroActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if("".equals(txtNumerador.getText())&& "".equals(txtDenominador.getText())){
            calculo();
            System.out.println("vacio");
        }else{
            calculoFracion();
            System.out.println("no vacio");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void buttonExportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExportExcelActionPerformed
        clsExportarExcel objeto = new clsExportarExcel();
        try {
            objeto.exportarExcel(jTable1);
        } catch (IOException ex) {
            Logger.getLogger(CajaChicaRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonExportExcelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonActualizar;
    private javax.swing.JButton buttonCerrar;
    private javax.swing.JButton buttonExportExcel;
    private javax.swing.JButton buttonGuardar;
    private javax.swing.JButton buttonLimpiar;
    private javax.swing.JButton buttonModificar;
    private javax.swing.JComboBox<String> comboBoxFiltro;
    private javax.swing.JComboBox<String> comboBoxInventario;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCodArt;
    private javax.swing.JTextField txtCodUbi;
    private javax.swing.JTextField txtDenominador;
    private javax.swing.JTextField txtEncargado;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtFechInventario;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JTextField txtLongReal;
    private javax.swing.JTextField txtNomArt;
    private javax.swing.JTextField txtNum;
    private javax.swing.JTextField txtNumMm;
    private javax.swing.JTextField txtNumerador;
    private javax.swing.JTextField txtObser;
    // End of variables declaration//GEN-END:variables

ArticuloController obj =new ArticuloController();
Articulo pro;

InventarioController inventariocontroler = new InventarioController();
Inventario inventario;



 private void listaArticulo(String filtrar,String filter, int idv) {
        List<Articulo> lista;
        try {
            lista = obj.ArticuloFiltrar(filtrar,filter, idv);
            verPedido(lista);

        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("ERROR: " + e.getMessage());
        }
    }

    private void verPedido(List<Articulo> lista) {
       
        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        tabla.setRowCount(0);
        
        for (Articulo art : lista) {
            
//            
      
            Object[] fila = {art.getAidArticulo(),art.getIdInventario(),art.getCodigoArticulo(), art.getCodigoUbicacion(),
                             art.getDiametro(),art.getDiamPulg(),art.getProcedencia(), art.getLongitud(),art.getLongCortes(), 
                             art.getLongitudReal(), art.getObservacion()};
            tabla.addRow(fila);

        }
    }
    
  //------------------------ Consultar Articulo ----------------------
     private void consultarArticulo(String codigo, int iv) throws Exception {
        pro = obj.ArticuloBuscar(codigo, iv);
        if (pro != null) {

            idArticulo = pro.getAidArticulo();
            idInventario=pro.getIdInventario();
            txtCodArt.setText(pro.getCodigoArticulo());
            codArti = pro.getCodigoArticulo();
            txtCodUbi.setText(pro.getCodigoUbicacion()); 
            codUbicacion = pro.getCodigoUbicacion();
            txtNomArt.setText(pro.getNombre());
            nombre = pro.getNombre();
             txtObser.setText(pro.getObservacion());
            obs = pro.getObservacion();//Observación
            dia = pro.getDiametro();
            diaPulg=pro.getDiamPulg();
            txtLongReal.setText(pro.getLongitudReal());
            longReal = pro.getLongitudReal(); //diametroInterno
            unidadDia = pro.getUnidadMedidaDia();
            longi = pro.getLongitud();
            unidadLong = pro.getUnidadMedidaLong();
            cant = pro.getCantidad();
            Proce = pro.getProcedencia();

        } else {
            JOptionPane.showMessageDialog(null, "Articulo no registrado");
            //System.out.println("Error");
        }
    }
   

//-------------------- Limpiar ---------------------------------

    void limpiar() {        
        txtCodUbi.setText("");        
        txtLongReal.setText("");
        txtObser.setText("");
        txtCodArt.setText("");
        txtNomArt.setText("");
        txtFiltro.setText("");
        
    }
    
     void limpiarTabla() {        
        txtCodUbi.setText("");        
        txtLongReal.setText("");
        txtObser.setText("");
        txtCodArt.setText("");
        
    }
    
    void habilitarModificar() {
        txtCodArt.setEnabled(false);
        txtCodUbi.setEnabled(true);
        txtLongReal.setEnabled(true);
        txtNomArt.setEnabled(false);
        txtObser.setEnabled(true);
        buttonModificar.setEnabled(false);
        buttonGuardar.setEnabled(true);
    }

     void habilitarInicio() {
        txtCodArt.setEnabled(false);
        txtCodUbi.setEnabled(false);
        txtLongReal.setEnabled(false);
        txtNomArt.setEnabled(false);
        txtObser.setEnabled(false);
        buttonModificar.setEnabled(true);
        buttonGuardar.setEnabled(false);
    }
     //----------------------- Procesar ---------------------
    
    private void procesar(int op) {
       pro=leerDatos();
        try {
            String msg=obj.ArticuloProcesar(pro, pro,op);
            JOptionPane.showMessageDialog(null, msg);            
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
             System.out.println("Error"+e.getMessage());
        }       
   }
    
 //--------------------------- Leer Datos -------------------------------
    
   private Articulo leerDatos() {
        Articulo art = new Articulo();
        
        art.setIdInventario(idInventario);
        art.setCodigoArticulo(codArti);
        art.setCodigoUbicacion(txtCodUbi.getText());
        art.setNombre(nombre);
        art.setObservacion(txtObser.getText());
        art.setDiametro(dia);
        art.setDiamPulg(diaPulg);
        art.setLongitudReal(txtLongReal.getText());//longitud real
        art.setUnidadMedidaDia(unidadDia);
        art.setLongitud(longi);
        art.setUnidadMedidaLong(unidadLong);
        art.setCantidad(cant);
        art.setProcedencia(Proce);
        art.setAidArticulo(idArticulo);
        
        return art;
    }
   
//--------------------------------- Cargar Inventario ------------------------------
  
   public JComboBox<String> CargarInventarios() throws SQLException, ClassNotFoundException {
        comboBoxInventario.removeAllItems();
        comboBoxInventario.addItem("Inventario");
        try {
            conexion = AccesoDB.obtener();
            q = "select idInventario from inventario";
            ps = conexion.prepareStatement(q);
            rs = ps.executeQuery();
            while (rs.next()) {
                comboBoxInventario.addItem(Integer.toString(rs.getInt(1)));
            }
            rs.close();
            ps.close();

        } catch (SQLException e) {
            throw e;

        }
        return comboBoxInventario;
    }

   // ------------------ Ultimo id Inventario -------------------------------------
private void consultarUltimoId() throws Exception {
        inventario = inventariocontroler.InventarioBuscarUltimoId();
        if (inventario != null) {
        }
        ultimoId = inventario.getIdInventario();
        idInventario=ultimoId;
        
         String testValue2 = Integer.toString(idInventario);
            for (int i = 0; i < comboBoxInventario.getModel().getSize(); i++) {
                if (comboBoxInventario.getItemAt(i).equals(testValue2)) {
                    System.out.println(i);
                    comboBoxInventario.setSelectedIndex(i);
                    break;
                }
            }
        consultar(idInventario);
        
    }

void consultar(int id) throws Exception{
        inventario= inventariocontroler.InventarioBuscar(id);
        if (inventario != null) {
            System.out.println("22222222222222222");
            idInventario=inventario.getIdInventario();
             
            txtFechInventario.setText(inventario.getFechReg());
            txtEncargado.setText(inventario.getEncargado());
            txtEstado.setText(inventario.getEstado());
           

        } else {
            JOptionPane.showMessageDialog(null, "Articulo no registrado");
            //System.out.println("Error");
        }
    } 

    void calculo() {

        DecimalFormat df = new DecimalFormat("0.00");
        num = Float.parseFloat(txtNum.getText());

        res = (float) (num * 25.4);
        txtNumMm.setText(df.format(res));
    }
   
    void calculoFracion() {
         
        DecimalFormat df = new DecimalFormat("0.00");
        String cero;
        num = Float.parseFloat(txtNum.getText());
        nume = Float.parseFloat(txtNumerador.getText());
        deno = Float.parseFloat(txtDenominador.getText());
        cero=Float.toString(num);
        
         resFra = num + (nume / deno);
         res = (float) (resFra * 25.4);
        
     
        txtNumMm.setText(df.format(res));
    }
    
     void limpiarConvertir(){
        txtNumerador.setText("");
        txtDenominador.setText("");
        txtNum.setText("0");
        txtNumMm.setText("");
       
    }
}